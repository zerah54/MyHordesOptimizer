name: (Script) Update Version

on:
  workflow_dispatch

jobs:
  script-change-version:    
  
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@main

      - name: Read Script
        id: script
        uses: juliangruber/read-file-action@v1
        with:
          path: ./Scripts/Tampermonkey/my_hordes_optimizer.user.js

      - name: Read Script 1
        id: read-script-1
        run: sed -n 3p ./Scripts/Tampermonkey/my_hordes_optimizer.user.js

      - name: Read Script 1a
        id: read-script-1a
        run: echo "test=sed -n 3p ./Scripts/Tampermonkey/my_hordes_optimizer.user.js" >> $GITHUB_OUTPUT
          
      - name: Read Script 2
        run: echo "test2=$(sed -n 3p ./Scripts/Tampermonkey/my_hordes_optimizer.user.js)" >> $GITHUB_OUTPUT

      - name: Read Script 3
        id: script-test-3
        run: head -n 3 ./Scripts/Tampermonkey/my_hordes_optimizer.user.js
        
      - name: Test Read Variable
        run: |
          echo "Read Script 1 ${{ steps.read-script-1 }}"
          echo "Read Script 1a ${{ steps.read-script-1.outputs }}"
          echo "Read Script 1 ${{ steps.read-script-1a }}"
          echo "Read Script 1a ${{ steps.read-script-1a.outputs.test }}"
          echo "Read Script 2 ${{ env.test2 }}"
          echo "Read Script 2a ${{ env.test2.outputs }}"
          echo "Read Script 3 ${{ steps.script-test-3 }}"

      - name: Test Read Variable 2        
        env:
          SCRIPT-TEST-1: ${{ toJSON(steps.read-script-1) }}
          SCRIPT-TEST-1a: ${{ toJSON(steps.read-script-1a) }}
          SCRIPT-TEST-2: ${{ toJSON(env.test2) }}
          SCRIPT-TEST-3: ${{ toJSON(steps.script-test-3) }}
        run: |
          echo "$SCRIPT-TEST-1"
          echo "$SCRIPT-TEST-1a"
          echo "$SCRIPT-TEST-2"
          echo "$SCRIPT-TEST-3"

      - name: Match Version
        uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text:     ${{ steps.script.outputs.content }}
          regex:     '@version *(.+)'
          flags:     gm
          
      - name: Write Script
        run: echo "${{ steps.regex-match.outputs }}"
