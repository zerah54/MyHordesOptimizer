{
  "water_tl0": {
    "label": "Trinken",
    "priority": 1,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "not_thirsty",
      "drink_mesg",
      "drink_tl0a",
      "drink_tl0b"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_ap_1",
      "consume_item"
    ],
    "escort_message_key": "escort_water_drink",
    "message_key": "water_drink"
  },
  "water_tl1a": {
    "label": "Trinken",
    "priority": 1,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "drink_hide",
      "drink_tl1"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_ap_1",
      "drink_ap_2",
      "consume_item"
    ],
    "escort_message_key": "escort_water_drink",
    "message_key": "water_drink"
  },
  "water_tl1b": {
    "label": "Trinken",
    "priority": 1,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "drink_rhide",
      "drink_tl1"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_ap_2",
      "consume_item"
    ],
    "escort_message_key": "escort_water_drink",
    "message_key": "water_drink"
  },
  "water_tl2": {
    "label": "Trinken",
    "priority": 1,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "drink_tl2"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_no_ap",
      "consume_item"
    ],
    "escort_message_key": "escort_water_drink_dehydration",
    "message_key": "water_drink_dehydration"
  },
  "water_g": {
    "label": "Trinken",
    "priority": 1,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "role_ghoul",
      "drink_mesg"
    ],
    "result": [
      "inflict_wound",
      "consume_item"
    ],
    "escort_message_key": "escort_water_drink",
    "message_key": "water_drink_ghoul"
  },
  "potion_tl0a": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "not_yet_immune",
      "drink_hide",
      "drink_tl0a",
      "drink_tl0b"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_ap_1",
      "consume_item",
      {
        "group": "g_immune_98"
      }
    ],
    "message": "Du hast soeben den mystischen Trank getrunken. Hoffen wir, dass dieser Schamane weiß, was er tut...",
    "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
  },
  "potion_tl0b": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "not_yet_immune",
      "drink_rhide",
      "drink_tl0a",
      "drink_tl0b"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "consume_item",
      {
        "group": "g_immune_98"
      }
    ],
    "message": "Du hast soeben den mystischen Trank getrunken. Hoffen wir, dass dieser Schamane weiß, was er tut...",
    "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
  },
  "potion_tl1a": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "not_yet_immune",
      "drink_hide",
      "drink_tl1"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_ap_1",
      "drink_ap_2",
      "consume_item",
      {
        "group": "g_immune_98"
      }
    ],
    "message": "Du hast soeben den mystischen Trank getrunken. Hoffen wir, dass dieser Schamane weiß, was er tut...",
    "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
  },
  "potion_tl1b": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "not_yet_immune",
      "drink_rhide",
      "drink_tl1"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_ap_2",
      "consume_item",
      {
        "group": "g_immune_98"
      }
    ],
    "message": "Du hast soeben den mystischen Trank getrunken. Hoffen wir, dass dieser Schamane weiß, was er tut...",
    "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
  },
  "potion_tl2": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "not_yet_immune",
      "drink_tl2"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_no_ap",
      "consume_item",
      {
        "group": "g_immune_98"
      }
    ],
    "message": "Du hast soeben den mystischen Trank getrunken. Hoffen wir, dass dieser Schamane weiß, was er tut...",
    "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
  },
  "potion_g": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "role_ghoul",
      "not_yet_immune",
      "drink_mesg"
    ],
    "result": [
      "inflict_wound",
      "consume_item",
      {
        "group": "g_immune_98"
      }
    ],
    "message": "Du hast soeben den mystischen Trank getrunken. Hoffen wir, dass dieser Schamane weiß, was er tut...",
    "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
  },
  "potion_tl0a_immune": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "immune",
      "drink_hide",
      "drink_tl0a",
      "drink_tl0b"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_ap_1",
      "consume_item",
      {
        "group": "g_immune_98"
      }
    ],
    "message": "Tja, Vertrauen ist gut, Kontrolle ist besser... Ja, du wurdest bereits geschützt!",
    "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
  },
  "potion_tl0b_immune": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "immune",
      "drink_rhide",
      "drink_tl0a",
      "drink_tl0b"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "consume_item",
      {
        "group": "g_immune_98"
      }
    ],
    "message": "Tja, Vertrauen ist gut, Kontrolle ist besser... Ja, du wurdest bereits geschützt!",
    "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
  },
  "potion_tl1a_immune": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "immune",
      "drink_hide",
      "drink_tl1"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_ap_1",
      "drink_ap_2",
      "consume_item",
      {
        "group": "g_immune_98"
      }
    ],
    "message": "Tja, Vertrauen ist gut, Kontrolle ist besser... Ja, du wurdest bereits geschützt!",
    "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
  },
  "potion_tl1b_immune": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "immune",
      "drink_rhide",
      "drink_tl1"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_ap_2",
      "consume_item",
      {
        "group": "g_immune_98"
      }
    ],
    "message": "Tja, Vertrauen ist gut, Kontrolle ist besser... Ja, du wurdest bereits geschützt!",
    "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
  },
  "potion_tl2_immune": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "immune",
      "drink_tl2"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_no_ap",
      "consume_item",
      {
        "group": "g_immune_98"
      }
    ],
    "message": "Tja, Vertrauen ist gut, Kontrolle ist besser... Ja, du wurdest bereits geschützt!",
    "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
  },
  "potion_g_immune": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "role_ghoul",
      "immune",
      "drink_mesg"
    ],
    "result": [
      "inflict_wound",
      "consume_item",
      {
        "group": "g_immune_98"
      }
    ],
    "message": "Tja, Vertrauen ist gut, Kontrolle ist besser... Ja, du wurdest bereits geschützt!",
    "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
  },
  "watercan3_tl0": {
    "label": "Trinken",
    "priority": 4,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "not_thirsty",
      "drink_mesg",
      "drink_tl0a",
      "drink_tl0b"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_ap_1",
      "produce_watercan2"
    ],
    "escort_message_key": "escort_water_drink",
    "message_key": "water_drink"
  },
  "watercan3_tl1a": {
    "label": "Trinken",
    "priority": 4,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "drink_hide",
      "drink_tl1"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_ap_1",
      "drink_ap_2",
      "produce_watercan2"
    ],
    "escort_message_key": "escort_water_drink",
    "message_key": "water_drink"
  },
  "watercan3_tl1b": {
    "label": "Trinken",
    "priority": 4,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "drink_rhide",
      "drink_tl1"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_ap_2",
      "produce_watercan2"
    ],
    "escort_message_key": "escort_water_drink",
    "message_key": "water_drink"
  },
  "watercan3_tl2": {
    "label": "Trinken",
    "priority": 4,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "drink_tl2"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_no_ap",
      "produce_watercan2"
    ],
    "escort_message_key": "escort_water_drink_dehydration",
    "message_key": "water_drink_dehydration"
  },
  "watercan3_g": {
    "label": "Trinken",
    "priority": 4,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "role_ghoul",
      "drink_mesg"
    ],
    "result": [
      "inflict_wound",
      "produce_watercan2"
    ],
    "escort_message_key": "escort_water_drink",
    "message_key": "water_drink_ghoul"
  },
  "watercan2_tl0": {
    "label": "Trinken",
    "priority": 3,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "not_thirsty",
      "drink_mesg",
      "drink_tl0a",
      "drink_tl0b"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_ap_1",
      "produce_watercan1"
    ],
    "escort_message_key": "escort_water_drink",
    "message_key": "water_drink"
  },
  "watercan2_tl1a": {
    "label": "Trinken",
    "priority": 3,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "drink_hide",
      "drink_tl1"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_ap_1",
      "drink_ap_2",
      "produce_watercan1"
    ],
    "escort_message_key": "escort_water_drink",
    "message_key": "water_drink"
  },
  "watercan2_tl1b": {
    "label": "Trinken",
    "priority": 3,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "drink_rhide",
      "drink_tl1"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_ap_2",
      "produce_watercan1"
    ],
    "escort_message_key": "escort_water_drink",
    "message_key": "water_drink"
  },
  "watercan2_tl2": {
    "label": "Trinken",
    "priority": 3,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "drink_tl2"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_no_ap",
      "produce_watercan1"
    ],
    "escort_message_key": "escort_water_drink_dehydration",
    "message_key": "water_drink_dehydration"
  },
  "watercan2_g": {
    "label": "Trinken",
    "priority": 3,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "role_ghoul",
      "drink_mesg"
    ],
    "result": [
      "inflict_wound",
      "produce_watercan1"
    ],
    "escort_message_key": "escort_water_drink",
    "message_key": "water_drink_ghoul"
  },
  "watercan1_tl0": {
    "label": "Trinken",
    "priority": 2,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "not_thirsty",
      "drink_mesg",
      "drink_tl0a",
      "drink_tl0b"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_ap_1",
      "produce_watercan0"
    ],
    "escort_message_key": "escort_water_drink",
    "message_key": "water_drink"
  },
  "watercan1_tl1a": {
    "label": "Trinken",
    "priority": 2,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "drink_hide",
      "drink_tl1"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_ap_1",
      "drink_ap_2",
      "produce_watercan0"
    ],
    "escort_message_key": "escort_water_drink",
    "message_key": "water_drink"
  },
  "watercan1_tl1b": {
    "label": "Trinken",
    "priority": 2,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "drink_rhide",
      "drink_tl1"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_ap_2",
      "produce_watercan0"
    ],
    "escort_message_key": "escort_water_drink",
    "message_key": "water_drink"
  },
  "watercan1_tl2": {
    "label": "Trinken",
    "priority": 2,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_role_ghoul",
      "drink_tl2"
    ],
    "result": [
      "contaminated_zone_infect",
      "reset_thirst_counter",
      "drink_no_ap",
      "produce_watercan0"
    ],
    "escort_message_key": "escort_water_drink_dehydration",
    "message_key": "water_drink_dehydration"
  },
  "watercan1_g": {
    "label": "Trinken",
    "priority": 2,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "role_ghoul",
      "drink_mesg"
    ],
    "result": [
      "inflict_wound",
      "produce_watercan0"
    ],
    "escort_message_key": "escort_water_drink",
    "message_key": "water_drink_ghoul"
  },
  "water_no_effect": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [],
    "result": [
      "contaminated_zone_infect",
      "consume_item"
    ],
    "message": "Du hast {item} getrunken, aber scheinbar geschieht nichts..."
  },
  "alcohol": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_drunk",
      "not_hungover"
    ],
    "result": [
      "contaminated_zone_infect",
      "just_ap6",
      "drunk",
      "consume_item"
    ],
    "message": "Dir ist schwindelig und du würdest dich am liebsten übergeben... Egal was, Hauptsache <strong>du bekommst wieder einen klaren Kopf</strong>."
  },
  "alcohol_dx": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [],
    "result": [
      "contaminated_zone_infect",
      "just_ap6",
      "drunk",
      "consume_item"
    ],
    "message": "Dir ist schwindelig und du würdest dich am liebsten übergeben... Egal was, Hauptsache <strong>du bekommst wieder einen klaren Kopf</strong>."
  },
  "drink_quantum_1": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drink_tl0a",
      "drink_tl0b"
    ],
    "result": [
      "contaminated_zone_infect",
      "plus_8sp_e",
      "consume_item",
      "get_thristy",
      "msg_quantum_thristy"
    ],
    "message_key": "msg_quantum_basic"
  },
  "drink_quantum_2": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drink_tl1"
    ],
    "result": [
      "contaminated_zone_infect",
      "plus_8sp_e",
      "consume_item",
      "get_dehydrated",
      "msg_quantum_dehydrated"
    ],
    "message_key": "msg_quantum_basic"
  },
  "drink_quantum_3": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drink_tl2"
    ],
    "result": [
      "contaminated_zone_infect",
      "plus_8sp_e",
      "consume_item",
      "get_dehydrated",
      "msg_quantum_dehydrated"
    ],
    "message_key": "msg_quantum_basic"
  },
  "coffee": {
    "label": "Trinken",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [],
    "result": [
      "contaminated_zone_infect",
      "plus_4ap",
      "consume_item"
    ],
    "message": "Dieses Gefühl des Wohlbefindens, das dieser kleine Kaffee hervorruft, bringt dich sofort wieder auf die Beine. Aah!"
  },
  "special_dice": {
    "label": "Werfen",
    "at00": true,
    "meta": [
      "not_yet_dice",
      "no_bonus_ap"
    ],
    "result": [
      "casino_dice"
    ],
    "message": "{casino}"
  },
  "special_card": {
    "label": "Karte ziehen",
    "at00": true,
    "meta": [
      "not_yet_card",
      "no_bonus_ap"
    ],
    "result": [
      "casino_card"
    ],
    "message": "{casino}"
  },
  "special_guitar": {
    "label": "Spielen",
    "meta": [
      "not_yet_guitar",
      "must_be_inside"
    ],
    "result": [
      "casino_guitar"
    ],
    "message": "{casino}"
  },
  "can": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "not_profession_tech",
      "have_can_opener",
      "is_not_wounded_hands"
    ],
    "result": [
      "morph_open_can"
    ],
    "message_key": "container_open_tool"
  },
  "can_t1": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "profession_tech",
      "have_can_opener_hd",
      "is_not_wounded_hands"
    ],
    "result": [
      "morph_open_can"
    ],
    "message_key": "container_open_tool"
  },
  "can_t2": {
    "label": "Öffnen (1 BP)",
    "at00": true,
    "meta": [
      "profession_tech",
      "not_have_can_opener_hd",
      "min_1_cp_hd"
    ],
    "result": [
      "minus_1cp",
      "morph_open_can"
    ],
    "message_key": "container_open"
  },
  "can_t3": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "profession_tech",
      "not_have_can_opener_hd",
      "have_can_opener",
      "no_cp",
      "is_not_wounded_hands"
    ],
    "result": []
  },
  "eat_6ap": {
    "label": "Essen",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "eat_ap",
      "no_full_ap_msg_food"
    ],
    "result": [
      "contaminated_zone_infect",
      "eat_ap6",
      "consume_item"
    ],
    "escort_message_key": "escort_food_eat"
  },
  "eat_7ap": {
    "label": "Essen",
    "priority": 2,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "eat_ap",
      "no_full_ap_msg_food"
    ],
    "result": [
      "contaminated_zone_infect",
      "eat_ap7",
      "consume_item"
    ],
    "escort_message_key": "escort_food_eat"
  },
  "eat_7ap_hw_1": {
    "label": "Essen",
    "priority": 1,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "eat_ap",
      "no_full_ap_msg_food",
      "h_not_during_halloween"
    ],
    "result": [
      "contaminated_zone_infect",
      "eat_ap7",
      "consume_item"
    ],
    "escort_message_key": "escort_food_eat"
  },
  "eat_7ap_hw_2": {
    "label": "Essen",
    "priority": 1,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "eat_ap",
      "no_full_ap_msg_food",
      "h_during_halloween"
    ],
    "result": [
      "contaminated_zone_infect",
      "eat_ap7",
      "consume_item",
      {
        "group": [
          [
            [
              "do_nothing"
            ],
            25
          ],
          [
            [
              "unterrorize"
            ],
            75
          ]
        ]
      }
    ],
    "escort_message_key": "escort_food_eat"
  },
  "eat_4ap": {
    "label": "Essen",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "eat_ap",
      "no_full_ap_msg_food"
    ],
    "result": [
      "contaminated_zone_infect",
      "eat_ap4",
      "consume_item"
    ],
    "escort_message_key": "escort_food_eat"
  },
  "drug_xana1": {
    "label": "Einsetzen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_1",
      "must_be_terrorized_hd"
    ],
    "result": [
      "contaminated_zone_infect",
      "drug_any",
      "unterrorize",
      "consume_item"
    ],
    "message_key": "drug_xanax"
  },
  "drug_xana2": {
    "label": "Einsetzen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_2",
      "must_be_terrorized_hd"
    ],
    "result": [
      "contaminated_zone_infect",
      "drug_addict",
      "unterrorize",
      "consume_item"
    ],
    "message_key": "drug_xanax"
  },
  "drug_xana3": {
    "label": "Einsetzen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_1",
      "must_not_be_terrorized"
    ],
    "result": [
      "contaminated_zone_infect",
      "drug_any",
      "consume_item"
    ],
    "message_key": "drug_no_use"
  },
  "drug_xana4": {
    "label": "Einsetzen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_2",
      "must_not_be_terrorized"
    ],
    "result": [
      "contaminated_zone_infect",
      "drug_addict",
      "consume_item"
    ],
    "message_key": "drug_no_use"
  },
  "drug_par_1": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_1",
      "is_not_infected_h"
    ],
    "result": [
      "msg_effect_para",
      "contaminated_zone_infect",
      "drug_any",
      "immune",
      "consume_item"
    ],
    "message_key": "drug_no_use_2"
  },
  "drug_par_2": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_2",
      "is_not_infected_h"
    ],
    "result": [
      "msg_effect_para",
      "contaminated_zone_infect",
      "drug_addict",
      "immune",
      "consume_item"
    ],
    "message_key": "drug_no_use_2"
  },
  "drug_par_3": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_1",
      "is_infected_h"
    ],
    "result": [
      "msg_effect_para",
      "contaminated_zone_infect",
      "drug_any",
      "disinfect",
      "immune",
      "consume_item"
    ],
    "message_key": "drug_para"
  },
  "drug_par_4": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_2",
      "is_infected_h"
    ],
    "result": [
      "msg_effect_para",
      "contaminated_zone_infect",
      "drug_addict",
      "disinfect",
      "immune",
      "consume_item"
    ],
    "message_key": "drug_para"
  },
  "drug_6ap_1": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_1"
    ],
    "result": [
      "contaminated_zone_infect",
      "drug_any",
      "just_ap6",
      "consume_item"
    ],
    "message_key": "drug_normal_ap"
  },
  "drug_6ap_2": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_2"
    ],
    "result": [
      "contaminated_zone_infect",
      "drug_addict",
      "just_ap6",
      "consume_item"
    ],
    "message_key": "drug_normal_ap"
  },
  "drug_7ap_1": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_1"
    ],
    "result": [
      "contaminated_zone_infect",
      "drug_any",
      "just_ap7",
      "consume_item"
    ]
  },
  "drug_7ap_2": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_2"
    ],
    "result": [
      "contaminated_zone_infect",
      "drug_addict",
      "just_ap7",
      "consume_item"
    ]
  },
  "drug_8ap_1": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_1"
    ],
    "result": [
      "contaminated_zone_infect",
      "drug_any",
      "just_ap8",
      "consume_item"
    ],
    "message_key": "drug_twin_ap"
  },
  "drug_8ap_2": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_2"
    ],
    "result": [
      "contaminated_zone_infect",
      "drug_addict",
      "just_ap8",
      "consume_item"
    ],
    "message_key": "drug_twin_ap"
  },
  "drug_april_1": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_1",
      "must_be_aprils_fools"
    ],
    "result": [
      "contaminated_zone_infect",
      "drug_any",
      "just_ap8",
      "april",
      "consume_item"
    ],
    "message_key": "drug_no_use_3"
  },
  "drug_april_2": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_2",
      "must_be_aprils_fools"
    ],
    "result": [
      "contaminated_zone_infect",
      "drug_addict",
      "just_ap8",
      "april",
      "consume_item"
    ],
    "message_key": "drug_no_use_3"
  },
  "drug_hyd_1": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_1",
      "drink_tl0a",
      "drink_tl0b"
    ],
    "result": [
      "contaminated_zone_infect",
      "drug_any",
      "consume_item"
    ],
    "message_key": "drug_no_use"
  },
  "drug_hyd_2": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_2",
      "drink_tl0a",
      "drink_tl0b"
    ],
    "result": [
      "contaminated_zone_infect",
      "drug_addict",
      "consume_item"
    ],
    "message_key": "drug_no_use"
  },
  "drug_hyd_3": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_1",
      "drink_tl1"
    ],
    "result": [
      "contaminated_zone_infect",
      "drug_any",
      "drink_ap_2",
      "consume_item"
    ],
    "message_key": "drug_hyd"
  },
  "drug_hyd_4": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_2",
      "drink_tl1"
    ],
    "result": [
      "contaminated_zone_infect",
      "drug_addict",
      "drink_ap_2",
      "consume_item"
    ],
    "message_key": "drug_hyd"
  },
  "drug_hyd_5": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_1",
      "drink_tl2"
    ],
    "result": [
      "contaminated_zone_infect",
      "drug_any",
      "drink_no_ap",
      "consume_item"
    ],
    "message_key": "drug_hyd"
  },
  "drug_hyd_6": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_2",
      "drink_tl2"
    ],
    "result": [
      "contaminated_zone_infect",
      "drug_addict",
      "drink_no_ap",
      "consume_item"
    ],
    "message_key": "drug_hyd"
  },
  "drug_beta": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_yet_beta"
    ],
    "result": [
      "just_ap26",
      "status_betadrug"
    ]
  },
  "cyanide": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "allow_when_terrorized": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "not_before_day_2"
    ],
    "result": [
      "contaminated_zone_infect",
      "cyanide",
      "consume_item"
    ]
  },
  "bandage": {
    "label": "Verbinden",
    "at00": true,
    "meta": [
      "is_wounded",
      "is_not_bandaged"
    ],
    "result": [
      "heal_wound",
      "consume_item",
      "add_bandage"
    ],
    "message": "So, zur Desinfektion nur noch draufspucken und hopp: Sieht wie neu aus!"
  },
  "emt": {
    "label": "Einsetzen",
    "at00": true,
    "meta": [
      "is_not_wounded"
    ],
    "result": [
      "just_ap6",
      "inflict_wound",
      "picto_masochism",
      "morph_elec_empty"
    ],
    "message": "Es geht doch nichts über einen schönen Stromstoß in die Wirbelsäule, um so richtig wach zu werden! Aber irgendwie riecht es jetzt hier nach verbranntem Fleisch..."
  },
  "drug_rand_1": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_1"
    ],
    "result": [
      "contaminated_zone_infect",
      "consume_item",
      "picto_drug_exp",
      {
        "group": [
          [
            [
              "drug_any",
              "just_ap6",
              "msg_drug_normal_ap"
            ],
            40
          ],
          [
            [
              "drug_any",
              "terrorize",
              "msg_drug_terror"
            ],
            20
          ],
          [
            [
              "drug_any",
              "drug_addict",
              "just_ap7",
              "msg_drug_addict_ap"
            ],
            20
          ],
          [
            [
              "do_nothing",
              "msg_drug_no_effect"
            ],
            20
          ]
        ]
      }
    ]
  },
  "drug_rand_2": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_2"
    ],
    "result": [
      "contaminated_zone_infect",
      "consume_item",
      "picto_drug_exp",
      {
        "group": [
          [
            [
              "drug_addict",
              "just_ap6",
              "msg_drug_normal_ap"
            ],
            40
          ],
          [
            [
              "drug_addict",
              "terrorize",
              "msg_drug_terror"
            ],
            20
          ],
          [
            [
              "drug_addict",
              "just_ap7",
              "msg_drug_addict_ap"
            ],
            20
          ],
          [
            [
              "do_nothing",
              "msg_drug_no_effect"
            ],
            20
          ]
        ]
      }
    ]
  },
  "drug_lsd_1": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_1"
    ],
    "result": [
      "contaminated_zone_infect",
      "consume_item",
      "picto_drug_exp",
      {
        "group": [
          [
            [
              "drug_any",
              "just_ap6",
              "msg_drug_normal_ap"
            ],
            75
          ],
          [
            [
              "drug_any",
              "just_ap6",
              "terrorize",
              "msg_drug_terror"
            ],
            25
          ]
        ]
      }
    ]
  },
  "drug_lsd_2": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_2"
    ],
    "result": [
      "contaminated_zone_infect",
      "consume_item",
      "picto_drug_exp",
      {
        "group": [
          [
            [
              "drug_addict",
              "just_ap6",
              "msg_drug_normal_ap"
            ],
            75
          ],
          [
            [
              "drug_addict",
              "just_ap6",
              "terrorize",
              "msg_drug_terror"
            ],
            25
          ]
        ]
      }
    ]
  },
  "drug_beta_bad_1": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_1"
    ],
    "result": {
      "0": "contaminated_zone_infect",
      "1": "consume_item",
      "2": "picto_drug_exp",
      "chances": {
        "group": [
          [
            [
              "drug_any",
              "just_ap6",
              "msg_drug_normal_ap"
            ],
            1
          ],
          [
            [
              "drug_any",
              "unterrorize",
              "msg_drug_relax"
            ],
            1
          ],
          [
            [
              "drug_any",
              "plus_4ap",
              "msg_drug_normal_ap"
            ],
            1
          ],
          [
            [
              "drug_any",
              "drunk",
              "msg_drug_drunk"
            ],
            1
          ]
        ]
      }
    }
  },
  "drug_beta_bad_2": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "drug_2"
    ],
    "result": {
      "0": "contaminated_zone_infect",
      "1": "consume_item",
      "2": "picto_drug_exp",
      "chances": {
        "group": [
          [
            [
              "drug_addict",
              "just_ap6",
              "msg_drug_normal_ap"
            ],
            1
          ],
          [
            [
              "drug_addict",
              "unterrorize",
              "msg_drug_relax"
            ],
            1
          ],
          [
            [
              "drug_addict",
              "plus_4ap",
              "msg_drug_normal_ap"
            ],
            1
          ],
          [
            [
              "drug_addict",
              "drunk",
              "msg_drug_drunk"
            ],
            1
          ]
        ]
      }
    }
  },
  "drug_rand_xmas": {
    "label": "Essen",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "eat_ap"
    ],
    "result": [
      "contaminated_zone_infect",
      "consume_item",
      "picto_drug_exp",
      {
        "group": [
          [
            [
              "plus_ap8_30",
              "drug_addict_no_msg",
              "msg_drug_candy_addict"
            ],
            18
          ],
          [
            [
              "plus_ap8_30",
              "terrorize",
              "msg_drug_candy_terror"
            ],
            50
          ],
          [
            [
              "plus_ap8_30",
              "infect_no_msg",
              "msg_drug_candy_infect"
            ],
            30
          ],
          [
            [
              "death_poison"
            ],
            2
          ]
        ]
      }
    ]
  },
  "play_soccer_1": {
    "label": "Benutzen",
    "at00": true,
    "meta": [
      "not_tired",
      "not_yet_soccer",
      "no_bonus_ap",
      "not_drunk_hide",
      "is_not_wounded_foot"
    ],
    "result": {
      "0": "status_soccer_today",
      "chances": {
        "group": [
          [
            [
              "do_nothing",
              "msg_soccer_fail"
            ],
            80
          ],
          [
            [
              "just_ap1",
              "msg_soccer_success"
            ],
            15
          ],
          [
            [
              "morph_soccer_part",
              "msg_soccer_bigfail"
            ],
            5
          ]
        ]
      }
    }
  },
  "play_soccer_2": {
    "label": "Benutzen",
    "at00": true,
    "meta": [
      "not_tired",
      "not_yet_soccer",
      "no_bonus_ap",
      "must_be_drunk",
      "is_not_wounded_foot"
    ],
    "result": {
      "0": "status_soccer_today",
      "chances": {
        "group": [
          [
            [
              "morph_soccer_part",
              "msg_soccer_bigfail"
            ],
            80
          ],
          [
            [
              "do_nothing",
              "msg_soccer_fail"
            ],
            15
          ],
          [
            [
              "just_ap1",
              "msg_soccer_success"
            ],
            5
          ]
        ]
      }
    }
  },
  "open_doggybag": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_doggy"
    ],
    "message": "Du hast dein <span class=\"tool\">{item}</span> ausgepackt und <span class=\"tool\">{items_spawn}</span> erhalten!"
  },
  "open_lunchbag": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_lunch"
    ],
    "message_key": "container_open"
  },
  "open_c_chest": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_c_chest"
    ],
    "message_key": "container_open"
  },
  "open_h_chest": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_h_chest"
    ],
    "message_key": "container_open"
  },
  "open_postbox": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_postbox"
    ],
    "message_key": "container_open"
  },
  "open_postbox_xl": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_postbox_xl"
    ],
    "message_key": "container_open"
  },
  "open_letterbox": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_letterbox"
    ],
    "message_key": "container_open"
  },
  "open_justbox": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_justbox"
    ],
    "message_key": "container_open"
  },
  "open_gamebox": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_gamebox"
    ],
    "message_key": "container_open"
  },
  "open_abox": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_abox"
    ],
    "message_key": "container_open"
  },
  "open_cbox": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_cbox"
    ],
    "message_key": "container_open_cbox"
  },
  "open_matbox3": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands",
      "room_for_item"
    ],
    "result": [
      "spawn_matbox",
      "morph_rsc_pack_2"
    ],
    "message_key": "container_open_not_empty"
  },
  "open_matbox2": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands",
      "room_for_item"
    ],
    "result": [
      "spawn_matbox",
      "morph_rsc_pack_1"
    ],
    "message_key": "container_open_not_empty"
  },
  "open_matbox1": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_matbox"
    ],
    "message_key": "container_open_empty"
  },
  "open_xmasbox3": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands"
    ],
    "result": [
      "spawn_xmas_3",
      "morph_christmas_2"
    ],
    "message_key": "container_open_not_empty"
  },
  "open_xmasbox2": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands"
    ],
    "result": [
      "spawn_xmas_2",
      "morph_christmas_1"
    ],
    "message_key": "container_open_not_empty"
  },
  "open_xmasbox1": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_xmas_1"
    ],
    "message_key": "container_open_empty"
  },
  "open_metalbox": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "not_profession_tech",
      "have_can_opener",
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_metalbox"
    ],
    "message_key": "container_open_tool"
  },
  "open_metalbox2": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "not_profession_tech",
      "have_can_opener",
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_metalbox2"
    ],
    "message_key": "container_open_tool"
  },
  "open_catbox": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "not_profession_tech",
      "have_can_opener",
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_catbox"
    ],
    "message_key": "container_open_tool"
  },
  "open_toolbox": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "not_profession_tech",
      "have_box_opener",
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_toolbox"
    ],
    "message_key": "container_open_weapon"
  },
  "open_foodbox_out": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "not_profession_tech",
      "have_parcel_opener",
      "is_not_wounded_hands",
      "must_be_outside_or_exploring"
    ],
    "result": [
      "consume_item",
      "spawn_foodbox"
    ],
    "message_key": "container_open_weapon"
  },
  "open_foodbox_in": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "not_profession_tech",
      "have_parcel_opener_home",
      "is_not_wounded_hands",
      "must_be_inside"
    ],
    "result": [
      "consume_item",
      "spawn_foodbox"
    ],
    "message_key": "container_open_weapon"
  },
  "open_metalbox_t1": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "profession_tech",
      "have_can_opener_hd",
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_metalbox"
    ],
    "message_key": "container_open_tool"
  },
  "open_metalbox2_t1": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "profession_tech",
      "have_can_opener_hd",
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_metalbox2"
    ],
    "message_key": "container_open_tool"
  },
  "open_catbox_t1": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "profession_tech",
      "have_can_opener_hd",
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_catbox"
    ],
    "message_key": "container_open_tool"
  },
  "open_toolbox_t1": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "profession_tech",
      "have_box_opener_hd",
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_toolbox"
    ],
    "message_key": "container_open_weapon"
  },
  "open_foodbox_out_t1": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "profession_tech",
      "have_parcel_opener_hd",
      "is_not_wounded_hands",
      "must_be_outside_or_exploring"
    ],
    "result": [
      "consume_item",
      "spawn_foodbox"
    ],
    "message_key": "container_open_weapon"
  },
  "open_foodbox_in_t1": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "profession_tech",
      "have_parcel_opener_home_hd",
      "is_not_wounded_hands",
      "must_be_inside"
    ],
    "result": [
      "consume_item",
      "spawn_foodbox"
    ],
    "message_key": "container_open_weapon"
  },
  "open_metalbox_t2": {
    "label": "Öffnen (1 BP)",
    "at00": true,
    "meta": [
      "profession_tech",
      "not_have_can_opener_hd",
      "min_1_cp"
    ],
    "result": [
      "minus_1cp",
      "consume_item",
      "spawn_metalbox"
    ],
    "message_key": "container_open"
  },
  "open_metalbox2_t2": {
    "label": "Öffnen (1 BP)",
    "at00": true,
    "meta": [
      "profession_tech",
      "not_have_can_opener_hd",
      "min_1_cp"
    ],
    "result": [
      "minus_1cp",
      "consume_item",
      "spawn_metalbox2"
    ],
    "message_key": "container_open"
  },
  "open_catbox_t2": {
    "label": "Öffnen (1 BP)",
    "at00": true,
    "meta": [
      "profession_tech",
      "not_have_can_opener_hd",
      "min_1_cp"
    ],
    "result": [
      "minus_1cp",
      "consume_item",
      "spawn_catbox"
    ],
    "message_key": "container_open"
  },
  "open_toolbox_t2": {
    "label": "Öffnen (1 BP)",
    "at00": true,
    "meta": [
      "profession_tech",
      "not_have_box_opener_hd",
      "min_1_cp"
    ],
    "result": [
      "minus_1cp",
      "consume_item",
      "spawn_toolbox"
    ],
    "message_key": "container_open"
  },
  "open_foodbox_out_t2": {
    "label": "Öffnen (1 BP)",
    "at00": true,
    "meta": [
      "profession_tech",
      "not_have_parcel_opener_hd",
      "min_1_cp",
      "must_be_outside_or_exploring"
    ],
    "result": [
      "minus_1cp",
      "consume_item",
      "spawn_foodbox"
    ],
    "message_key": "container_open"
  },
  "open_foodbox_in_t2": {
    "label": "Öffnen (1 BP)",
    "at00": true,
    "meta": [
      "profession_tech",
      "not_have_parcel_opener_home_hd",
      "min_1_cp",
      "must_be_inside"
    ],
    "result": [
      "minus_1cp",
      "consume_item",
      "spawn_foodbox"
    ],
    "message_key": "container_open"
  },
  "open_safe": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "min_1_ap",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      "minus_1ap",
      {
        "group": [
          [
            [
              "do_nothing"
            ],
            95
          ],
          [
            [
              "consume_item",
              "spawn_safe"
            ],
            5
          ]
        ]
      }
    ],
    "message_key": "container_optional"
  },
  "open_asafe": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "min_1_ap",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      "minus_1ap",
      {
        "group": [
          [
            [
              "do_nothing"
            ],
            95
          ],
          [
            [
              "consume_item",
              "spawn_asafe"
            ],
            5
          ]
        ]
      }
    ],
    "message_key": "container_optional"
  },
  "open_cellobox": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_cellobox",
      "spawn_cellobox_extra"
    ],
    "message_key": "container_open"
  },
  "load_pilegun": {
    "label": "Laden",
    "at00": true,
    "meta": [
      "have_battery"
    ],
    "result": [
      "consume_battery",
      "morph_pilegun"
    ],
    "message_key": "item_load"
  },
  "load_pilegun2": {
    "label": "Laden",
    "at00": true,
    "meta": [
      "have_battery"
    ],
    "result": [
      "consume_battery",
      "morph_pilegun_up"
    ],
    "message_key": "item_load"
  },
  "load_pilegun3": {
    "label": "Laden",
    "at00": true,
    "meta": [
      "have_battery"
    ],
    "result": [
      "consume_battery",
      "morph_big_pgun"
    ],
    "message_key": "item_load"
  },
  "load_mixergun": {
    "label": "Laden",
    "at00": true,
    "meta": [
      "have_battery"
    ],
    "result": [
      "consume_battery",
      "morph_mixergun"
    ],
    "message_key": "item_load"
  },
  "load_chainsaw": {
    "label": "Laden",
    "at00": true,
    "meta": [
      "have_battery"
    ],
    "result": [
      "consume_battery",
      "morph_chainsaw"
    ],
    "message_key": "item_load"
  },
  "load_taser": {
    "label": "Laden",
    "at00": true,
    "meta": [
      "have_battery"
    ],
    "result": [
      "consume_battery",
      "morph_taser"
    ],
    "message_key": "item_load"
  },
  "load_lpointer": {
    "label": "Laden",
    "at00": true,
    "meta": [
      "have_battery"
    ],
    "result": {
      "0": "consume_battery",
      "chances": {
        "group": [
          [
            "morph_lpoint4",
            1
          ],
          [
            "morph_lpoint3",
            1
          ],
          [
            "morph_lpoint2",
            1
          ],
          [
            "morph_lpoint4",
            1
          ]
        ]
      }
    },
    "message_key": "item_load"
  },
  "load_lamp": {
    "label": "Laden",
    "at00": true,
    "meta": [
      "have_battery"
    ],
    "result": [
      "consume_battery",
      "morph_lamp_on"
    ],
    "message_key": "item_load"
  },
  "load_dildo": {
    "label": "Laden",
    "at00": true,
    "meta": [
      "have_battery"
    ],
    "result": [
      "consume_battery",
      "morph_vibr"
    ],
    "message_key": "item_load"
  },
  "load_rmk2": {
    "label": "Laden",
    "at00": true,
    "meta": [
      "have_battery"
    ],
    "result": [
      "consume_battery",
      "morph_radius_mk2"
    ],
    "message_key": "item_load"
  },
  "load_maglite": {
    "label": "Laden",
    "at00": true,
    "meta": [
      "have_battery"
    ],
    "result": [
      "consume_battery",
      "morph_maglite_2"
    ],
    "message_key": "item_load"
  },
  "load_radio": {
    "label": "Laden",
    "at00": true,
    "meta": [
      "have_battery"
    ],
    "result": [
      "consume_battery",
      "morph_radio_on"
    ],
    "message_key": "item_load"
  },
  "load_emt": {
    "label": "Laden",
    "at00": true,
    "meta": [
      "have_battery"
    ],
    "result": [
      "consume_battery",
      "morph_sport_elec"
    ],
    "message_key": "item_load"
  },
  "light_cig": {
    "label": "Rauchen",
    "meta": [
      "have_matches",
      "must_be_terrorized"
    ],
    "result": [
      {
        "group": [
          [
            [
              "do_nothing"
            ],
            33
          ],
          [
            [
              "consume_matches"
            ],
            66
          ]
        ]
      },
      {
        "group": [
          [
            [
              "do_nothing"
            ],
            66
          ],
          [
            [
              "consume_item"
            ],
            33
          ]
        ]
      },
      "unterrorize"
    ],
    "message": "Du zündest eine Zigarette an. Der Rauch lässt dich kräftig Husten, vermutlich weil du daran nicht gewöhnt bist... Nach ein paar Minuten <strong>gelingt es dir dich zu beruhigen</strong>. Dieser Kurze Moment des Friedens ermöglicht lässt dich deinen Kummer vergessen und bringt dich zurück in die Wirklichkeit.<hr />Du drückst den Stummel auf dem Boden aus und bist bereit für einen weiteren Tag des Überlebens.!<t-consumed><hr />Dir fällt auf dass <strong>die Packung leer ist</strong>!</t-consumed><t-item-consumed>Das war dein <strong>letztes Streichholz</strong>... Es wird schwer sein, jetzt noch eine Zigarette anzuzünden.</t-item-consumed>"
  },
  "fill_jsplash": {
    "label": "Befüllen",
    "at00": true,
    "meta": [
      "have_canister"
    ],
    "result": [
      "consume_jerrycan",
      "morph_jerrygun"
    ],
    "message_key": "item_fill"
  },
  "fill_asplash1": {
    "label": "Befüllen",
    "meta": [
      "have_water",
      "must_not_have_valve",
      "must_be_inside"
    ],
    "result": [
      "consume_water",
      "morph_watergun_opt_5"
    ],
    "message_key": "item_fill"
  },
  "fill_asplash2": {
    "label": "Befüllen",
    "at00": true,
    "meta": [
      "have_water",
      "must_be_outside_or_exploring"
    ],
    "result": [
      "consume_water",
      "morph_watergun_opt_5"
    ],
    "message_key": "item_fill"
  },
  "fill_splash1": {
    "label": "Befüllen",
    "meta": [
      "have_water",
      "must_not_have_valve",
      "must_be_inside"
    ],
    "result": [
      "consume_water",
      "morph_watergun_3"
    ],
    "message_key": "item_fill"
  },
  "fill_splash2": {
    "label": "Befüllen",
    "at00": true,
    "meta": [
      "have_water",
      "must_be_outside_or_exploring"
    ],
    "result": [
      "consume_water",
      "morph_watergun_3"
    ],
    "message_key": "item_fill"
  },
  "fill_ksplash1": {
    "label": "Befüllen",
    "meta": [
      "have_water",
      "must_not_have_valve",
      "must_be_inside"
    ],
    "result": [
      "consume_water",
      "morph_kalach"
    ],
    "message_key": "item_fill"
  },
  "fill_ksplash2": {
    "label": "Befüllen",
    "at00": true,
    "meta": [
      "have_water",
      "must_be_outside_or_exploring"
    ],
    "result": [
      "consume_water",
      "morph_kalach"
    ],
    "message_key": "item_fill"
  },
  "fill_grenade1": {
    "label": "Befüllen",
    "meta": [
      "have_water",
      "must_not_have_valve",
      "must_be_inside"
    ],
    "result": [
      "consume_water",
      "morph_grenade"
    ],
    "message_key": "item_fill"
  },
  "fill_grenade2": {
    "label": "Befüllen",
    "at00": true,
    "meta": [
      "have_water",
      "must_be_outside_or_exploring"
    ],
    "result": [
      "consume_water",
      "morph_grenade"
    ],
    "message_key": "item_fill"
  },
  "fill_exgrenade1": {
    "label": "Befüllen",
    "meta": [
      "have_water",
      "must_not_have_valve",
      "must_be_inside"
    ],
    "result": [
      "consume_water",
      "morph_bgrenade"
    ],
    "message_key": "item_fill"
  },
  "fill_exgrenade2": {
    "label": "Befüllen",
    "at00": true,
    "meta": [
      "have_water",
      "must_be_outside_or_exploring"
    ],
    "result": [
      "consume_water",
      "morph_bgrenade"
    ],
    "message_key": "item_fill"
  },
  "fill_watercan0": {
    "label": "Befüllen",
    "at00": true,
    "poison": "ItemAction::PoisonHandlerTransgress",
    "meta": [
      "have_water"
    ],
    "result": [
      "consume_water",
      "produce_watercan1"
    ],
    "message_key": "item_fill"
  },
  "fill_watercan1": {
    "label": "Befüllen",
    "at00": true,
    "poison": "ItemAction::PoisonHandlerTransgress",
    "meta": [
      "have_water"
    ],
    "result": [
      "consume_water",
      "produce_watercan2"
    ],
    "message_key": "item_fill"
  },
  "fill_watercan2": {
    "label": "Befüllen",
    "at00": true,
    "poison": "ItemAction::PoisonHandlerTransgress",
    "meta": [
      "have_water"
    ],
    "result": [
      "consume_water",
      "produce_watercan3"
    ],
    "message_key": "item_fill"
  },
  "fire_pilegun": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "msg_battery_use",
      "spawn_empty_battery",
      "morph_pilegun_empty",
      {
        "group": "g_kill_1z_90_msg2"
      }
    ]
  },
  "fire_pilegun2": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      {
        "group": [
          [
            [
              "msg_battery_drop",
              "spawn_battery",
              "morph_pilegun_up_empty"
            ],
            8
          ],
          [
            [
              "msg_battery_destroy",
              "spawn_empty_battery",
              "morph_pilegun_up_empty"
            ],
            2
          ]
        ]
      },
      "kill_1_zombie"
    ]
  },
  "fire_pilegun3": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      {
        "group": [
          [
            [
              "msg_battery_destroy",
              "spawn_empty_battery",
              "morph_big_pgun_empty"
            ],
            50
          ],
          [
            [
              "msg_battery_drop",
              "spawn_battery",
              "morph_big_pgun_empty"
            ],
            50
          ]
        ]
      },
      "kill_2_zombie"
    ]
  },
  "fire_mixergun": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      {
        "group": [
          [
            [
              "do_nothing"
            ],
            6
          ],
          [
            [
              "msg_battery_use",
              "morph_mixergun_empty"
            ],
            4
          ]
        ]
      },
      "kill_1_zombie"
    ]
  },
  "fire_chainsaw": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      {
        "group": [
          [
            [
              "do_nothing"
            ],
            7
          ],
          [
            [
              "msg_battery_use",
              "morph_chainsaw_empty"
            ],
            3
          ]
        ]
      },
      "kill_3_zombie"
    ]
  },
  "fire_taser": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      {
        "group": "g_kill_1z_30_taser"
      },
      {
        "group": [
          [
            [
              "do_nothing"
            ],
            3
          ],
          [
            [
              "msg_battery_use",
              "morph_taser_empty"
            ],
            7
          ]
        ]
      }
    ]
  },
  "fire_lpointer4": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "morph_lpoint3",
      "kill_2_zombie"
    ]
  },
  "fire_lpointer3": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "morph_lpoint2",
      "kill_2_zombie"
    ]
  },
  "fire_lpointer2": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "morph_lpoint1",
      "kill_2_zombie"
    ]
  },
  "fire_lpointer1": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "morph_lpoint",
      "kill_2_zombie"
    ]
  },
  "fire_asplash5": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "morph_watergun_opt_4",
      "kill_1_zombie"
    ]
  },
  "fire_asplash4": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "morph_watergun_opt_3",
      "kill_1_zombie"
    ]
  },
  "fire_asplash3": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "morph_watergun_opt_2",
      "kill_1_zombie"
    ]
  },
  "fire_asplash2": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "morph_watergun_opt_1",
      "kill_1_zombie"
    ]
  },
  "fire_asplash1": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "morph_watergun_opt_empty",
      "kill_1_zombie"
    ]
  },
  "fire_splash3": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "morph_watergun_2",
      "kill_1_zombie"
    ]
  },
  "fire_splash2": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "morph_watergun_1",
      "kill_1_zombie"
    ]
  },
  "fire_splash1": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "morph_watergun_empty",
      "kill_1_zombie"
    ]
  },
  "fire_ksplash": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "morph_kalach_empty",
      "kill_3_zombie"
    ]
  },
  "throw_animal": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "must_not_have_tamer_building"
    ],
    "result": [
      "consume_item",
      "kill_1_zombie_s",
      "picto_animal"
    ],
    "message_key": "throw_animal"
  },
  "throw_animal_cat": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "must_not_have_tamer_building"
    ],
    "result": [
      {
        "group": [
          [
            [
              "do_nothing"
            ],
            80
          ],
          [
            [
              "consume_item",
              "picto_animal"
            ],
            20
          ]
        ]
      },
      "kill_1_zombie_s"
    ],
    "message_key": "throw_animal"
  },
  "throw_animal_dog": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "must_not_have_tamer_building"
    ],
    "result": [
      {
        "group": [
          [
            [
              "do_nothing"
            ],
            90
          ],
          [
            [
              "consume_item",
              "picto_animal"
            ],
            10
          ]
        ]
      },
      "kill_1_zombie_s"
    ],
    "message_key": "throw_animal"
  },
  "throw_animal_tekel": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "must_not_have_tamer_building"
    ],
    "result": [
      {
        "group": [
          [
            [
              "do_nothing"
            ],
            85
          ],
          [
            [
              "consume_item",
              "picto_animal"
            ],
            15
          ]
        ]
      },
      "kill_1_zombie_s"
    ],
    "message_key": "throw_animal"
  },
  "throw_animal_t1": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "must_have_tamer_building",
      "not_profession_tamer"
    ],
    "result": {
      "chances": {
        "group": [
          [
            [
              "do_nothing"
            ],
            1
          ],
          [
            [
              "consume_item",
              "picto_animal"
            ],
            1
          ]
        ]
      },
      "0": "kill_1_zombie_s"
    },
    "message_key": "throw_animal"
  },
  "throw_animal_cat_t1": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "must_have_tamer_building",
      "not_profession_tamer"
    ],
    "result": {
      "chances": {
        "group": [
          [
            [
              "do_nothing"
            ],
            80
          ],
          [
            [
              "consume_item",
              "picto_animal"
            ],
            20
          ]
        ]
      },
      "0": "kill_1_zombie_s"
    },
    "message_key": "throw_animal"
  },
  "throw_animal_dog_t1": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "must_have_tamer_building",
      "not_profession_tamer"
    ],
    "result": {
      "chances": {
        "group": [
          [
            [
              "do_nothing"
            ],
            90
          ],
          [
            [
              "consume_item",
              "picto_animal"
            ],
            10
          ]
        ]
      },
      "0": "kill_1_zombie_s"
    },
    "message_key": "throw_animal"
  },
  "throw_animal_tekel_t1": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "must_have_tamer_building",
      "not_profession_tamer"
    ],
    "result": {
      "chances": {
        "group": [
          [
            [
              "do_nothing"
            ],
            85
          ],
          [
            [
              "consume_item",
              "picto_animal"
            ],
            15
          ]
        ]
      },
      "0": "kill_1_zombie_s"
    },
    "message_key": "throw_animal"
  },
  "throw_animal_t2": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "must_have_tamer_building",
      "profession_tamer"
    ],
    "result": {
      "chances": {
        "group": [
          [
            [
              "do_nothing"
            ],
            1
          ],
          [
            [
              "consume_item",
              "picto_animal"
            ],
            1
          ]
        ]
      },
      "0": "kill_1_zombie_s"
    },
    "message_key": "throw_animal"
  },
  "throw_animal_cat_t2": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "must_have_tamer_building",
      "profession_tamer"
    ],
    "result": {
      "chances": {
        "group": [
          [
            [
              "do_nothing"
            ],
            80
          ],
          [
            [
              "consume_item",
              "picto_animal"
            ],
            20
          ]
        ]
      },
      "0": "kill_1_zombie_s"
    },
    "message_key": "throw_animal"
  },
  "throw_animal_dog_t2": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "must_have_tamer_building",
      "profession_tamer"
    ],
    "result": {
      "chances": {
        "group": [
          [
            [
              "do_nothing"
            ],
            90
          ],
          [
            [
              "consume_item",
              "picto_animal"
            ],
            10
          ]
        ]
      },
      "0": "kill_1_zombie_s"
    },
    "message_key": "throw_animal"
  },
  "throw_animal_tekel_t2": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "must_have_tamer_building",
      "profession_tamer"
    ],
    "result": {
      "chances": {
        "group": [
          [
            [
              "do_nothing"
            ],
            85
          ],
          [
            [
              "consume_item",
              "picto_animal"
            ],
            15
          ]
        ]
      },
      "0": "kill_1_zombie_s"
    },
    "message_key": "throw_animal"
  },
  "throw_animal_angryc": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "consume_item",
      "picto_animal",
      {
        "group": [
          [
            [
              "inflict_wound"
            ],
            50
          ],
          [
            [
              "kill_all_zombie"
            ],
            50
          ]
        ]
      }
    ],
    "message": "<nt-kills>Diese Katze ist unglaublich! Sie scheint keine Angst zu haben, nicht einmal vor dir. Das Tier springt dir an die Kehle und vergräbt seine Krallen tief in deinem Fleisch.</nt-kills><t-kills>Diese Katze ist unglaublich! Sie scheint keine Angst zu haben, nicht einmal vor dem abartigen Gestank der Zombies. Mit mehr Zerstörungskraft als der Duracell-Hase und das Killer-Kaninchen von Caerbannog hat sie die Zone komplett bereinigt.</t-kills>"
  },
  "throw_b_machine_1": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": "g_break_40"
      },
      "kill_1_zombie"
    ]
  },
  "throw_b_bone": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": "g_break_80"
      },
      "kill_1_zombie"
    ]
  },
  "throw_b_can_opener": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      "break_item",
      {
        "group": "g_kill_1z_50"
      }
    ]
  },
  "throw_b_chair_basic": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": "g_break_50"
      },
      {
        "group": "g_kill_1z_50"
      }
    ]
  },
  "throw_b_torch": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired"
    ],
    "result": [
      "morph_torch_off",
      "kill_1_zombie"
    ]
  },
  "throw_b_chain": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": "g_break_25"
      },
      {
        "group": "g_kill_1z_50"
      }
    ]
  },
  "throw_b_staff": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": [
          [
            [
              "do_nothing"
            ],
            60
          ],
          [
            [
              "msg_break_item",
              "morph_staff2"
            ],
            60
          ]
        ]
      },
      {
        "group": "g_kill_1z_40"
      }
    ]
  },
  "throw_b_knife": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": "g_break_33"
      },
      "kill_1_zombie"
    ]
  },
  "throw_b_machine_2": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": "g_break_43"
      },
      "kill_1_zombie"
    ]
  },
  "throw_b_small_knife": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": "g_break_45"
      },
      {
        "group": "g_kill_1z_15"
      }
    ]
  },
  "throw_b_cutcut": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": "g_break_25"
      },
      "kill_2_zombie"
    ]
  },
  "throw_b_machine_3": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": "g_break_40"
      },
      "kill_1_zombie"
    ]
  },
  "throw_b_pc": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": "g_break_50"
      },
      "kill_1_zombie"
    ]
  },
  "throw_b_lawn": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": "g_break_20"
      },
      "kill_2_zombie"
    ]
  },
  "throw_b_screw": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": "g_break_40"
      },
      {
        "group": "g_kill_1z_20"
      }
    ]
  },
  "throw_b_swiss_knife": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": "g_break_50"
      },
      {
        "group": "g_kill_1z_15"
      }
    ]
  },
  "throw_b_cutter": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": "g_break_70"
      },
      {
        "group": "g_kill_1z_60"
      }
    ]
  },
  "throw_b_concrete_wall": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": "g_break_50"
      },
      "kill_1_zombie"
    ]
  },
  "throw_b_torch_off": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": "g_break_75"
      },
      {
        "group": "g_kill_1z_10"
      }
    ]
  },
  "throw_b_wrench": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": "g_break_20"
      },
      {
        "group": "g_kill_1z_33"
      }
    ]
  },
  "throw_hurling_stick": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      {
        "group": "g_break_15"
      },
      {
        "group": "g_kill_1z_60"
      }
    ]
  },
  "throw_phone": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_phone",
      "kill_1_2_zombie"
    ]
  },
  "throw_projector": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_proj",
      "kill_1_zombie"
    ]
  },
  "throw_grenade": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "consume_item",
      "zone_kill_2_4"
    ],
    "message_key": "weapon_use"
  },
  "throw_exgrenade": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "consume_item",
      "zone_kill_6_10"
    ],
    "message_key": "weapon_use"
  },
  "throw_boomfruit": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "consume_item",
      "zone_kill_5_9"
    ],
    "message_key": "weapon_use"
  },
  "throw_jerrygun": {
    "label": "Waffe einsetzen",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies"
    ],
    "result": [
      "kill_1_zombie",
      "msg_throw_jerrycan",
      {
        "group": "g_empty_jerrygun"
      }
    ]
  },
  "bp_generic_1": {
    "label": "Lesen",
    "meta": [
      "must_be_inside_bp"
    ],
    "result": [
      "consume_item",
      "town_bp_lv1"
    ],
    "message_key": "read_blueprint"
  },
  "bp_generic_2": {
    "label": "Lesen",
    "meta": [
      "must_be_inside_bp"
    ],
    "result": [
      "consume_item",
      "town_bp_lv2"
    ],
    "message_key": "read_blueprint"
  },
  "bp_generic_3": {
    "label": "Lesen",
    "meta": [
      "must_be_inside_bp"
    ],
    "result": [
      "consume_item",
      "town_bp_lv3"
    ],
    "message_key": "read_blueprint"
  },
  "bp_generic_4": {
    "label": "Lesen",
    "meta": [
      "must_be_inside_bp"
    ],
    "result": [
      "consume_item",
      "town_bp_lv4"
    ],
    "message_key": "read_blueprint"
  },
  "bp_hotel_2": {
    "label": "Lesen",
    "meta": [
      "must_be_inside_bp"
    ],
    "result": [
      "consume_item",
      "town_bp_hotel_lv2"
    ],
    "message_key": "read_blueprint"
  },
  "bp_hotel_3": {
    "label": "Lesen",
    "meta": [
      "must_be_inside_bp"
    ],
    "result": [
      "consume_item",
      "town_bp_hotel_lv3"
    ],
    "message_key": "read_blueprint"
  },
  "bp_hotel_4": {
    "label": "Lesen",
    "meta": [
      "must_be_inside_bp"
    ],
    "result": [
      "consume_item",
      "town_bp_hotel_lv4"
    ],
    "message_key": "read_blueprint"
  },
  "bp_bunker_2": {
    "label": "Lesen",
    "meta": [
      "must_be_inside_bp"
    ],
    "result": [
      "consume_item",
      "town_bp_bunker_lv2"
    ],
    "message_key": "read_blueprint"
  },
  "bp_bunker_3": {
    "label": "Lesen",
    "meta": [
      "must_be_inside_bp"
    ],
    "result": [
      "consume_item",
      "town_bp_bunker_lv3"
    ],
    "message_key": "read_blueprint"
  },
  "bp_bunker_4": {
    "label": "Lesen",
    "meta": [
      "must_be_inside_bp"
    ],
    "result": [
      "consume_item",
      "town_bp_bunker_lv4"
    ],
    "message_key": "read_blueprint"
  },
  "bp_hospital_2": {
    "label": "Lesen",
    "meta": [
      "must_be_inside_bp"
    ],
    "result": [
      "consume_item",
      "town_bp_hospital_lv2"
    ],
    "message_key": "read_blueprint"
  },
  "bp_hospital_3": {
    "label": "Lesen",
    "meta": [
      "must_be_inside_bp"
    ],
    "result": [
      "consume_item",
      "town_bp_hospital_lv3"
    ],
    "message_key": "read_blueprint"
  },
  "bp_hospital_4": {
    "label": "Lesen",
    "meta": [
      "must_be_inside_bp"
    ],
    "result": [
      "consume_item",
      "town_bp_hospital_lv4"
    ],
    "message_key": "read_blueprint"
  },
  "read_rp": {
    "label": "Lesen",
    "cover": false,
    "at00": true,
    "meta": [],
    "result": [
      "consume_item",
      "find_rp"
    ],
    "message": "Der Text ist überschrieben mit {rp_text}. Du beginnst, ihn zu lesen<t-rp_ok>! Der Text wurde deinem Archiv hinzugefügt.</t-rp_ok><t-rp_fail>... Leider stellst du fest, dass du diesen Text bereits kennst.</t-rp_fail>"
  },
  "read_rp_cover": {
    "label": "Lesen",
    "cover": true,
    "at00": true,
    "meta": [],
    "result": [
      "consume_item",
      "find_rp"
    ],
    "message": "Der Text ist überschrieben mit {rp_text}. Du beginnst, ihn zu lesen<t-rp_ok>! Der Text wurde deinem Archiv hinzugefügt.</t-rp_ok><t-rp_fail>... Leider stellst du fest, dass du diesen Text bereits kennst.</t-rp_fail>"
  },
  "read_banned_note": {
    "label": "Lesen",
    "cover": true,
    "at00": true,
    "meta": [],
    "result": [
      "consume_item",
      "casino_banned_note"
    ],
    "message": "Der Text ist überschrieben mit {item}. Du beginnst, ihn zu lesen.<t-bannote_ok>Diese gekritzelte Notiz gehörte früher einem verbanntem Bürger... Das einzige, was du lesen kannst, ist \"{zone}\"... Seltsam. Du zerstörst die Seite, nur um sicherzugehen, dass niemand die Nachricht liest...</t-bannote_ok><t-bannote_fail>Leider ist der Inhalt dieses Manuskripts völlig unleserlich.</t-bannote_fail>"
  },
  "vibrator": {
    "label": "Verwenden",
    "meta": [
      "must_be_inside",
      "must_be_terrorized"
    ],
    "result": [
      "unterrorize",
      "picto_masochism",
      "morph_vibr_empty"
    ],
    "message": "Du machst es dir daheim gemütlich und entspannst dich... doch dann erlebst du ein böse Überraschung: Dieses Ding ist unglaublich schmerzhaft! Du versuchst es weiter bis du Stück für Stück Gefallen daran findest. Die nach wenige Minuten einsetzende Wirkung ist berauschend! Du schwitzt und zitterst und ein wohlig-warmes Gefühl breitet sich in dir aus...Die Batterie ist komplett leer."
  },
  "watercup_1": {
    "label": "Reinigen (Wasser)",
    "meta": [
      "must_be_inside",
      "must_have_micropur_in",
      "must_not_have_purifier",
      "must_not_have_filter",
      "must_not_be_banished"
    ],
    "result": [
      "consume_micropur",
      "consume_item",
      "picto_ban_emanc",
      "spawn_1_watercup"
    ],
    "message_key": "item_clean_watercup"
  },
  "watercup_2": {
    "label": "Reinigen (Wasser)",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_micropur",
      "must_not_be_banished"
    ],
    "result": [
      "consume_micropur",
      "consume_item",
      "picto_ban_emanc",
      "spawn_1_watercup"
    ],
    "message_key": "item_clean_watercup"
  },
  "watercup_3": {
    "label": "In den Brunnen schütten",
    "meta": [
      "must_be_inside",
      "must_have_purifier",
      "must_not_be_banished"
    ],
    "result": [
      "consume_item",
      "town_well_2"
    ],
    "message_key": "water_to_well"
  },
  "jerrycan_1": {
    "label": "Reinigen (Wasser)",
    "meta": [
      "must_be_inside",
      "must_have_micropur_in",
      "must_not_have_purifier",
      "must_not_be_banished"
    ],
    "result": [
      "consume_micropur",
      "consume_item",
      {
        "group": [
          [
            "spawn_2_water",
            75
          ],
          [
            "spawn_3_water",
            25
          ]
        ]
      }
    ],
    "message_key": "item_clean"
  },
  "jerrycan_2": {
    "label": "In den Brunnen schütten",
    "meta": [
      "must_be_inside",
      "must_have_purifier",
      "must_not_have_filter",
      "must_not_be_banished"
    ],
    "result": [
      "consume_item",
      {
        "group": [
          [
            "town_well_2",
            40
          ],
          [
            "town_well_3",
            35
          ],
          [
            "town_well_4",
            25
          ]
        ]
      }
    ],
    "message_key": "water_to_well"
  },
  "jerrycan_3": {
    "label": "In den Brunnen schütten",
    "meta": [
      "must_be_inside",
      "must_have_filter",
      "must_not_be_banished"
    ],
    "result": [
      "consume_item",
      {
        "group": [
          [
            "town_well_3",
            5
          ],
          [
            "town_well_4",
            15
          ],
          [
            "town_well_5",
            20
          ],
          [
            "town_well_6",
            20
          ],
          [
            "town_well_7",
            20
          ],
          [
            "town_well_8",
            15
          ],
          [
            "town_well_9",
            5
          ]
        ]
      }
    ],
    "message_key": "water_to_well"
  },
  "jerrycan_4": {
    "label": "Reinigen (1AP) (Wasser)",
    "meta": [
      "min_1_ap",
      "must_be_outside",
      "must_have_micropur_in"
    ],
    "result": [
      "consume_micropur",
      "consume_item",
      "spawn_1_water_inv",
      "minus_1ap"
    ],
    "message_key": "item_clean"
  },
  "watercup_1b": {
    "label": "Reinigen (Wasser)",
    "meta": [
      "must_have_micropur_in",
      "must_be_banished"
    ],
    "result": [
      "consume_micropur",
      "consume_item",
      "picto_ban_emanc",
      "spawn_1_watercup"
    ],
    "message_key": "item_clean_watercup"
  },
  "jerrycan_1b": {
    "label": "Reinigen (Wasser)",
    "meta": [
      "must_be_inside",
      "must_have_micropur_in",
      "must_be_banished"
    ],
    "result": [
      "consume_micropur",
      "consume_item",
      {
        "group": [
          [
            "spawn_2_water",
            75
          ],
          [
            "spawn_3_water",
            25
          ]
        ]
      }
    ],
    "message_key": "item_clean"
  },
  "home_def_plus": {
    "label": "Aufstellen",
    "meta": [
      "must_be_inside"
    ],
    "result": [
      "consume_item",
      "picto_home_upgrade",
      "home_def_1"
    ],
    "message": "Sorgfältig befestigst du bei dir daheim ein(e) {item}. So und das hält jetzt, so viel steht schon mal fest.{hr}Dieser Gegenstand gibt deinem Haus permament <strong>{home_defense} zusätzliche Verteidigungspunkt(e).</strong>"
  },
  "home_store_plus": {
    "label": "Aufstellen",
    "meta": [
      "must_be_inside"
    ],
    "result": [
      "consume_item",
      "picto_home_upgrade",
      "home_store_1"
    ],
    "message": "Du stellst den(die) {item} bei dir daheim auf. Zugegeben, es sieht nicht gerade ästhetisch aus, aber mal ganz ehrlich: Wen kümmert das?{hr}Dieser Gegenstand erweitert deine Truhe dauerhaft um soviele freie Plätze: <strong>{home_storage}</strong>."
  },
  "home_store_plus2": {
    "label": "Aufstellen",
    "meta": [
      "must_be_inside"
    ],
    "result": [
      "consume_item",
      "picto_home_upgrade",
      "home_store_2"
    ],
    "message": "Du stellst den(die) {item} bei dir daheim auf. Zugegeben, es sieht nicht gerade ästhetisch aus, aber mal ganz ehrlich: Wen kümmert das?{hr}Dieser Gegenstand erweitert deine Truhe dauerhaft um soviele freie Plätze: <strong>{home_storage}</strong>."
  },
  "repair_1": {
    "label": "Reparieren mit",
    "at00": true,
    "target": {
      "broken": true
    },
    "meta": [
      "min_1_ap",
      "not_tired",
      "is_not_wounded_hands_repair"
    ],
    "result": [
      "minus_1ap",
      "consume_item",
      "repair_target",
      "picto_repair"
    ],
    "message": "Du hast das {item} verbraucht, um damit {target} zu reparieren. Dabei hast du {minus_ap} AP eingesetzt."
  },
  "repair_2": {
    "label": "Reparieren mit",
    "at00": true,
    "target": {
      "broken": true
    },
    "meta": [
      "min_1_ap",
      "not_tired",
      "is_not_wounded_hands_repair"
    ],
    "result": [
      "minus_1ap",
      "picto_repair",
      "repair_target",
      "morph_repair_kit_part"
    ],
    "message": "Du hast das {item} verbraucht, um damit {target} zu reparieren. Dabei hast du {minus_ap} AP eingesetzt."
  },
  "poison_1": {
    "label": "Vergiften mit",
    "at00": true,
    "target": {
      "type": "ItemTargetDefinition::ItemSelectionTypePoison",
      "property": "can_poison",
      "poison": false
    },
    "meta": [],
    "result": [
      "consume_item",
      "poison_target"
    ],
    "message": "Du hast {target} mit {item} kombiniert und {target} erzeugt.{hr}Achtung: Du hast {target} vergiftet. Es ist <strong>nahezu unmöglich, es vom Original zu unterscheiden</strong>, sei also vorsichtig... Es liegt ganz an dir, was du damit jetzt tun möchtest."
  },
  "poison_2": {
    "label": "Vergiften mit",
    "at00": true,
    "target": {
      "type": "ItemTargetDefinition::ItemSelectionTypePoison",
      "property": "can_poison",
      "poison": false
    },
    "meta": [],
    "result": [
      "consume_item",
      "poison_infect_target"
    ],
    "message": "Du hast {target} mit {item} kombiniert und {target} erzeugt.{hr}Achtung: Du hast {target} vergiftet. Es ist <strong>nahezu unmöglich, es vom Original zu unterscheiden</strong>, sei also vorsichtig... Es liegt ganz an dir, was du damit jetzt tun möchtest."
  },
  "zonemarker_1": {
    "label": "Einsetzen",
    "cover": true,
    "at00": true,
    "meta": [],
    "result": [
      "consume_item",
      "zonemarker"
    ],
    "message": "Mithilfe des {item} hast du die Umgebung gescannt."
  },
  "zonemarker_2": {
    "label": "Einsetzen",
    "cover": true,
    "at00": true,
    "meta": [],
    "result": [
      {
        "group": [
          [
            "do_nothing",
            2
          ],
          [
            "morph_radius_mk2_part",
            1
          ]
        ]
      },
      "zonemarker"
    ],
    "message": "Mithilfe des {item} hast du die Umgebung gescannt."
  },
  "nessquick": {
    "label": "Einsetzen",
    "meta": [
      "must_be_outside",
      "must_be_at_buried_ruin"
    ],
    "result": [
      "consume_item",
      "nessquick"
    ],
    "message": "Du hast das Gebiet mit deinem {item} teilweise geräumt ({bury_count} Punkte geräumt)."
  },
  "bomb_1": {
    "label": "Werfen",
    "cover": true,
    "meta": [
      "must_be_outside",
      "must_be_blocked"
    ],
    "result": [
      "consume_item",
      "zone_escape_40"
    ],
    "message_key": "escape_item"
  },
  "bomb_2": {
    "label": "Werfen",
    "cover": true,
    "meta": [
      "must_be_outside_or_exploring",
      "must_be_blocked"
    ],
    "result": [
      "consume_item",
      "zone_escape_300"
    ],
    "message_key": "escape_item"
  },
  "smokebomb": {
    "label": "Werfen",
    "meta": [
      "must_be_outside_not_at_doors"
    ],
    "result": [
      "consume_item",
      "zone_chat_60"
    ],
    "message": "Du wirfst eine Rauchbombe in diese Zone und ein Großes Durcheinander bricht aus!{hr}Deine <strong>nächste Bewegungsaktion</strong> wird night in das Register eingetragen, wenn sie <strong>innerhalb von 1 Minute</strong> erfolgt."
  },
  "eat_fleshroom_1": {
    "label": "Essen",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "eat_ap",
      "no_full_ap_msg_food",
      "not_role_ghoul"
    ],
    "result": [
      "contaminated_zone_infect",
      "eat_ap6",
      "consume_item",
      "ghoul_25_4"
    ],
    "escort_message_key": "escort_food_eat"
  },
  "eat_fleshroom_2": {
    "label": "Essen",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "eat_ap",
      "no_full_ap_msg_food",
      "role_ghoul"
    ],
    "result": [
      "contaminated_zone_infect",
      "eat_ap6",
      "consume_item"
    ],
    "escort_message_key": "escort_food_eat"
  },
  "eat_meat_1": {
    "label": "Essen",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "eat_ap",
      "no_full_ap_msg_food",
      "not_role_ghoul"
    ],
    "result": [
      "contaminated_zone_infect",
      "eat_ap6_silent",
      "consume_item",
      "picto_cannibal",
      "ghoul_25_5"
    ],
    "message_key": "eat_human_meat",
    "escort_message_key": "escort_food_eat"
  },
  "eat_meat_2": {
    "label": "Essen",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "eat_ap",
      "role_ghoul"
    ],
    "result": [
      "contaminated_zone_infect",
      "eat_ap6_silent",
      "consume_item",
      "picto_cannibal",
      "satisfy_ghoul_15"
    ],
    "message_key": "eat_human_meat_ghoul",
    "escort_message_key": "escort_food_eat"
  },
  "eat_bone_1": {
    "label": "Essen",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "eat_ap",
      "no_full_ap_msg_food",
      "not_role_ghoul"
    ],
    "result": [
      "contaminated_zone_infect",
      "eat_ap6_silent",
      "picto_cannibal",
      "morph_bone",
      {
        "group": [
          [
            "do_nothing",
            47
          ],
          [
            "infect",
            50
          ],
          [
            "ghoul_25_100",
            3
          ]
        ]
      }
    ],
    "message_key": "eat_human_meat"
  },
  "eat_bone_2": {
    "label": "Essen",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "eat_ap",
      "role_ghoul"
    ],
    "result": [
      "contaminated_zone_infect",
      "eat_ap6_silent",
      "picto_cannibal",
      "morph_bone",
      "satisfy_ghoul_10"
    ],
    "message_key": "eat_human_meat_ghoul"
  },
  "eat_cadaver_1": {
    "label": "Essen",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "eat_ap",
      "no_full_ap_msg_food",
      "not_role_ghoul"
    ],
    "result": [
      "contaminated_zone_infect",
      "eat_ap6",
      "picto_cannibal",
      "morph_cadaver_remains",
      {
        "group": [
          [
            "infect",
            10
          ],
          [
            "ghoul_5_100",
            90
          ]
        ]
      }
    ]
  },
  "eat_cadaver_2": {
    "label": "Essen",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "eat_ap",
      "role_ghoul"
    ],
    "result": [
      "contaminated_zone_infect",
      "eat_ap6_silent",
      "picto_cannibal",
      "morph_cadaver_remains",
      "satisfy_ghoul_30"
    ],
    "message_key": "eat_human_meat_ghoul"
  },
  "ghoul_serum": {
    "label": "Einnehmen",
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "role_ghoul_serum"
    ],
    "result": [
      "consume_item",
      "heal_ghoul"
    ],
    "message": "Unglaublich! Die ganze Gier, die dich innerlich aufgefressen hat, verschwindet langsam. Ist es wirklich möglich, dass du wieder ein Mensch geworden bist?"
  },
  "cuddle_teddy_1": {
    "label": "Knuddeln",
    "meta": [
      "must_be_terrorized",
      "not_yet_teddy"
    ],
    "result": [
      "status_teddy",
      {
        "group": [
          [
            "do_nothing",
            70
          ],
          [
            "unterrorize",
            30
          ]
        ]
      }
    ],
    "message": "Du drückst den {item} eng an deine Brust... <t-stat-down-terror>Tränen laufen über deine Wange, als du an die Hölle denkst, in der du lebst. Nach ein paar Minuten fühlst du dich besser!</t-stat-down-terror><nt-stat-down-terror>Aber nichts geschieht!</nt-stat-down-terror>"
  },
  "cuddle_teddy_2": {
    "label": "Knuddeln",
    "meta": [
      "must_not_be_terrorized"
    ],
    "result": [
      "terrorize"
    ],
    "message": "Du drückst den {item} eng an deine Brust... <t-stat-up-terror>Panik steigt in dir auf!</t-stat-up-terror><nt-stat-up-terror>Aber nichts geschieht!</nt-stat-up-terror>"
  },
  "clean_clothes": {
    "label": "Reinigen (Kleidung)",
    "meta": [
      "must_be_inside"
    ],
    "result": [
      "morph_basic_suit",
      "status_clothes"
    ],
    "message": "Du nimmst dir ein paar Minuten, um deine {item} zu reinigen. Du schrubbst sorgfältig die Blutflecken ab und flickst ein paar kleine Löcher."
  },
  "flash_photo_4": {
    "label": "Benutzen",
    "meta": [
      "must_be_outside_not_at_doors",
      "must_have_zombies",
      "must_be_blocked",
      "must_not_have_ruin"
    ],
    "result": [
      "morph_photo_3",
      "zone_escape_120"
    ],
    "message_key": "escape_item_camera"
  },
  "flash_photo_4_ruin_no_bp": {
    "label": "Benutzen",
    "meta": [
      "must_be_outside_not_at_doors",
      "must_have_zombies",
      "must_be_blocked",
      "must_have_ruin_no_bp"
    ],
    "result": [
      "morph_photo_3",
      "zone_escape_120"
    ],
    "message_key": "escape_item_camera"
  },
  "flash_photo_4_ruin_bp": {
    "label": "Benutzen",
    "meta": [
      "must_be_outside_not_at_doors",
      "must_have_ruin_with_bp",
      "must_be_blocked_hd"
    ],
    "result": [
      "morph_photo_3",
      "zone_escape_120",
      "give_ruin_bp"
    ],
    "message_key": "escape_item_camera_spawn_bp"
  },
  "flash_photo_4_ruin_bp_free": {
    "label": "Benutzen",
    "meta": [
      "must_be_outside_not_at_doors",
      "must_have_ruin_with_bp",
      "must_not_be_blocked_hd"
    ],
    "result": [
      "morph_photo_3",
      "give_ruin_bp"
    ],
    "message_key": "photo_spawn_bp"
  },
  "flash_photo_3": {
    "label": "Benutzen",
    "meta": [
      "must_be_outside_not_at_doors",
      "must_have_zombies",
      "must_be_blocked"
    ],
    "result": [
      "morph_photo_2",
      {
        "group": [
          [
            [
              "do_nothing"
            ],
            1
          ],
          [
            [
              "zone_escape_120"
            ],
            100
          ]
        ]
      }
    ],
    "message_key": "escape_item_camera"
  },
  "flash_photo_2": {
    "label": "Benutzen",
    "meta": [
      "must_be_outside_not_at_doors",
      "must_have_zombies",
      "must_be_blocked"
    ],
    "result": [
      "morph_photo_1",
      {
        "group": [
          [
            [
              "do_nothing"
            ],
            30
          ],
          [
            [
              "zone_escape_60"
            ],
            66
          ]
        ]
      }
    ],
    "message_key": "escape_item_camera"
  },
  "flash_photo_1": {
    "label": "Benutzen",
    "meta": [
      "must_be_outside_not_at_doors",
      "must_have_zombies",
      "must_be_blocked"
    ],
    "result": [
      "morph_photo_off",
      {
        "group": [
          [
            [
              "do_nothing"
            ],
            60
          ],
          [
            [
              "zone_escape_30"
            ],
            33
          ]
        ]
      }
    ],
    "message_key": "escape_item_camera"
  },
  "alarm_clock": {
    "label": "Benutzen",
    "at00": true,
    "meta": [
      "have_battery"
    ],
    "result": [
      "consume_battery",
      "morph_alarm_3"
    ],
    "message": "Du hast {item_from} in {item_to} verwandelt."
  },
  "pumpkin": {
    "label": "Einsetzen",
    "meta": [],
    "result": [
      "morph_pumpkin_off"
    ]
  },
  "flare": {
    "label": "Benutzen",
    "meta": [],
    "result": [
      "flare"
    ],
    "message": "<t-flare_ok>Die Leuchtrakete hat neue Informationen zu folgender Zone geliefert: {zone}</t-flare_ok><t-flare_ok_ruin>Mit Hilfe der Leuchrakete wurde ein neues Gebäude entdeckt: {zone_ruin}. Seine Koordinaten lauten: {zone}</t-flare_ok_ruin><t-flare_fail>Es gibt keine weitere Zone zu entdecken.</t-flare_fail>"
  },
  "repair_hero": {
    "label": "Reparieren (3CP)",
    "at00": true,
    "target": {
      "broken": true
    },
    "meta": [
      "min_3_cp",
      "not_tired",
      "is_not_wounded_hands"
    ],
    "result": [
      "minus_3cp",
      "repair_target",
      "picto_repair"
    ],
    "message": "Du hast dein Handwerkstalent gebraucht, um damit {target} zu reparieren. Dabei hast du {minus_cp} CP eingesetzt."
  },
  "hero_tamer_1": {
    "label": "Zur Bank schicken",
    "at00": true,
    "renderer": "tamer_dog_popup",
    "meta": [
      "must_be_outside_or_exploring"
    ],
    "result": [
      "hero_tamer_1"
    ],
    "message": "<t-fail><t-door-closed>Das Stadttor ist geschlossen...</t-door-closed><t-no-items>{tamer_dog} kann nichts mitnehmen, da du <strong>nichts im Rucksack hast</strong>.</t-no-items><t-too-heavy>{tamer_dog} kann deinen Rucksackinhalt nicht mitnehmen, da du einen <strong>sperrigen Gegenstand</strong> mit dir rumschleppt. Das ist dann wohl etwas zu viel des Guten für den Kleinen!</t-too-heavy></t-fail><nt-fail>Du befiehlst {tamer_dog} deinen Rucksackinhalt in die Stadt zu bringen.{hr}<strong>Deine Mitbürger werden sich über all diese Gegenstände in der Bank mächtig freuen.</strong></nt-fail>"
  },
  "hero_tamer_2": {
    "label": "Zur Bank schicken",
    "at00": true,
    "renderer": "tamer_dog_popup",
    "meta": [
      "must_be_outside_or_exploring"
    ],
    "result": [
      "hero_tamer_2"
    ],
    "message": "<t-fail><t-door-closed>Das Stadttor ist geschlossen...</t-door-closed><t-no-items>{tamer_dog} kann nichts mitnehmen, da du <strong>nichts im Rucksack hast</strong>.</t-no-items></t-fail><nt-fail>Du befiehlst {tamer_dog} deinen Rucksackinhalt in die Stadt zu bringen.{hr}<strong>Deine Mitbürger werden sich über all diese Gegenstände in der Bank mächtig freuen.</strong></nt-fail>"
  },
  "hero_tamer_1b": {
    "label": "Zur Truhe schicken",
    "at00": true,
    "renderer": "tamer_dog_popup",
    "meta": [
      "must_be_outside_or_exploring"
    ],
    "result": [
      "hero_tamer_1b"
    ],
    "message": "<t-fail><t-no-room>Deine Truhe kann nicht <strong>{items_count} Gegenstände</strong> aufnehmen: er hat <strong>{size} Platz(e)</strong> übrig.</t-no-room><t-door-closed>Das Stadttor ist geschlossen...</t-door-closed><t-no-items>{tamer_dog} kann nichts mitnehmen, da du <strong>nichts im Rucksack hast</strong>.</t-no-items><t-too-heavy>{tamer_dog} kann deinen Rucksackinhalt nicht mitnehmen, da du einen <strong>sperrigen Gegenstand</strong> mit dir rumschleppt. Das ist dann wohl etwas zu viel des Guten für den Kleinen!</t-too-heavy></t-fail><nt-fail>Du befiehlst {tamer_dog} deinen Rucksackinhalt in die Stadt zu bringen.{hr}Genau wie du es gewünscht hast, <strong>hat er alles zur Truhe in deinem Haus gebracht</strong>.{hr}Braver Junge!</nt-fail>"
  },
  "hero_tamer_2b": {
    "label": "Zur Truhe schicken",
    "at00": true,
    "renderer": "tamer_dog_popup",
    "meta": [
      "must_be_outside_or_exploring"
    ],
    "result": [
      "hero_tamer_2b"
    ],
    "message": "<t-fail><t-no-room>Deine Truhe kann nicht <strong>{items_count} Gegenstände</strong> aufnehmen: er hat <strong>{size} Platz(e)</strong> übrig.</t-no-room><t-door-closed>Das Stadttor ist geschlossen...</t-door-closed><t-no-items>{tamer_dog} kann nichts mitnehmen, da du <strong>nichts im Rucksack hast</strong>.</t-no-items></t-fail><nt-fail>Du befiehlst {tamer_dog} deinen Rucksackinhalt in die Stadt zu bringen.{hr}Genau wie du es gewünscht hast, <strong>hat er alles zur Truhe in deinem Haus gebracht</strong>.{hr}Braver Junge!</nt-fail>"
  },
  "hero_tamer_3": {
    "label": "Füttern",
    "at00": true,
    "renderer": "tamer_dog_popup",
    "meta": [
      "must_be_anywhere",
      "must_have_steak"
    ],
    "result": [
      "consume_steak",
      "hero_tamer_3"
    ],
    "message": "Du gibst deinem {tamer_dog} {items_consume}, das er gierig hinunterschlingt.{hr}Es vergeht keine Minute bis diese Belohnung Wirkung zeigt: Dein Fifi hat nun leuchtende Augen, ein glänzendes Fell und einen wedelnden Schwanz."
  },
  "hero_tamer_4": {
    "label": "Schützen lassen",
    "at00": true,
    "renderer": "tamer_dog_popup",
    "meta": [
      "must_be_inside"
    ],
    "result": [
      "hero_tamer_use",
      "hero_tamer_4"
    ],
    "message": "{tamer_dog} macht sich bereit, dein Leben zu schützen."
  },
  "hero_tamer_4b": {
    "label": "Schützen lassen",
    "at00": true,
    "renderer": "tamer_dog_popup",
    "meta": [
      "must_be_inside"
    ],
    "result": [
      "hero_tamer_use",
      "hero_tamer_4b"
    ],
    "message": "{tamer_dog} macht sich bereit, dein Leben zu schützen."
  },
  "hero_tamer_5": {
    "label": "Eingraben lassen",
    "renderer": "tamer_dog_popup",
    "meta": [
      "must_be_outside_no_door_no_ex",
      "feature_camping",
      "must_not_be_hidden",
      "must_not_be_tombed"
    ],
    "result": [
      "hero_tamer_use",
      "camp_tomb",
      "camp_activate"
    ],
    "message": "{tamer_dog} hat Dir ein gemütliches Grab gebuddelt."
  },
  "hero_tamer_5b": {
    "label": "Eingraben und verstecken lassen",
    "renderer": "tamer_dog_popup",
    "meta": [
      "must_be_outside_no_door_no_ex",
      "feature_camping",
      "must_not_be_hidden",
      "must_not_be_tombed",
      "zone_is_improvable"
    ],
    "result": [
      "hero_tamer_use",
      "zone_improve_5",
      "camp_tomb",
      "camp_activate"
    ],
    "message": "{tamer_dog} hat Dir ein gemütliches und gut verstecktes Grab gebuddelt."
  },
  "hero_tamer_6": {
    "label": "Aus der Truhe",
    "renderer": "tamer_dog_popup",
    "at00": false,
    "cover": true,
    "target": {
      "type": "ItemTargetDefinition::ItemTypeChestSelectionType",
      "heavy": false
    },
    "meta": [
      "must_be_outside_not_at_doors",
      "room_for_item_no_container"
    ],
    "result": [
      "tamer_fetch"
    ],
    "message": "<t-fail><t-door-closed>Das Stadttor ist geschlossen...</t-door-closed><t-impossible>{tamer_dog} kann dir diesen Gegenstand nicht bringen.</t-impossible></t-fail><nt-fail>{tamer_dog} hat dir soeben eine/n {target} aus der Stadt gebracht. Genau das, was du gebraucht hast!</nt-fail>"
  },
  "hero_tamer_6b": {
    "label": "Aus der Truhe",
    "renderer": "tamer_dog_popup",
    "at00": false,
    "cover": true,
    "target": {
      "type": "ItemTargetDefinition::ItemTypeChestSelectionType"
    },
    "meta": [
      "must_be_outside_not_at_doors",
      "room_for_item_no_container"
    ],
    "result": [
      "tamer_fetch"
    ],
    "message": "<t-fail><t-door-closed>Das Stadttor ist geschlossen...</t-door-closed><t-impossible>{tamer_dog} kann dir diesen Gegenstand nicht bringen.</t-impossible></t-fail><nt-fail>{tamer_dog} hat dir soeben eine/n {target} aus der Stadt gebracht. Genau das, was du gebraucht hast!</nt-fail>"
  },
  "hero_tamer_7": {
    "label": "Schmiere stehen",
    "renderer": "tamer_dog_popup",
    "meta": [
      "must_be_inside"
    ],
    "result": [
      "hero_tamer_use",
      "hero_tamer_7"
    ],
    "message": "{tamer_dog} wird sich bemerkbar machen, wenn du im Begriff bist, bei einer schändlichen Tat überrascht zu werden."
  },
  "hero_tamer_7b": {
    "label": "Schmiere stehen",
    "renderer": "tamer_dog_popup",
    "meta": [
      "must_be_inside"
    ],
    "result": [
      "hero_tamer_use",
      "hero_tamer_7b"
    ],
    "message": "{tamer_dog} wird sich bemerkbar machen, wenn du im Begriff bist, bei einer schändlichen Tat überrascht zu werden."
  },
  "hero_tamer_8": {
    "label": "Haus bewachen",
    "renderer": "tamer_dog_popup",
    "meta": [
      "must_be_inside"
    ],
    "result": [
      "hero_tamer_gone",
      "hero_tamer_8"
    ],
    "message": "{tamer_dog} wird dafür sorgen, dass dir heute niemand einen ungebetenen Besuch abstattet."
  },
  "hero_tamer_8b": {
    "label": "Haus bewachen",
    "renderer": "tamer_dog_popup",
    "meta": [
      "must_be_inside"
    ],
    "result": [
      "hero_tamer_gone",
      "hero_tamer_8b"
    ],
    "message": "{tamer_dog} wird dafür sorgen, dass dir heute niemand einen ungebetenen Besuch abstattet."
  },
  "hero_tamer_9": {
    "label": "Aus der Bank",
    "renderer": "tamer_dog_popup",
    "at00": false,
    "cover": true,
    "target": {
      "type": "ItemTargetDefinition::ItemTypeSelectionType",
      "property": "hero_dog_fetch",
      "note": "Beachte, dass dein Hund nur dann einen Gegenstand holen kann, wenn dieser sich auch wirklich in der Bank befindet..."
    },
    "meta": [
      "must_be_outside",
      "room_for_item_no_container",
      "must_not_be_banished"
    ],
    "result": [
      "hero_tamer_9"
    ],
    "message": "<t-fail><t-door-closed>Das Stadttor ist geschlossen...</t-door-closed><t-impossible>{tamer_dog} ist erschöpft zu dir zurückgekehrt... aber er hat nichts in seinem Maul. Offensichtlich konnte er nicht finden, wonach du gesucht hast.</t-impossible></t-fail><nt-fail>{tamer_dog} hat dir soeben eine/n {target} aus der Bank gebracht. Genau das, was du gebraucht hast!</nt-fail>"
  },
  "hero_surv_1": {
    "label": "Wasser suchen",
    "renderer": "survivalist_popup",
    "meta": [
      "must_be_outside",
      "must_be_outside_3km",
      "not_yet_sbook"
    ],
    "result": [
      "contaminated_zone_infect",
      "hero_surv_0",
      "hero_surv_1"
    ],
    "message": "{casino}"
  },
  "hero_surv_2": {
    "label": "Essen suchen",
    "renderer": "survivalist_popup",
    "meta": [
      "must_be_outside",
      "no_full_ap",
      "must_be_outside_3km",
      "not_yet_sbook",
      "eat_ap"
    ],
    "result": [
      "contaminated_zone_infect",
      "hero_surv_0",
      "hero_surv_2"
    ],
    "message": "{casino}"
  },
  "hero_hunter_1": {
    "label": "Tarnen",
    "at00": true,
    "meta": [
      "must_be_outside",
      "hunter_no_followers",
      "must_have_control_hunter"
    ],
    "result": [
      "hero_hunter"
    ],
    "message": "Du bist ab sofort getarnt."
  },
  "hero_hunter_2": {
    "label": "Tarnen",
    "at00": true,
    "meta": [
      "must_be_inside"
    ],
    "result": [
      "hero_hunter"
    ],
    "message": "Du bist nun getarnt."
  },
  "hero_generic_return": {
    "label": "Die Rückkehr des Helden",
    "tooltip": "Wenn du {CitizenProperties::HeroReturnRange->translationKey()} km oder weniger von der Stadt entfernt bist, kehrst du sofort in die Stadt zurück!",
    "cover": true,
    "at00": true,
    "meta": [
      "must_be_outside_or_exploring",
      "must_be_outside_within_hr",
      "not_yet_hero"
    ],
    "result": [
      "hero_act",
      "hero_return"
    ],
    "message": "Mit deiner letzten Kraft hast du dich *in die Stadt geschleppt*... *Ein Wunder*!"
  },
  "hero_generic_find": {
    "label": "Fund",
    "tooltip": "Wie durch ein Wunder treibst du einen nützlichen Gegenstand auf.",
    "cover": true,
    "at00": true,
    "target": {
      "type": "ItemTargetDefinition::ItemTypeSelectionType",
      "property": "hero_find"
    },
    "meta": [
      "not_yet_hero"
    ],
    "result": [
      "hero_act",
      "spawn_target"
    ],
    "message": "So was nennt man wohl <strong>Glück</strong>! <t-inside>Du hast soeben {items_spawn} in einem Abfallberg neben deinem Haus gefunden!</t-inside><t-outside>Du hast soeben {items_spawn} im Wüstensand gefunden!</t-outside> Genau das, was du gebraucht hast!"
  },
  "hero_generic_find_lucky": {
    "label": "Schönes Fundstück",
    "tooltip": "Wie durch ein Wunder treibst du einen nützlichen Gegenstand auf.",
    "cover": true,
    "at00": true,
    "target": {
      "type": "ItemTargetDefinition::ItemTypeSelectionType",
      "property": "hero_find_lucky"
    },
    "meta": [
      "not_yet_hero"
    ],
    "result": [
      "hero_act",
      "spawn_target"
    ],
    "message": "So was nennt man wohl <strong>Glück</strong>! <t-inside>Du hast soeben {items_spawn} in einem Abfallberg neben deinem Haus gefunden!</t-inside><t-outside>Du hast soeben {items_spawn} im Wüstensand gefunden!</t-outside> Genau das, was du gebraucht hast!"
  },
  "hero_generic_find_lcky2": {
    "label": "Beeindruckendes Fundstück",
    "tooltip": "Wie durch ein Wunder treibst du einen nützlichen Gegenstand auf.",
    "cover": true,
    "at00": true,
    "target": {
      "type": "ItemTargetDefinition::ItemTypeSelectionType",
      "property": "hero_find_lucky2"
    },
    "meta": [
      "not_yet_hero"
    ],
    "result": [
      "hero_act",
      "spawn_target"
    ],
    "message": "So was nennt man wohl <strong>Glück</strong>! <t-inside>Du hast soeben {items_spawn} in einem Abfallberg neben deinem Haus gefunden!</t-inside><t-outside>Du hast soeben {items_spawn} im Wüstensand gefunden!</t-outside> Genau das, was du gebraucht hast!"
  },
  "hero_generic_find_lcky3": {
    "label": "Erstaunliches Fundstück",
    "tooltip": "Wie durch ein Wunder treibst du einen nützlichen Gegenstand auf.",
    "cover": true,
    "at00": true,
    "target": {
      "type": "ItemTargetDefinition::ItemTypeSelectionType",
      "property": "hero_find_lucky3"
    },
    "meta": [
      "not_yet_hero"
    ],
    "result": [
      "hero_act",
      "spawn_target"
    ],
    "message": "So was nennt man wohl <strong>Glück</strong>! <t-inside>Du hast soeben {items_spawn} in einem Abfallberg neben deinem Haus gefunden!</t-inside><t-outside>Du hast soeben {items_spawn} im Wüstensand gefunden!</t-outside> Genau das, was du gebraucht hast!"
  },
  "hero_generic_punch": {
    "label": "Wildstyle Uppercut",
    "tooltip": "Damit kannst du mit einem Schlag {CitizenProperties::HeroPunchKills->translationKey()} Zombies umbringen!",
    "meta": [
      "must_be_outside_or_exploring",
      "must_have_zombies",
      "not_yet_hero"
    ],
    "result": [
      "hero_act",
      "zone_kill_punch"
    ],
    "message": "Mit Hilfe deiner übermenschlichen Heldenkräfte hast du <strong>{kills} Zombie(s)</strong> platt gemacht!"
  },
  "hero_generic_ap": {
    "label": "Zweite Lunge",
    "tooltip": "<nc-HeroSecondWindBonusAP op=\"gt\" val=\"0\">Verschafft dir {CitizenProperties::HeroSecondWindBaseSP->translationKey()} frische Erkundungspunkte.</nc-HeroSecondWindBonusAP><c-HeroSecondWindBonusAP op=\"gt\" val=\"0\">Verschafft dir {CitizenProperties::HeroSecondWindBaseSP->translationKey()} frische Erkundungspunkte, stellt {CitizenProperties::HeroSecondWindBonusAP->translationKey()} AP wieder her und beseitigt deine Müdigkeit.</c-HeroSecondWindBonusAP>",
    "cover": true,
    "at00": true,
    "meta": [
      "not_yet_hero"
    ],
    "result": [
      "hero_act",
      "just_ap_sw"
    ],
    "message": "Du atmest tief durch und drückst den Rücken durch. Auf geht's! Ich werde nicht hier sterben!{hr}Du hast soeben Kraft getankt und <strong>{sp} neue EP<c-HeroSecondWindBonusAP op=\"gt\" val=\"0\"> sowie {ap} neue AP</c-HeroSecondWindBonusAP> erhalten</strong>."
  },
  "hero_generic_immune": {
    "label": "Den Tod besiegen",
    "tooltip": "Beim nächsten Angriff wird der Effekt des <c-HeroImmuneStatusList op=\"map\" thirst=\"Durst\" hunger=\"Hunger\" infection=\"Infektions\" addiction=\"Abhängigkeits\" glue=\"-, \" final_glue=\"- und \"></c-HeroImmuneStatusList>zustands außer Kraft gesetzt.<c-HeroImmuneHeals op=\"is\" val=\"true\"> Zudem wirst du mit sofortiger Wirkung von Angststarre und Kater geheilt und verlierst den \"Bandagiert\"-Status.</c-HeroImmuneHeals>",
    "cover": true,
    "at00": true,
    "meta": [
      "not_yet_hero"
    ],
    "result": [
      "hero_act",
      "hero_immune"
    ],
    "message": "Du versucht nochmal alle deine Kräfte für heute Abend zu mobilisieren. Die Anspannung steht dir ins Gesicht geschrieben. Du schwitzt und deine Hände zittern.{hr}Beim heutigen Angriff wirst du weder <c-HeroImmuneStatusList op=\"map\" thirst=\"Durst\" hunger=\"Hunger\" infection=\"Krankheitssymptome (Infektion)\"  addiction=\"Entzugserscheinungen\" glue=\", noch \"></c-HeroImmuneStatusList> verspüren.<t-stat-down-terror>{hr}Du fühlst einen neuen Schub an Selbstsicherheit und verlierst deine Panik vor den Zombies.</t-stat-down-terror><t-stat-down-hungover>{hr}Dank deiner frisch geschöpften Hoffnung hast du nun wieder einen klaren Kopf.</t-stat-down-hungover><t-stat-down-healed>{hr}Du atmest einmal tief ein und spürst, wie die Wunde unter deinen Bandagen heilt.</t-stat-down-healed>"
  },
  "hero_generic_immune2": {
    "label": "Rudimentäre Pflege",
    "tooltip": "Erlaubt es einem anderen Bürger, beim nächsten Angriff sowohl Durst- als auch Infektionszustand außer Kraft zu setzen.",
    "cover": true,
    "at00": true,
    "target": {
      "type": "ItemTargetDefinition::ItemCitizenOnZoneType"
    },
    "meta": [
      "not_yet_hero"
    ],
    "result": [
      "hero_act",
      "hero_immune2"
    ],
    "message": "Die Anspannung steht deinem Patienten ins Gesicht geschrieben. Er schwitzt und seine Hände zittern.{hr}Beim heutigen Angriff wird er weder Durst, noch Krankheitssymptome (Infektion) verspüren."
  },
  "hero_generic_rescue": {
    "label": "Rettung",
    "tooltip": "Du bringst einen anderen Spieler nach Hause (dieser darf max. {CitizenProperties::HeroRescueRange->translationKey()} Felder von der Stadt entfernt sein).",
    "confirm": true,
    "confirmMsg": "Möchtest du {target} heimbringen?",
    "target": {
      "type": "ItemTargetDefinition::ItemHeroicRescueType"
    },
    "meta": [
      "must_be_inside",
      "not_yet_hero"
    ],
    "result": [
      "hero_act",
      "hero_rescue"
    ],
    "message": "Du hast {citizen} auf heldenhafte Weise in die Stadt gebracht!"
  },
  "hero_generic_friendship": {
    "label": "Freundschaft",
    "tooltip": "Du spendest eine deiner noch nicht verwendeten Heldentaten an einen anderen Spieler.",
    "confirm": true,
    "confirmMsg": "Möchtest du deine Heldentat {targetAction} an {targetPlayer} spenden? Du kannst sie danach nicht mehr selbst verwenden. ACHTUNG: Wenn {targetPlayer} bereits eine Heldentat von jemand anderem erhalten oder {targetAction} noch nicht selbst verwendet hat, verfällt dein Geschenk.",
    "target": {
      "type": "ItemTargetDefinition::ItemFriendshipType"
    },
    "meta": [
      "not_yet_hero",
      "can_use_friendship"
    ],
    "result": [
      "hero_act",
      "hero_bia"
    ],
    "message": "Du hast deine Heldentat an {citizen} weitergegeben."
  },
  "hero_generic_fs_xp": {
    "label": "Erfahrung teilen",
    "tooltip": "Du gibst 5 Erfahrungspunkte aus, damit ein anderer Spieler 10 Erfahrungspunkte erhält.",
    "confirm": true,
    "confirmMsg": "Möchtest du 5 Erfahrungspunkte ausgeben, damit {target} 10 Erfahrungspunkte erhält? Hinweis: Pro Saison kannst du dem gleichen Spieler maximal 3x Erfahrung spenden.",
    "target": {
      "type": "ItemTargetDefinition::ItemFriendshipXPType"
    },
    "meta": [
      "not_yet_hero",
      "can_use_friendship"
    ],
    "result": [
      "hero_act",
      "hero_sxp"
    ],
    "message": "Du hast deine Erfahrung an {citizen} weitergegeben."
  },
  "wagging_flag": {
    "label": "Wedeln",
    "at00": true,
    "meta": [
      "not_yet_flag",
      "must_be_inside"
    ],
    "result": [
      "status_flag_today"
    ],
    "message": "Wild und unter lautem Rufen wedelst du mit der Flagge in der Luft. Überraschenderweise passiert nach mehreren Sekunden... gar nichts."
  },
  "pet_doggo": {
    "label": "Streicheln",
    "meta": [
      "must_be_anywhere"
    ],
    "result": [
      "do_nothing"
    ],
    "message": "Du weißt nicht, warum, aber du verspürst den Drang, mit deiner Hand durch sein Fell zu streichen. Das Gefühl bereitet dir ein wenig Freude, und {tamer_dog} wedelt mit dem Schwanz, während du ihn streichelst"
  },
  "throw_sandball": {
    "label": "Werfen",
    "meta": [
      "must_be_outside",
      "during_christmas"
    ],
    "result": [
      "sandball"
    ],
    "message": "<nt-fail>Du hast einen Sandball in {citizen}s Gesicht geworfen.</nt-fail><t-fail>Hier ist niemand, auf den du den Sandball werfen könntest...</t-fail>"
  },
  "scare": {
    "label": "Erschrecken",
    "target": {
      "type": "ItemTargetDefinition::ItemCitizenOnZoneSMType"
    },
    "meta": [
      "during_halloween",
      "not_yet_scary"
    ],
    "result": [
      "scary_mask"
    ]
  },
  "special_armag": {
    "label": "Durchgang in Kraft",
    "tooltip_key": "heroic_arma_tooltip",
    "allow_when_terrorized": true,
    "meta": [
      "must_be_outside",
      "must_be_blocked"
    ],
    "result": [
      {
        "group": [
          [
            [
              "do_nothing",
              "msg_heroic_arma_fail"
            ],
            50
          ],
          [
            [
              "msg_heroic_arma_success",
              "zone_escape_600_armag",
              "kill_1_zombie_s"
            ],
            50
          ]
        ]
      }
    ]
  },
  "special_armag_d": {
    "label": "Durchgang in Kraft",
    "tooltip_key": "heroic_arma_tooltip",
    "allow_when_terrorized": true,
    "meta": [
      "must_be_outside",
      "must_be_blocked",
      "must_be_day"
    ],
    "result": [
      {
        "group": [
          [
            [
              "do_nothing",
              "msg_heroic_arma_fail"
            ],
            50
          ],
          [
            [
              "msg_heroic_arma_success",
              "zone_escape_600_armag",
              "kill_1_zombie_s"
            ],
            50
          ]
        ]
      }
    ]
  },
  "special_armag_n": {
    "label": "Durchgang in Kraft",
    "tooltip_key": "heroic_arma_tooltip",
    "allow_when_terrorized": true,
    "meta": [
      "must_be_outside",
      "must_be_blocked",
      "must_be_night"
    ],
    "result": [
      {
        "group": [
          [
            [
              "do_nothing",
              "msg_heroic_arma_fail"
            ],
            25
          ],
          [
            [
              "msg_heroic_arma_success",
              "zone_escape_600_armag",
              "kill_1_zombie_s"
            ],
            75
          ]
        ]
      }
    ]
  },
  "special_vote_shaman": {
    "label": "Den Shamane wählen",
    "target": {
      "type": "ItemTargetDefinition::ItemCitizenVoteType"
    },
    "meta": [
      "must_be_outside",
      "profession_heroic",
      "vote_shaman_needed",
      "vote_shaman_not_given"
    ],
    "result": [
      "vote_role_shaman"
    ]
  },
  "special_vote_guide": {
    "label": "Den Reiseleiter in der Außenwelt wählen",
    "target": {
      "type": "ItemTargetDefinition::ItemCitizenVoteType"
    },
    "meta": [
      "must_be_outside",
      "profession_heroic",
      "vote_guide_needed",
      "vote_guide_not_given"
    ],
    "result": [
      "vote_role_guide"
    ]
  },
  "special_vote_cata": {
    "label": "Den Katapultbediener wählen",
    "target": {
      "type": "ItemTargetDefinition::ItemCitizenVoteType"
    },
    "meta": [
      "must_be_outside",
      "profession_heroic",
      "vote_cata_needed",
      "vote_cata_not_given"
    ],
    "result": [
      "vote_role_cata"
    ]
  },
  "improve": {
    "label": "Aufbauen",
    "meta": [
      "must_be_outside",
      "zone_is_improvable",
      "min_1_ap",
      "must_be_outside_not_at_doors",
      "feature_camping"
    ],
    "result": [
      "minus_1ap",
      "consume_item",
      "zone_improve_9"
    ],
    "message": "Du befestigst den {item} und bedeckst ihn zur Tarnung mit herumliegendem Müll und vertrockneten Zweigen. Na bitte, das sollte hoffentlich deine Überlebenschancen heute Nacht verbessern. Du hast dafür 1 Aktionspunkt verbraucht."
  },
  "cm_campsite_hide": {
    "label": "Sich verstecken und die Nacht hier schlafen!",
    "meta": [
      "must_be_outside",
      "must_not_be_hidden",
      "must_not_be_tombed"
    ],
    "result": [
      "camp_hide",
      "camp_activate"
    ],
    "message": "Du hast Dich notdürftig versteckt."
  },
  "cm_campsite_improve": {
    "label": "Schlafplatz verbessern (schwacher permanenter Bonus, 1AP)",
    "meta": [
      "min_1_ap",
      "not_tired",
      "must_be_outside",
      "must_not_be_hidden",
      "must_not_be_tombed",
      "zone_is_improvable"
    ],
    "result": [
      "minus_1ap",
      "zone_improve_5"
    ],
    "message": "Du hast das hiesige Versteck verbessert."
  },
  "cm_campsite_tomb": {
    "label": "\"Grab\" schaufeln (mittelmäßiger vorübergehender Bonus, 1AP)",
    "meta": [
      "min_1_ap",
      "not_tired",
      "must_be_outside",
      "must_not_be_hidden",
      "must_not_be_tombed"
    ],
    "result": [
      "minus_1ap",
      "camp_tomb",
      "camp_activate"
    ],
    "message": "Du hast Dir Dein eigenes Grab geschaufelt. Oh welche Ironie!"
  },
  "cm_campsite_unhide": {
    "label": "Versteck verlassen",
    "meta": [
      "must_be_outside",
      "must_be_hidden"
    ],
    "result": [
      "camp_unhide",
      "camp_deactivate"
    ],
    "message": "Du hast Dein Versteck verlassen."
  },
  "cm_campsite_untomb": {
    "label": "Grab verlassen",
    "meta": [
      "must_be_outside",
      "must_be_tombed"
    ],
    "result": [
      "camp_untomb",
      "camp_deactivate"
    ],
    "message": "Du hast Dein Grab verlassen. Die schöne Arbeit umsonst!"
  },
  "home_clean": {
    "label": "Haus aufräumen und putzen",
    "meta": [
      "must_be_inside",
      "not_yet_home_cleaned"
    ],
    "result": [
      "status_home_clean"
    ],
    "message": "Du räumst deinen ganzen Plunder auf und machst ein wenig Ordnung, damit es hier etwas aufgeräumter aussieht. Auch wenn's ne Bruchbude ist, es ist DEIN Zuhause..."
  },
  "home_shower": {
    "label": "Duschen",
    "meta": [
      "must_be_inside",
      "must_have_shower",
      "not_yet_home_showered"
    ],
    "result": [
      "status_home_shower"
    ],
    "message": "Du springst unter die hausgemachte Dusche ohne weiter darüber nachzudenken. Das eiskalte Wasser erschreckt dich, aber dennoch bleibst du für einige Augenblicke unter dem schwachen Wasserstrahl stehen. In Ermangelung von Seife reibst du dich mit einem glatten Stein ab und versuchst, den Schlamm und die Blutflecken abzuwaschen. Dabei versuchst du, dir einzureden, dass es sich gut anfühlt."
  },
  "home_heal_1": {
    "label": "Heilen",
    "meta": [
      "min_5_ap",
      "must_be_inside",
      "must_have_hospital",
      "not_yet_home_heal_1",
      "is_wounded_h",
      "is_not_infected_h"
    ],
    "result": [
      "minus_5ap",
      "heal_wound",
      "status_home_heal_1"
    ],
    "message_key": "home_heal_wound"
  },
  "home_heal_2": {
    "label": "Heilen",
    "meta": [
      "min_5_ap",
      "must_be_inside",
      "must_have_hospital",
      "not_yet_home_heal_2",
      "is_not_wounded_h",
      "is_infected_h"
    ],
    "result": [
      "minus_5ap",
      "disinfect",
      "status_home_heal_2"
    ],
    "message_key": "home_heal_infect"
  },
  "home_heal_3": {
    "label": "Heilen",
    "meta": [
      "min_5_ap",
      "must_be_inside",
      "must_have_hospital",
      "not_yet_home_heal_2",
      "is_wounded_h",
      "is_infected_h"
    ],
    "result": [
      "minus_5ap",
      "disinfect",
      "status_home_heal_2"
    ],
    "message_key": "home_heal_infect"
  },
  "home_defbuff": {
    "label": "Verteidigung organisieren",
    "meta": [
      "profession_guardian",
      "min_1_ap",
      "must_be_inside",
      "must_have_guardtower",
      "not_yet_home_defbuff",
      "guard_tower_not_max"
    ],
    "result": [
      "minus_1ap",
      "status_home_defbuff",
      "use_guard_tower"
    ],
    "message": "Du hast dir etwas Zeit genommen und zur Verteidigung der Stadt beigetragen."
  },
  "home_crows_any": {
    "label": "Die Wüste kartographieren",
    "meta": [
      "must_be_inside",
      "min_1_ap",
      "not_profession_hunter",
      "must_have_crowsnest",
      "hunter_building_counter_below_1"
    ],
    "result": [
      "minus_1ap",
      "status_count_hunter",
      "status_start_sp"
    ],
    "message": "Frenetisch schreibst du alles auf was du in der Umgebung entdeckst. Dieses Wissen wird dir morgen sicherlich helfen, dich noch effektiver in der Außenwelt zu bewegen."
  },
  "home_crows": {
    "label": "Die Wüste kartographieren",
    "meta": [
      "must_be_inside",
      "min_1_ap",
      "profession_hunter",
      "must_have_crowsnest",
      "hunter_building_counter_below_1"
    ],
    "result": [
      "minus_1ap",
      "status_count_hunter",
      "status_start_sp"
    ],
    "message": "Nichts entgeht deinem geschulten Blick! All die gesammelten Informationen werden dir morgen helfen, die geschickt und mit maximaler Effizienz durch die Außenwelt zu bewegen."
  },
  "home_fillwater": {
    "label": "Wasserwaffen füllen",
    "meta": [
      "must_be_inside",
      "must_have_valve"
    ],
    "result": [
      "fill_all_water_wp"
    ],
    "message": "<t-fail>Du hast <strong>keine Wasserwaffen zum Befüllen</strong> in deinem Rucksack oder deiner Truhe.</t-fail><nt-fail>Du hast {items_spawn} dank des Wasserhahns kostenlos auffüllen können.</nt-fail>"
  },
  "home_cinema": {
    "label": "Ins Kino gehen",
    "meta": [
      "must_be_inside",
      "must_have_cinema"
    ],
    "result": [
      "unterrorize"
    ],
    "message": "Ja, klar... Du hast ihn schon hunderte Male gesehen, das Thema ändert sich auch nicht allzu sehr, aber trotzdem: Es geht nichts über einen guten Zombie-Film zur Entspannung.<t-stat-down-terror><hr />Diese seltsam fernen Schreie des Schreckens haben dir den Kopf gerade gerückt: <strong>Du hast deine Angst abgeschüttelt</strong>.</t-stat-down-terror>"
  },
  "home_lab_1a": {
    "label": "Droge herstellen",
    "meta": [
      "must_be_inside",
      "must_have_home_lab_v1",
      "must_not_have_lab",
      "have_2_pharma",
      "lab_counter_below_1"
    ],
    "result": [
      "consume_2_pharma",
      "increase_lab_counter",
      {
        "group": [
          [
            "home_lab_success",
            25
          ],
          [
            "home_lab_failure",
            75
          ]
        ]
      }
    ],
    "message_key": "use_lab"
  },
  "home_lab_2a": {
    "label": "Droge herstellen",
    "meta": [
      "must_be_inside",
      "must_have_home_lab_v2",
      "must_not_have_lab",
      "have_2_pharma",
      "lab_counter_below_1"
    ],
    "result": [
      "consume_2_pharma",
      "increase_lab_counter",
      {
        "group": [
          [
            "home_lab_success",
            50
          ],
          [
            "home_lab_failure",
            50
          ]
        ]
      }
    ],
    "message_key": "use_lab"
  },
  "home_lab_3a": {
    "label": "Droge herstellen",
    "meta": [
      "must_be_inside",
      "must_have_home_lab_v3",
      "must_not_have_lab",
      "have_2_pharma",
      "lab_counter_below_1"
    ],
    "result": [
      "consume_2_pharma",
      "increase_lab_counter",
      {
        "group": [
          [
            "home_lab_success",
            75
          ],
          [
            "home_lab_failure",
            25
          ]
        ]
      }
    ],
    "message_key": "use_lab"
  },
  "home_lab_4a": {
    "label": "Droge herstellen",
    "meta": [
      "must_be_inside",
      "must_have_home_lab_v4",
      "must_not_have_lab",
      "have_2_pharma",
      "lab_counter_below_4"
    ],
    "result": [
      "consume_2_pharma",
      "increase_lab_counter",
      "home_lab_success"
    ],
    "message_key": "use_lab"
  },
  "home_lab_1b": {
    "label": "Droge herstellen",
    "meta": [
      "must_be_inside",
      "must_have_home_lab_v1",
      "must_have_lab",
      "have_2_pharma",
      "lab_counter_below_6"
    ],
    "result": [
      "consume_2_pharma",
      "increase_lab_counter",
      {
        "group": [
          [
            "home_lab_success",
            25
          ],
          [
            "home_lab_failure",
            75
          ]
        ]
      }
    ],
    "message_key": "use_lab"
  },
  "home_lab_2b": {
    "label": "Droge herstellen",
    "meta": [
      "must_be_inside",
      "must_have_home_lab_v2",
      "must_have_lab",
      "have_2_pharma",
      "lab_counter_below_6"
    ],
    "result": [
      "consume_2_pharma",
      "increase_lab_counter",
      {
        "group": [
          [
            "home_lab_success",
            50
          ],
          [
            "home_lab_failure",
            50
          ]
        ]
      }
    ],
    "message_key": "use_lab"
  },
  "home_lab_3b": {
    "label": "Droge herstellen",
    "meta": [
      "must_be_inside",
      "must_have_home_lab_v3",
      "must_have_lab",
      "have_2_pharma",
      "lab_counter_below_6"
    ],
    "result": [
      "consume_2_pharma",
      "increase_lab_counter",
      {
        "group": [
          [
            "home_lab_success",
            75
          ],
          [
            "home_lab_failure",
            25
          ]
        ]
      }
    ],
    "message_key": "use_lab"
  },
  "home_lab_4b": {
    "label": "Droge herstellen",
    "meta": [
      "must_be_inside",
      "must_have_home_lab_v4",
      "must_have_lab",
      "have_2_pharma",
      "lab_counter_below_9"
    ],
    "result": [
      "consume_2_pharma",
      "increase_lab_counter",
      "home_lab_success"
    ],
    "message_key": "use_lab"
  },
  "home_kitchen_1a": {
    "label": "Kochen",
    "target": {
      "property": "can_cook",
      "poison": false,
      "broken": false
    },
    "meta": [
      "must_be_inside",
      "must_have_home_kitchen_v1",
      "must_not_have_canteen",
      "kitchen_counter_below_1"
    ],
    "result": [
      "consume_target",
      "increase_kitchen_counter",
      {
        "group": [
          [
            "home_kitchen_success",
            33
          ],
          [
            "home_kitchen_failure",
            66
          ]
        ]
      }
    ],
    "message_key": "use_kitchen"
  },
  "home_kitchen_2a": {
    "label": "Kochen",
    "target": {
      "property": "can_cook",
      "poison": false,
      "broken": false
    },
    "meta": [
      "must_be_inside",
      "must_have_home_kitchen_v2",
      "must_not_have_canteen",
      "kitchen_counter_below_1"
    ],
    "result": [
      "consume_target",
      "increase_kitchen_counter",
      {
        "group": [
          [
            "home_kitchen_success",
            66
          ],
          [
            "home_kitchen_failure",
            33
          ]
        ]
      }
    ],
    "message_key": "use_kitchen"
  },
  "home_kitchen_3a": {
    "label": "Kochen",
    "target": {
      "property": "can_cook",
      "poison": false,
      "broken": false
    },
    "meta": [
      "must_be_inside",
      "must_have_home_kitchen_v3",
      "must_not_have_canteen",
      "kitchen_counter_below_2"
    ],
    "result": [
      "consume_target",
      "increase_kitchen_counter",
      "home_kitchen_success"
    ],
    "message_key": "use_kitchen"
  },
  "home_kitchen_4a": {
    "label": "Kochen",
    "target": {
      "property": "can_cook",
      "poison": false,
      "broken": false
    },
    "meta": [
      "must_be_inside",
      "must_have_home_kitchen_v4",
      "must_not_have_canteen",
      "kitchen_counter_below_3"
    ],
    "result": [
      "consume_target",
      "increase_kitchen_counter",
      "home_kitchen_success"
    ],
    "message_key": "use_kitchen"
  },
  "home_kitchen_1b": {
    "label": "Kochen",
    "target": {
      "property": "can_cook",
      "poison": false,
      "broken": false
    },
    "meta": [
      "must_be_inside",
      "must_have_home_kitchen_v1",
      "must_have_canteen",
      "kitchen_counter_below_4"
    ],
    "result": [
      "consume_target",
      "increase_kitchen_counter",
      {
        "group": [
          [
            "home_kitchen_success",
            33
          ],
          [
            "home_kitchen_failure",
            66
          ]
        ]
      }
    ],
    "message_key": "use_kitchen"
  },
  "home_kitchen_2b": {
    "label": "Kochen",
    "target": {
      "property": "can_cook",
      "poison": false,
      "broken": false
    },
    "meta": [
      "must_be_inside",
      "must_have_home_kitchen_v2",
      "must_have_canteen",
      "kitchen_counter_below_4"
    ],
    "result": [
      "consume_target",
      "increase_kitchen_counter",
      {
        "group": [
          [
            "home_kitchen_success",
            66
          ],
          [
            "home_kitchen_failure",
            33
          ]
        ]
      }
    ],
    "message_key": "use_kitchen"
  },
  "home_kitchen_3b": {
    "label": "Kochen",
    "target": {
      "property": "can_cook",
      "poison": false,
      "broken": false
    },
    "meta": [
      "must_be_inside",
      "must_have_home_kitchen_v3",
      "must_have_canteen",
      "kitchen_counter_below_5"
    ],
    "result": [
      "consume_target",
      "increase_kitchen_counter",
      "home_kitchen_success"
    ],
    "message_key": "use_kitchen"
  },
  "home_kitchen_4b": {
    "label": "Kochen",
    "target": {
      "property": "can_cook",
      "poison": false,
      "broken": false
    },
    "meta": [
      "must_be_inside",
      "must_have_home_kitchen_v4",
      "must_have_canteen",
      "kitchen_counter_below_6"
    ],
    "result": [
      "consume_target",
      "increase_kitchen_counter",
      "home_kitchen_success"
    ],
    "message_key": "use_kitchen"
  },
  "slaughter_4xs": {
    "label": "Ausweiden",
    "meta": [
      "must_be_inside",
      "must_have_slaughter"
    ],
    "result": [
      "consume_item",
      "picto_animal",
      "spawn_meat_4xs"
    ],
    "message_key": "use_butcher"
  },
  "slaughter_2xs": {
    "label": "Ausweiden",
    "meta": [
      "must_be_inside",
      "must_have_slaughter"
    ],
    "result": [
      "consume_item",
      "picto_animal",
      "spawn_meat_2xs"
    ],
    "message_key": "use_butcher"
  },
  "slaughter_4x": {
    "label": "Ausweiden",
    "meta": [
      "must_be_inside",
      "must_have_slaughter"
    ],
    "result": [
      "consume_item",
      "picto_animal",
      "spawn_meat_4x"
    ],
    "message_key": "use_butcher"
  },
  "slaughter_2x": {
    "label": "Ausweiden",
    "meta": [
      "must_be_inside",
      "must_have_slaughter"
    ],
    "result": [
      "consume_item",
      "picto_animal",
      "spawn_meat_2x"
    ],
    "message_key": "use_butcher"
  },
  "slaughter_bmb": {
    "label": "Ausweiden",
    "meta": [
      "must_be_inside",
      "must_have_slaughter"
    ],
    "result": [
      "consume_item",
      "picto_animal",
      "spawn_meat_bmb"
    ],
    "message_key": "use_butcher"
  },
  "purify_soul": {
    "label": "Läutern",
    "meta": [
      "must_be_inside",
      "must_have_hammam"
    ],
    "result": [
      "consume_item",
      "picto_soul_purify",
      "town_sdef_5",
      "building_shaman"
    ],
    "message": "Du hast die Seele gereinigt und sie friedlich gemacht."
  },
  "brew_shamanic_potion": {
    "label": "Herstellung eines Mystischern Trank",
    "poison": "ItemAction::PoisonHandlerTransgress",
    "tooltip": "Du kannst einen schamanischen Trank zubereiten, der den Rezipienten vor bösen Geistern schützt.",
    "meta": [
      "must_be_inside",
      "have_water_shaman",
      "min_1_pm",
      "role_shaman"
    ],
    "result": [
      "consume_water",
      "minus_1pm",
      "spawn_potion"
    ],
    "message": "Das ist ein Musterbeispiel eines schamanischen Tranks! Nun liegt es an die, der Stadt dessen Wirksamkeit zu vermitteln und sie von deinen schamanischen Fähigkeiten zu überzeugen."
  },
  "home_rest_1": {
    "label": "Nickerchen machen",
    "meta": [
      "must_be_inside",
      "must_have_home_rest_v1",
      "not_yet_rested",
      "no_full_ap_msg"
    ],
    "result": [
      "status_rested",
      {
        "group": [
          [
            "plus_2ap_7",
            33
          ],
          [
            "do_nothing",
            66
          ]
        ]
      }
    ],
    "message_key": "use_bed"
  },
  "home_rest_2": {
    "label": "Nickerchen machen",
    "meta": [
      "must_be_inside",
      "must_have_home_rest_v2",
      "not_yet_rested",
      "no_full_ap_msg"
    ],
    "result": [
      "status_rested",
      {
        "group": [
          [
            "plus_2ap_7",
            66
          ],
          [
            "do_nothing",
            33
          ]
        ]
      }
    ],
    "message_key": "use_bed"
  },
  "home_rest_3": {
    "label": "Nickerchen machen",
    "meta": [
      "must_be_inside",
      "must_have_home_rest_v3",
      "not_yet_rested",
      "no_full_ap_msg"
    ],
    "result": [
      "status_rested",
      {
        "group": [
          [
            "plus_2ap_7",
            100
          ],
          [
            "do_nothing",
            0
          ]
        ]
      }
    ],
    "message_key": "use_bed"
  },
  "home_pool": {
    "label": "Ein Bad nehmen",
    "meta": [
      "must_be_inside",
      "must_have_pool",
      "not_yet_home_pooled"
    ],
    "result": [
      "status_home_pool"
    ],
    "message": "Du springst ohne zu zögern in dieses große Bad. Das Chaos um dich herum existiert für dich nicht mehr und du spürst, dass du diese Nacht mit Gelassenheit verbringen wirst."
  },
  "home_scavenge_any": {
    "label": "In den Buddelgruben graben",
    "meta": [
      "must_be_inside",
      "room_for_item_scavenging",
      "min_2_ap",
      "not_profession_collec",
      "must_have_scavenger_building",
      "scav_building_counter_below_1"
    ],
    "result": [
      "minus_2ap",
      "status_count_scavenger",
      "building_scavenger"
    ]
  },
  "home_scavenge_pro": {
    "label": "In den Buddelgruben graben",
    "meta": [
      "must_be_inside",
      "room_for_item_scavenging",
      "min_1_ap",
      "profession_collec",
      "must_have_scavenger_building",
      "scav_building_counter_below_3"
    ],
    "result": [
      "minus_1ap",
      "status_count_scavenger",
      "building_scavenger"
    ]
  },
  "home_survivalist_any": {
    "label": "Wasser finden",
    "meta": [
      "must_be_inside",
      "min_3_ap",
      "not_profession_survivalist",
      "must_have_surv_building",
      "surv_building_counter_below_1"
    ],
    "result": [
      "minus_3ap",
      "status_count_surv",
      "building_survivalist_a"
    ],
    "message": "Du konntest es zunächst gar nicht geglaubt, aber nachdem du die halbierten Dosen überprüft hast, stellst du fest, dass sich etwas Wasser darin befindet. Wie sich herausstellt, kennen sich diese Einsiedler doch aus! Du erhälst {items_spawn}."
  },
  "home_survivalist_pro": {
    "label": "Wasser finden",
    "meta": [
      "must_be_inside",
      "min_3_ap",
      "profession_survivalist",
      "must_have_surv_building",
      "surv_building_counter_below_1"
    ],
    "result": [
      "minus_3ap",
      "status_count_surv",
      "building_survivalist_b",
      "building_survivalist_c"
    ],
    "message": "Einige Leute haben dein Wassergewinnung-System bösartig verleumdet, aber es ist offensichtlich, dass sie jetzt schweigen. Du erhälst {items_spawn}."
  },
  "home_defbuff_any": {
    "label": "Verteidigung organisieren",
    "meta": [
      "not_profession_guardian",
      "min_2_ap",
      "must_be_inside",
      "must_have_guardtower",
      "not_yet_home_defbuff",
      "guard_tower_not_max"
    ],
    "result": [
      "minus_2ap",
      "status_home_defbuff",
      "building_guard"
    ],
    "message": "Du suchst die Stadtmauer nach kleinen Lücken ab, die die Wächter hinterlassen haben könnten. Die Stadt hat vorübergehend +5 Verteidigungspunkte gewonnen."
  },
  "open_drugkit": {
    "label": "Öffnen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands"
    ],
    "result": [
      "consume_item",
      "spawn_drugkit"
    ],
    "message_key": "container_open"
  },
  "install_garland": {
    "label": "Aufhängen",
    "meta": [
      "not_tired",
      "is_not_wounded_hands",
      "must_be_inside",
      "during_christmas",
      "room_for_item_in_chest"
    ],
    "result": [
      "consume_item",
      "spawn_xmas_gift_1",
      "status_count_ap_loan"
    ],
    "message": "Es war ganz schön anstrengend, aber nach einigem lauten Fluchen hängt die Girlande. Irgendwie hast du aber das Gefühl, dass du dich gerde überanstrengt hast..."
  },
  "uninstall_garland": {
    "label": "Abhängen",
    "meta": [
      "not_tired",
      "is_not_wounded_hands",
      "must_be_inside"
    ],
    "result": [
      "morph_xmas_gift"
    ],
    "message": "Mit einem beherzten Griff hast du die Girlande aus ihrer Verankerung gerissen."
  },
  "equip_shoe_first": {
    "label": "Anlegen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands",
      "not_yet_shoe_today",
      "not_yet_shoe_now",
      "is_not_wounded_foot",
      "is_not_wounded_leg"
    ],
    "result": [
      "equip_item",
      "status_tag_shoe_now",
      "status_tag_shoe_today",
      "status_tag_shoe_first",
      "plus_1sp_e"
    ],
    "message": "Du ziehst deine neuen Schuhe an und ziehst die Schnürsenkel SEHR fest! Sie passen perfekt, du würdest sie für nichts auf der Welt wieder ausziehen!"
  },
  "unequip_shoe_first": {
    "label": "Ablegen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands",
      "shoe_now",
      "shoe_first"
    ],
    "result": [
      "unequip_item",
      "status_tag_no_shoe_now",
      "status_tag_no_shoe_first",
      "status_tag_shoe_today",
      "minus_1sp"
    ],
    "message": "Mit ein wenig Trennungsschmerz im Herzen hast du deine Schuhe abgelegt."
  },
  "equip_bike_first": {
    "label": "Aufsteigen",
    "at00": true,
    "meta": [
      "is_not_wounded_hands",
      "not_yet_bike_today",
      "not_yet_bike_now",
      "is_not_wounded_foot",
      "is_not_wounded_leg",
      "room_for_heavy_item"
    ],
    "result": [
      "equip_item",
      "status_tag_bike_now",
      "status_tag_bike_today",
      "status_tag_bike_first",
      "plus_2sp_e"
    ],
    "message": "Du steigst auf dein Fahrrad und bereitest dich mental darauf vor, in Windeseile durch die Außenwelt zu fegen."
  },
  "unequip_bike_first": {
    "label": "Absteigen",
    "at00": true,
    "meta": [
      "bike_now"
    ],
    "result": [
      "unequip_item",
      "status_tag_no_bike_now",
      "status_tag_no_bike_first",
      "status_tag_bike_today",
      "minus_2sp"
    ],
    "message": "Mit ein wenig Trennungsschmerz im Herzen steigst du von deinem Fahrrad ab."
  },
  "eat_apple": {
    "label": "Essen",
    "priority": 1,
    "cover": true,
    "at00": true,
    "poison": "ItemAction::PoisonHandlerConsume",
    "meta": [
      "eat_ap",
      "no_full_ap_msg_food"
    ],
    "result": [
      "contaminated_zone_infect",
      "eat_ap8",
      "consume_item",
      {
        "group": [
          [
            "infect",
            15
          ],
          [
            "do_nothing",
            85
          ]
        ]
      }
    ],
    "escort_message_key": "escort_food_eat"
  },
  "nw_break": {
    "label": "",
    "meta": [],
    "result": [
      "break_item"
    ]
  },
  "nw_destroy": {
    "label": "",
    "meta": [],
    "result": [
      "consume_item"
    ]
  },
  "nw_empty_big_pgun": {
    "label": "",
    "meta": [],
    "result": [
      "morph_big_pgun_empty"
    ]
  },
  "nw_empty_pilegun_up": {
    "label": "",
    "meta": [],
    "result": [
      "morph_pilegun_up_empty"
    ]
  },
  "nw_empty_pilegun": {
    "label": "",
    "meta": [],
    "result": [
      "morph_pilegun_empty"
    ]
  },
  "nw_empty_taser": {
    "label": "",
    "meta": [],
    "result": [
      "morph_taser_empty"
    ]
  },
  "nw_empty_mixergun": {
    "label": "",
    "meta": [],
    "result": [
      "morph_mixergun_empty"
    ]
  },
  "nw_empty_chainsaw": {
    "label": "",
    "meta": [],
    "result": [
      "morph_chainsaw_empty"
    ]
  },
  "nw_empty_phone": {
    "label": "",
    "meta": [],
    "result": [
      "consume_item",
      "spawn_phone_nw"
    ]
  },
  "nw_empty_watergun": {
    "label": "",
    "meta": [],
    "result": [
      "morph_watergun_empty"
    ]
  },
  "nw_empty_watergun_opt": {
    "label": "",
    "meta": [],
    "result": [
      "morph_watergun_opt_empty"
    ]
  },
  "nw_empty_torch": {
    "label": "",
    "meta": [],
    "result": [
      "morph_torch_off"
    ]
  },
  "nw_empty_staff": {
    "label": "",
    "meta": [],
    "result": [
      "morph_staff2"
    ]
  },
  "nw_empty_dildo": {
    "label": "",
    "meta": [],
    "result": [
      "morph_vibr_empty"
    ]
  },
  "nw_empty_watercan": {
    "label": "",
    "meta": [],
    "result": [
      "produce_watercan0"
    ]
  },
  "nw_empty_kalach": {
    "label": "",
    "meta": [],
    "result": [
      "morph_kalach_empty"
    ]
  },
  "nw_meat": {
    "label": "",
    "meta": [],
    "result": [
      "picto_animal",
      "morph_undef"
    ]
  },
  "nw_meat_tasty": {
    "label": "",
    "meta": [],
    "result": [
      "picto_animal",
      "morph_meat"
    ]
  },
  "nw_empty_proj": {
    "label": "",
    "meta": [],
    "result": [
      "morph_lens"
    ]
  },
  "nw_empty_lpoint": {
    "label": "",
    "meta": [],
    "result": [
      "morph_lpoint"
    ]
  },
  "nw_empty_jerrygun": {
    "label": "",
    "meta": [],
    "result": [
      "empty_jerrygun"
    ]
  },
  "nw_empty_lamp": {
    "label": "",
    "meta": [],
    "result": [
      "morph_lamp"
    ]
  },
  "nw_empty_bone": {
    "label": "",
    "meta": [],
    "result": [
      "morph_bone"
    ]
  },
  "nw_empty_music": {
    "label": "",
    "meta": [],
    "result": [
      "morph_music_part"
    ]
  },
  "nw_empty_sport": {
    "label": "",
    "meta": [],
    "result": [
      "morph_elec_empty"
    ]
  },
  "nw_empty_radio": {
    "label": "",
    "meta": [],
    "result": [
      "morph_radio_off"
    ]
  }
}