{
    "water_tl0": {
      "label": "Trinken",
      "priority": 1,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "no_full_ap",
        "drink_cross",
        "drink_tl0a",
        "drink_tl0b"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_ap_1",
        "consume_item"
      ],
      "escort_message_key": "escort_water_drink"
    },
    "water_tl1a": {
      "label": "Trinken",
      "priority": 1,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "drink_hide",
        "drink_tl1"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_ap_1",
        "drink_ap_2",
        "consume_item"
      ],
      "escort_message_key": "escort_water_drink"
    },
    "water_tl1b": {
      "label": "Trinken",
      "priority": 1,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "drink_rhide",
        "drink_tl1"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_ap_2",
        "consume_item"
      ],
      "escort_message_key": "escort_water_drink"
    },
    "water_tl2": {
      "label": "Trinken",
      "priority": 1,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "drink_tl2"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_no_ap",
        "consume_item"
      ],
      "escort_message_key": "escort_water_drink_dehydration",
      "message_key": "water_drink_dehydration"
    },
    "water_g": {
      "label": "Trinken",
      "priority": 1,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "role_ghoul",
        "is_not_wounded",
        "drink_cross"
      ],
      "result": [
        "inflict_wound",
        "consume_item"
      ],
      "message_key": "water_drink_ghoul"
    },
    "potion_tl0a": {
      "label": "Trinken",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "not_yet_immune",
        "drink_hide",
        "drink_tl0a",
        "drink_tl0b"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_ap_1",
        "consume_item",
        {
          "group": "g_immune_90"
        }
      ],
      "message": "Du hast soeben den mystischen Trank getrunken. Hoffen wir, dass dieser Schamane weiß, was er tut...",
      "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
    },
    "potion_tl0b": {
      "label": "Trinken",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "not_yet_immune",
        "drink_rhide",
        "drink_tl0a",
        "drink_tl0b"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "consume_item",
        {
          "group": "g_immune_90"
        }
      ],
      "message": "Du hast soeben den mystischen Trank getrunken. Hoffen wir, dass dieser Schamane weiß, was er tut...",
      "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
    },
    "potion_tl1a": {
      "label": "Trinken",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "not_yet_immune",
        "drink_hide",
        "drink_tl1"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_ap_1",
        "drink_ap_2",
        "consume_item",
        {
          "group": "g_immune_90"
        }
      ],
      "message": "Du hast soeben den mystischen Trank getrunken. Hoffen wir, dass dieser Schamane weiß, was er tut...",
      "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
    },
    "potion_tl1b": {
      "label": "Trinken",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "not_yet_immune",
        "drink_rhide",
        "drink_tl1"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_ap_2",
        "consume_item",
        {
          "group": "g_immune_90"
        }
      ],
      "message": "Du hast soeben den mystischen Trank getrunken. Hoffen wir, dass dieser Schamane weiß, was er tut...",
      "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
    },
    "potion_tl2": {
      "label": "Trinken",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "not_yet_immune",
        "drink_tl2"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_no_ap",
        "consume_item",
        {
          "group": "g_immune_90"
        }
      ],
      "message": "Du hast soeben den mystischen Trank getrunken. Hoffen wir, dass dieser Schamane weiß, was er tut...",
      "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
    },
    "potion_g": {
      "label": "Trinken",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "role_ghoul",
        "not_yet_immune",
        "drink_cross"
      ],
      "result": [
        "inflict_wound",
        "consume_item",
        {
          "group": "g_immune_90"
        }
      ],
      "message": "Du hast soeben den mystischen Trank getrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
    },
    "potion_tl0a_immune": {
      "label": "Trinken",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "immune",
        "drink_hide",
        "drink_tl0a",
        "drink_tl0b"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_ap_1",
        "consume_item",
        {
          "group": "g_immune_90"
        }
      ],
      "message": "Tja, Vertrauen ist gut, Kontrolle ist besser... Ja, du wurdest bereits geschützt!",
      "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
    },
    "potion_tl0b_immune": {
      "label": "Trinken",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "immune",
        "drink_rhide",
        "drink_tl0a",
        "drink_tl0b"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "consume_item",
        {
          "group": "g_immune_90"
        }
      ],
      "message": "Tja, Vertrauen ist gut, Kontrolle ist besser... Ja, du wurdest bereits geschützt!",
      "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
    },
    "potion_tl1a_immune": {
      "label": "Trinken",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "immune",
        "drink_hide",
        "drink_tl1"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_ap_1",
        "drink_ap_2",
        "consume_item",
        {
          "group": "g_immune_90"
        }
      ],
      "message": "Tja, Vertrauen ist gut, Kontrolle ist besser... Ja, du wurdest bereits geschützt!",
      "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
    },
    "potion_tl1b_immune": {
      "label": "Trinken",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "immune",
        "drink_rhide",
        "drink_tl1"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_ap_2",
        "consume_item",
        {
          "group": "g_immune_90"
        }
      ],
      "message": "Tja, Vertrauen ist gut, Kontrolle ist besser... Ja, du wurdest bereits geschützt!",
      "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
    },
    "potion_tl2_immune": {
      "label": "Trinken",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "immune",
        "drink_tl2"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_no_ap",
        "consume_item",
        {
          "group": "g_immune_90"
        }
      ],
      "message": "Tja, Vertrauen ist gut, Kontrolle ist besser... Ja, du wurdest bereits geschützt!",
      "escort_message": "Der Bürger hat den mystischen Trank in einem Zug ausgetrunken. Hoffen wir, dass dieser Schamane weiß, was er tut..."
    },
    "potion_g_immune": {
      "label": "Trinken",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "role_ghoul",
        "immune",
        "drink_cross"
      ],
      "result": [
        "inflict_wound",
        "consume_item",
        {
          "group": "g_immune_90"
        }
      ],
      "message": "Tja, Vertrauen ist gut, Kontrolle ist besser... Ja, du wurdest bereits geschützt!"
    },
    "watercan3_tl0": {
      "label": "Trinken",
      "priority": 4,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "no_full_ap",
        "drink_cross",
        "drink_tl0a",
        "drink_tl0b"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_ap_1",
        "produce_watercan2"
      ],
      "escort_message_key": "escort_water_drink"
    },
    "watercan3_tl1a": {
      "label": "Trinken",
      "priority": 4,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "drink_hide",
        "drink_tl1"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_ap_1",
        "drink_ap_2",
        "produce_watercan2"
      ],
      "escort_message_key": "escort_water_drink"
    },
    "watercan3_tl1b": {
      "label": "Trinken",
      "priority": 4,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "drink_rhide",
        "drink_tl1"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_ap_2",
        "produce_watercan2"
      ],
      "escort_message_key": "escort_water_drink"
    },
    "watercan3_tl2": {
      "label": "Trinken",
      "priority": 4,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "drink_tl2"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_no_ap",
        "produce_watercan2"
      ],
      "escort_message_key": "escort_water_drink_dehydration",
      "message_key": "water_drink_dehydration"
    },
    "watercan3_g": {
      "label": "Trinken",
      "priority": 4,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "role_ghoul",
        "is_not_wounded",
        "drink_cross"
      ],
      "result": [
        "inflict_wound",
        "produce_watercan2"
      ],
      "message_key": "water_drink_ghoul"
    },
    "watercan2_tl0": {
      "label": "Trinken",
      "priority": 3,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "no_full_ap",
        "drink_cross",
        "drink_tl0a",
        "drink_tl0b"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_ap_1",
        "produce_watercan1"
      ],
      "escort_message_key": "escort_water_drink"
    },
    "watercan2_tl1a": {
      "label": "Trinken",
      "priority": 3,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "drink_hide",
        "drink_tl1"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_ap_1",
        "drink_ap_2",
        "produce_watercan1"
      ],
      "escort_message_key": "escort_water_drink"
    },
    "watercan2_tl1b": {
      "label": "Trinken",
      "priority": 3,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "drink_rhide",
        "drink_tl1"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_ap_2",
        "produce_watercan1"
      ],
      "escort_message_key": "escort_water_drink"
    },
    "watercan2_tl2": {
      "label": "Trinken",
      "priority": 3,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "drink_tl2"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_no_ap",
        "produce_watercan1"
      ],
      "escort_message_key": "escort_water_drink_dehydration",
      "message_key": "water_drink_dehydration"
    },
    "watercan2_g": {
      "label": "Trinken",
      "priority": 3,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "role_ghoul",
        "is_not_wounded",
        "drink_cross"
      ],
      "result": [
        "inflict_wound",
        "produce_watercan1"
      ],
      "message_key": "water_drink_ghoul"
    },
    "watercan1_tl0": {
      "label": "Trinken",
      "priority": 2,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "no_full_ap",
        "drink_cross",
        "drink_tl0a",
        "drink_tl0b"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_ap_1",
        "produce_watercan0"
      ],
      "escort_message_key": "escort_water_drink"
    },
    "watercan1_tl1a": {
      "label": "Trinken",
      "priority": 2,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "drink_hide",
        "drink_tl1"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_ap_1",
        "drink_ap_2",
        "produce_watercan0"
      ],
      "escort_message_key": "escort_water_drink"
    },
    "watercan1_tl1b": {
      "label": "Trinken",
      "priority": 2,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "drink_rhide",
        "drink_tl1"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_ap_2",
        "produce_watercan0"
      ],
      "escort_message_key": "escort_water_drink"
    },
    "watercan1_tl2": {
      "label": "Trinken",
      "priority": 2,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_role_ghoul",
        "drink_tl2"
      ],
      "result": [
        "contaminated_zone_infect",
        "reset_thirst_counter",
        "drink_no_ap",
        "produce_watercan0"
      ],
      "escort_message_key": "escort_water_drink_dehydration",
      "message_key": "water_drink_dehydration"
    },
    "watercan1_g": {
      "label": "Trinken",
      "priority": 2,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "role_ghoul",
        "is_not_wounded",
        "drink_cross"
      ],
      "result": [
        "inflict_wound",
        "produce_watercan0"
      ],
      "message_key": "water_drink_ghoul"
    },
    "water_no_effect": {
      "label": "Trinken",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [],
      "result": [
        "contaminated_zone_infect",
        "consume_item"
      ],
      "message": "Du hast {item} getrunken, aber scheinbar geschieht nichts..."
    },
    "alcohol": {
      "label": "Trinken",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_drunk",
        "not_hungover"
      ],
      "result": [
        "contaminated_zone_infect",
        "just_ap6",
        "drunk",
        "consume_item"
      ],
      "message": "Dir ist schwindelig und du würdest dich am liebsten übergeben... Egal was, Hauptsache <strong>du bekommst wieder einen klaren Kopf</strong>."
    },
    "alcohol_dx": {
      "label": "Trinken",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [],
      "result": [
        "contaminated_zone_infect",
        "just_ap6",
        "drunk",
        "consume_item"
      ],
      "message": "Dir ist schwindelig und du würdest dich am liebsten übergeben... Egal was, Hauptsache <strong>du bekommst wieder einen klaren Kopf</strong>."
    },
    "coffee": {
      "label": "Trinken",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [],
      "result": [
        "contaminated_zone_infect",
        "plus_4ap",
        "consume_item"
      ],
      "message": "Dieses Gefühl des Wohlbefindens, das dieser kleine Kaffee hervorruft, bringt dich sofort wieder auf die Beine. Aah!"
    },
    "special_dice": {
      "label": "Werfen",
      "at00": true,
      "meta": [
        "not_yet_dice",
        "no_bonus_ap"
      ],
      "result": [
        "casino_dice"
      ],
      "message": "{casino}"
    },
    "special_card": {
      "label": "Karte ziehen",
      "at00": true,
      "meta": [
        "not_yet_card",
        "no_bonus_ap"
      ],
      "result": [
        "casino_card"
      ],
      "message": "{casino}"
    },
    "special_guitar": {
      "label": "Spielen",
      "meta": [
        "not_yet_guitar",
        "must_be_inside"
      ],
      "result": [
        "casino_guitar"
      ],
      "message": "{casino}"
    },
    "can": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "not_profession_tech",
        "have_can_opener",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "item": {
            "consume": false,
            "morph": "can_open_#00"
          }
        }
      ],
      "message_key": "container_open_tool"
    },
    "can_t1": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "profession_tech",
        "have_can_opener_hd",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "item": {
            "consume": false,
            "morph": "can_open_#00"
          }
        }
      ],
      "message_key": "container_open_tool"
    },
    "can_t2": {
      "label": "Öffnen (1 BP)",
      "at00": true,
      "meta": [
        "profession_tech",
        "not_have_can_opener_hd",
        "min_1_cp"
      ],
      "result": [
        "minus_1cp",
        {
          "item": {
            "consume": false,
            "morph": "can_open_#00"
          }
        }
      ],
      "message_key": "container_open"
    },
    "eat_6ap": {
      "label": "Essen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "eat_ap",
        "no_full_ap"
      ],
      "result": [
        "contaminated_zone_infect",
        "eat_ap6",
        "consume_item"
      ],
      "escort_message_key": "escort_food_eat"
    },
    "eat_7ap": {
      "label": "Essen",
      "priority": 1,
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "eat_ap",
        "no_full_ap"
      ],
      "result": [
        "contaminated_zone_infect",
        "eat_ap7",
        "consume_item"
      ],
      "escort_message_key": "escort_food_eat"
    },
    "drug_xana1": {
      "label": "Einsetzen",
      "cover": true,
      "at00": true,
      "allow_when_terrorized": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_1",
        "must_be_terrorized_hd"
      ],
      "result": [
        "contaminated_zone_infect",
        "drug_any",
        "unterrorize",
        "consume_item"
      ],
      "message_key": "drug_xanax"
    },
    "drug_xana2": {
      "label": "Einsetzen",
      "cover": true,
      "at00": true,
      "allow_when_terrorized": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_2",
        "must_be_terrorized_hd"
      ],
      "result": [
        "contaminated_zone_infect",
        "drug_addict",
        "unterrorize",
        "consume_item"
      ],
      "message_key": "drug_xanax"
    },
    "drug_xana3": {
      "label": "Einsetzen",
      "cover": true,
      "at00": true,
      "allow_when_terrorized": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_1",
        "must_not_be_terrorized"
      ],
      "result": [
        "contaminated_zone_infect",
        "drug_any",
        "consume_item"
      ],
      "message_key": "drug_no_use"
    },
    "drug_xana4": {
      "label": "Einsetzen",
      "cover": true,
      "at00": true,
      "allow_when_terrorized": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_2",
        "must_not_be_terrorized"
      ],
      "result": [
        "contaminated_zone_infect",
        "drug_addict",
        "consume_item"
      ],
      "message_key": "drug_no_use"
    },
    "drug_par_1": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_1",
        "is_not_infected_h"
      ],
      "result": [
        {
          "message": {
            "text": "Die Medizin gibt dir Kraft: Du bist jetzt immun gegen Infektionen und kannst nicht in einen Ghul verwandelt werden. Diese Wirkung lässt nach dem Angriff nach."
          }
        },
        "contaminated_zone_infect",
        "drug_any",
        "immune",
        "consume_item"
      ],
      "message_key": "drug_no_use_2"
    },
    "drug_par_2": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_2",
        "is_not_infected_h"
      ],
      "result": [
        {
          "message": {
            "text": "Die Medizin gibt dir Kraft: Du bist jetzt immun gegen Infektionen und kannst nicht in einen Ghul verwandelt werden. Diese Wirkung lässt nach dem Angriff nach."
          }
        },
        "contaminated_zone_infect",
        "drug_addict",
        "immune",
        "consume_item"
      ],
      "message_key": "drug_no_use_2"
    },
    "drug_par_3": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_1",
        "is_infected_h"
      ],
      "result": [
        {
          "message": {
            "text": "Die Medizin gibt dir Kraft: Du bist jetzt immun gegen Infektionen und kannst nicht in einen Ghul verwandelt werden. Diese Wirkung lässt nach dem Angriff nach."
          }
        },
        "contaminated_zone_infect",
        "drug_any",
        "disinfect",
        "immune",
        "consume_item"
      ],
      "message_key": "drug_para"
    },
    "drug_par_4": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_2",
        "is_infected_h"
      ],
      "result": [
        {
          "message": {
            "text": "Die Medizin gibt dir Kraft: Du bist jetzt immun gegen Infektionen und kannst nicht in einen Ghul verwandelt werden. Diese Wirkung lässt nach dem Angriff nach."
          }
        },
        "contaminated_zone_infect",
        "drug_addict",
        "disinfect",
        "immune",
        "consume_item"
      ],
      "message_key": "drug_para"
    },
    "drug_6ap_1": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_1"
      ],
      "result": [
        "contaminated_zone_infect",
        "drug_any",
        "just_ap6",
        "consume_item"
      ],
      "message_key": "drug_normal_ap"
    },
    "drug_6ap_2": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_2"
      ],
      "result": [
        "contaminated_zone_infect",
        "drug_addict",
        "just_ap6",
        "consume_item"
      ],
      "message_key": "drug_normal_ap"
    },
    "drug_7ap_1": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_1"
      ],
      "result": [
        "contaminated_zone_infect",
        "drug_any",
        "just_ap7",
        "consume_item"
      ]
    },
    "drug_7ap_2": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_2"
      ],
      "result": [
        "contaminated_zone_infect",
        "drug_addict",
        "just_ap7",
        "consume_item"
      ]
    },
    "drug_8ap_1": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_1"
      ],
      "result": [
        "contaminated_zone_infect",
        "drug_any",
        "just_ap8",
        "consume_item"
      ],
      "message_key": "drug_twin_ap"
    },
    "drug_8ap_2": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_2"
      ],
      "result": [
        "contaminated_zone_infect",
        "drug_addict",
        "just_ap8",
        "consume_item"
      ],
      "message_key": "drug_twin_ap"
    },
    "drug_april_1": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_1",
        "must_be_aprils_fools"
      ],
      "result": [
        "contaminated_zone_infect",
        "drug_any",
        "just_ap8",
        "april",
        "consume_item"
      ],
      "message_key": "drug_no_use_3"
    },
    "drug_april_2": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_2",
        "must_be_aprils_fools"
      ],
      "result": [
        "contaminated_zone_infect",
        "drug_addict",
        "just_ap8",
        "april",
        "consume_item"
      ],
      "message_key": "drug_no_use_3"
    },
    "drug_hyd_1": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_1",
        "drink_tl0a",
        "drink_tl0b"
      ],
      "result": [
        "contaminated_zone_infect",
        "drug_any",
        "consume_item"
      ],
      "message_key": "drug_no_use"
    },
    "drug_hyd_2": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_2",
        "drink_tl0a",
        "drink_tl0b"
      ],
      "result": [
        "contaminated_zone_infect",
        "drug_addict",
        "consume_item"
      ],
      "message_key": "drug_no_use"
    },
    "drug_hyd_3": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_1",
        "drink_tl1"
      ],
      "result": [
        "contaminated_zone_infect",
        "drug_any",
        "drink_ap_2",
        "consume_item"
      ],
      "message_key": "drug_hyd"
    },
    "drug_hyd_4": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_2",
        "drink_tl1"
      ],
      "result": [
        "contaminated_zone_infect",
        "drug_addict",
        "drink_ap_2",
        "consume_item"
      ],
      "message_key": "drug_hyd"
    },
    "drug_hyd_5": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_1",
        "drink_tl2"
      ],
      "result": [
        "contaminated_zone_infect",
        "drug_any",
        "drink_no_ap",
        "consume_item"
      ],
      "message_key": "drug_hyd"
    },
    "drug_hyd_6": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_2",
        "drink_tl2"
      ],
      "result": [
        "contaminated_zone_infect",
        "drug_addict",
        "drink_no_ap",
        "consume_item"
      ],
      "message_key": "drug_hyd"
    },
    "drug_beta": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_yet_beta"
      ],
      "result": [
        {
          "ap": {
            "max": true,
            "num": 20
          },
          "status": {
            "from": null,
            "to": "tg_betadrug"
          }
        }
      ]
    },
    "cyanide": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "not_before_day_2"
      ],
      "result": [
        "contaminated_zone_infect",
        "cyanide",
        "consume_item"
      ]
    },
    "bandage": {
      "label": "Verbinden",
      "at00": true,
      "meta": [
        "is_wounded",
        "is_not_bandaged"
      ],
      "result": [
        "heal_wound",
        "consume_item",
        "add_bandage"
      ],
      "message": "So, zur Desinfektion nur noch draufspucken und hopp: Sieht wie neu aus!"
    },
    "emt": {
      "label": "Einsetzen",
      "at00": true,
      "meta": [
        "is_not_wounded"
      ],
      "result": [
        "just_ap6",
        "inflict_wound",
        {
          "item": {
            "consume": false,
            "morph": "sport_elec_empty_#00"
          }
        },
        {
          "picto": [
            "r_maso_#00"
          ]
        }
      ],
      "message": "Es geht doch nichts über einen schönen Stromstoß in die Wirbelsäule, um so richtig wach zu werden! Aber irgendwie riecht es jetzt hier nach verbranntem Fleisch..."
    },
    "drug_rand_1": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_1"
      ],
      "result": [
        "contaminated_zone_infect",
        "consume_item",
        {
          "picto": [
            "r_cobaye_#00"
          ]
        },
        {
          "group": [
            [
              [
                "drug_any",
                "just_ap6",
                {
                  "message": {
                    "text_key": "drug_normal_ap"
                  }
                }
              ],
              40
            ],
            [
              [
                "drug_any",
                "terrorize",
                {
                  "message": {
                    "text_key": "drug_terror"
                  }
                }
              ],
              20
            ],
            [
              [
                "drug_any",
                "drug_addict",
                "just_ap7",
                {
                  "message": {
                    "text_key": "drug_addict_ap"
                  }
                }
              ],
              20
            ],
            [
              [
                "do_nothing",
                {
                  "message": {
                    "text_key": "drug_no_effect"
                  }
                }
              ],
              20
            ]
          ]
        }
      ]
    },
    "drug_rand_2": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_2"
      ],
      "result": [
        "contaminated_zone_infect",
        "consume_item",
        {
          "picto": [
            "r_cobaye_#00"
          ]
        },
        {
          "group": [
            [
              [
                "drug_addict",
                "just_ap6",
                {
                  "message": {
                    "text_key": "drug_normal_ap"
                  }
                }
              ],
              40
            ],
            [
              [
                "drug_addict",
                "terrorize",
                {
                  "message": {
                    "text_key": "drug_terror"
                  }
                }
              ],
              20
            ],
            [
              [
                "drug_addict",
                "just_ap7",
                {
                  "message": {
                    "text_key": "drug_addict_ap"
                  }
                }
              ],
              20
            ],
            [
              [
                "do_nothing",
                {
                  "message": {
                    "text_key": "drug_no_effect"
                  }
                }
              ],
              20
            ]
          ]
        }
      ]
    },
    "drug_lsd_1": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_1"
      ],
      "result": [
        "contaminated_zone_infect",
        "consume_item",
        {
          "picto": [
            "r_cobaye_#00"
          ]
        },
        {
          "group": [
            [
              [
                "drug_any",
                "just_ap6",
                {
                  "message": {
                    "text_key": "drug_normal_ap"
                  }
                }
              ],
              1
            ],
            [
              [
                "drug_any",
                "terrorize",
                {
                  "message": {
                    "text_key": "drug_terror"
                  }
                }
              ],
              1
            ],
            [
              [
                "drug_any",
                "drug_addict",
                "just_ap7",
                {
                  "message": {
                    "text_key": "drug_addict_ap"
                  }
                }
              ],
              3
            ],
            [
              [
                "do_nothing",
                {
                  "message": {
                    "text_key": "drug_no_effect"
                  }
                }
              ],
              2
            ]
          ]
        }
      ]
    },
    "drug_lsd_2": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_2"
      ],
      "result": [
        "contaminated_zone_infect",
        "consume_item",
        {
          "picto": [
            "r_cobaye_#00"
          ]
        },
        {
          "group": [
            [
              [
                "drug_addict",
                "just_ap6",
                {
                  "message": {
                    "text_key": "drug_normal_ap"
                  }
                }
              ],
              1
            ],
            [
              [
                "drug_addict",
                "terrorize",
                {
                  "message": {
                    "text_key": "drug_terror"
                  }
                }
              ],
              1
            ],
            [
              [
                "drug_addict",
                "just_ap7",
                {
                  "message": {
                    "text_key": "drug_addict_ap"
                  }
                }
              ],
              3
            ],
            [
              [
                "do_nothing",
                {
                  "message": {
                    "text_key": "drug_no_effect"
                  }
                }
              ],
              2
            ]
          ]
        }
      ]
    },
    "drug_beta_bad_1": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_1"
      ],
      "result": [
        "contaminated_zone_infect",
        "consume_item",
        {
          "picto": [
            "r_cobaye_#00"
          ]
        },
        {
          "group": [
            [
              [
                "drug_any",
                "just_ap6",
                {
                  "message": {
                    "text_key": "drug_normal_ap"
                  }
                }
              ],
              11
            ],
            [
              [
                "drug_any",
                "terrorize",
                {
                  "message": {
                    "text_key": "drug_terror"
                  }
                }
              ],
              6
            ],
            [
              [
                "drug_any",
                "drug_addict",
                "just_ap7",
                {
                  "message": {
                    "text_key": "drug_addict_ap"
                  }
                }
              ],
              5
            ],
            [
              [
                "do_nothing",
                {
                  "message": {
                    "text_key": "drug_no_effect"
                  }
                }
              ],
              4
            ]
          ]
        }
      ]
    },
    "drug_beta_bad_2": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "drug_2"
      ],
      "result": [
        "contaminated_zone_infect",
        "consume_item",
        {
          "picto": [
            "r_cobaye_#00"
          ]
        },
        {
          "group": [
            [
              [
                "drug_addict",
                "just_ap6",
                {
                  "message": {
                    "text_key": "drug_normal_ap"
                  }
                }
              ],
              11
            ],
            [
              [
                "drug_addict",
                "terrorize",
                {
                  "message": {
                    "text_key": "drug_terror"
                  }
                }
              ],
              6
            ],
            [
              [
                "drug_addict",
                "just_ap7",
                {
                  "message": {
                    "text_key": "drug_addict_ap"
                  }
                }
              ],
              5
            ],
            [
              [
                "do_nothing",
                {
                  "message": {
                    "text_key": "drug_no_effect"
                  }
                }
              ],
              4
            ]
          ]
        }
      ]
    },
    "drug_rand_xmas": {
      "label": "Essen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "eat_ap"
      ],
      "result": [
        "contaminated_zone_infect",
        "consume_item",
        {
          "picto": [
            "r_cobaye_#00"
          ]
        },
        {
          "group": [
            [
              [
                "plus_ap8_30",
                {
                  "message": {
                    "text": "Du schluckst das Bonbon mit einem Lächeln auf den Lippen herunter."
                  }
                }
              ],
              22
            ],
            [
              [
                "plus_ap8_30",
                "drug_addict_no_msg",
                {
                  "message": {
                    "text": "Du schluckst das Bonbon mit einem Lächeln auf den Lippen herunter... das jedoch schnell wieder verschwindet! Die Füllung besteht aus einem <strong>starken psychoaktiven Gift!</strong><t-stat-up-addict>{hr}Du bist jetzt ein Süchtiger!</t-stat-up-addict>"
                  }
                }
              ],
              13
            ],
            [
              [
                "plus_ap8_30",
                "terrorize",
                {
                  "message": {
                    "text": "Du schluckst das Bonbon mit einem Lächeln auf den Lippen herunter... das jedoch schnell wieder verschwindet! Die Füllung besteht aus einem <strong>starken psychoaktiven Gift!</strong><t-stat-up-terror>{hr}Du bist vor Angst erstarrt!</t-stat-up-terror>"
                  }
                }
              ],
              58
            ],
            [
              [
                "plus_ap8_30",
                "infect_no_msg",
                {
                  "message": {
                    "text": "Du schluckst das Bonbon mit einem Lächeln auf den Lippen herunter... das jedoch schnell wieder verschwindet! Die Füllung besteht aus einem <strong>starken psychoaktiven Gift!</strong><t-stat-up-infection>{hr}Du bist jetzt infiziert!</t-stat-up-infection>"
                  }
                }
              ],
              5
            ],
            [
              [
                "death_poison"
              ],
              2
            ]
          ]
        }
      ]
    },
    "open_doggybag": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": [
            "food_pims_#00",
            "food_tarte_#00",
            "food_chick_#00",
            "food_biscuit_#00",
            "food_bar3_#00",
            "food_bar1_#00",
            "food_sandw_#00",
            "food_bar2_#00"
          ]
        }
      ],
      "message": "Du hast dein <span class=\"tool\">{item}</span> ausgepackt und <span class=\"tool\">{items_spawn}</span> erhalten!"
    },
    "open_lunchbag": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": [
            "food_candies_#00",
            "food_noodles_hot_#00",
            "vegetable_tasty_#00",
            "meat_#00"
          ]
        }
      ],
      "message_key": "container_open"
    },
    "open_c_chest": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": [
            "pile_#00",
            "radio_off_#00",
            "pharma_#00",
            "lights_#00"
          ]
        }
      ],
      "message_key": "container_open"
    },
    "open_h_chest": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": [
            "watergun_empty_#00",
            "pilegun_empty_#00",
            "flash_#00",
            "repair_one_#00",
            "smoke_bomb_#00"
          ]
        }
      ],
      "message_key": "container_open"
    },
    "open_postbox": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": [
            "money_#00",
            "rp_book_#00",
            "rp_book_#01",
            "rp_sheets_#00"
          ]
        }
      ],
      "message_key": "container_open"
    },
    "open_postbox_xl": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": [
            "machine_gun_#00",
            "rsc_pack_2_#00",
            "rhum_#00",
            "vibr_empty_#00"
          ]
        }
      ],
      "message_key": "container_open"
    },
    "open_letterbox": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": [
            "rp_book2_#00",
            "rp_manual_#00",
            "rp_scroll_#00",
            "rp_scroll_#01",
            "rp_sheets_#00",
            "rp_letter_#00"
          ]
        }
      ],
      "message_key": "container_open"
    },
    "open_justbox": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": [
            "money_#00",
            "rp_book_#00",
            "rp_book_#01",
            "rp_sheets_#00"
          ]
        }
      ],
      "message_key": "container_open"
    },
    "open_gamebox": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": [
            "dice_#00",
            "cards_#00"
          ]
        }
      ],
      "message_key": "container_open"
    },
    "open_abox": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": [
            "bplan_r_#00"
          ]
        }
      ],
      "message_key": "container_open"
    },
    "open_cbox": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": [
            [
              "bplan_c_#00",
              50
            ],
            [
              "bplan_u_#00",
              35
            ],
            [
              "bplan_r_#00",
              10
            ],
            [
              "bplan_e_#00",
              5
            ]
          ]
        }
      ],
      "message_key": "container_open_cbox"
    },
    "open_matbox3": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "is_not_wounded_hands",
        "room_for_item"
      ],
      "result": [
        {
          "item": {
            "consume": false,
            "morph": "rsc_pack_2_#00"
          },
          "spawn": "matbox"
        }
      ],
      "message_key": "container_open_not_empty"
    },
    "open_matbox2": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "is_not_wounded_hands",
        "room_for_item"
      ],
      "result": [
        {
          "item": {
            "consume": false,
            "morph": "rsc_pack_1_#00"
          },
          "spawn": "matbox"
        }
      ],
      "message_key": "container_open_not_empty"
    },
    "open_matbox1": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "matbox"
        }
      ],
      "message_key": "container_open_empty"
    },
    "open_xmasbox3": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "item": {
            "consume": false,
            "morph": "chest_christmas_2_#00"
          },
          "spawn": "xmas_3"
        }
      ],
      "message_key": "container_open_not_empty"
    },
    "open_xmasbox2": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "item": {
            "consume": false,
            "morph": "chest_christmas_1_#00"
          },
          "spawn": "xmas_2"
        }
      ],
      "message_key": "container_open_not_empty"
    },
    "open_xmasbox1": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "xmas_1"
        }
      ],
      "message_key": "container_open_empty"
    },
    "open_metalbox": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "not_profession_tech",
        "have_can_opener",
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "metalbox"
        }
      ],
      "message_key": "container_open_tool"
    },
    "open_metalbox2": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "not_profession_tech",
        "have_can_opener",
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "metalbox2"
        }
      ],
      "message_key": "container_open_tool"
    },
    "open_catbox": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "not_profession_tech",
        "have_can_opener",
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "catbox"
        }
      ],
      "message_key": "container_open_tool"
    },
    "open_toolbox": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "not_profession_tech",
        "have_box_opener",
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "toolbox"
        }
      ],
      "message_key": "container_open_weapon"
    },
    "open_foodbox_out": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "not_profession_tech",
        "have_parcel_opener",
        "is_not_wounded_hands",
        "must_be_outside_or_exploring"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "foodbox"
        }
      ],
      "message_key": "container_open_weapon"
    },
    "open_foodbox_in": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "not_profession_tech",
        "have_parcel_opener_home",
        "is_not_wounded_hands",
        "must_be_inside"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "foodbox"
        }
      ],
      "message_key": "container_open_weapon"
    },
    "open_metalbox_t1": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "profession_tech",
        "have_can_opener_hd",
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "metalbox"
        }
      ],
      "message_key": "container_open_tool"
    },
    "open_metalbox2_t1": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "profession_tech",
        "have_can_opener_hd",
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "metalbox2"
        }
      ],
      "message_key": "container_open_tool"
    },
    "open_catbox_t1": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "profession_tech",
        "have_can_opener_hd",
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "catbox"
        }
      ],
      "message_key": "container_open_tool"
    },
    "open_toolbox_t1": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "profession_tech",
        "have_box_opener_hd",
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "toolbox"
        }
      ],
      "message_key": "container_open_weapon"
    },
    "open_foodbox_out_t1": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "profession_tech",
        "have_parcel_opener_hd",
        "is_not_wounded_hands",
        "must_be_outside_or_exploring"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "foodbox"
        }
      ],
      "message_key": "container_open_weapon"
    },
    "open_foodbox_in_t1": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "profession_tech",
        "have_parcel_opener_home_hd",
        "is_not_wounded_hands",
        "must_be_inside"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "foodbox"
        }
      ],
      "message_key": "container_open_weapon"
    },
    "open_metalbox_t2": {
      "label": "Öffnen (1 BP)",
      "at00": true,
      "meta": [
        "profession_tech",
        "not_have_can_opener_hd",
        "min_1_cp"
      ],
      "result": [
        "minus_1cp",
        "consume_item",
        {
          "spawn": "metalbox"
        }
      ],
      "message_key": "container_open"
    },
    "open_metalbox2_t2": {
      "label": "Öffnen (1 BP)",
      "at00": true,
      "meta": [
        "profession_tech",
        "not_have_can_opener_hd",
        "min_1_cp"
      ],
      "result": [
        "minus_1cp",
        "consume_item",
        {
          "spawn": "metalbox2"
        }
      ],
      "message_key": "container_open"
    },
    "open_catbox_t2": {
      "label": "Öffnen (1 BP)",
      "at00": true,
      "meta": [
        "profession_tech",
        "not_have_can_opener_hd",
        "min_1_cp"
      ],
      "result": [
        "minus_1cp",
        "consume_item",
        {
          "spawn": "catbox"
        }
      ],
      "message_key": "container_open"
    },
    "open_toolbox_t2": {
      "label": "Öffnen (1 BP)",
      "at00": true,
      "meta": [
        "profession_tech",
        "not_have_box_opener_hd",
        "min_1_cp"
      ],
      "result": [
        "minus_1cp",
        "consume_item",
        {
          "spawn": "toolbox"
        }
      ],
      "message_key": "container_open"
    },
    "open_foodbox_out_t2": {
      "label": "Öffnen (1 BP)",
      "at00": true,
      "meta": [
        "profession_tech",
        "not_have_parcel_opener_hd",
        "min_1_cp",
        "must_be_outside_or_exploring"
      ],
      "result": [
        "minus_1cp",
        "consume_item",
        {
          "spawn": "foodbox"
        }
      ],
      "message_key": "container_open"
    },
    "open_foodbox_in_t2": {
      "label": "Öffnen (1 BP)",
      "at00": true,
      "meta": [
        "profession_tech",
        "not_have_parcel_opener_home_hd",
        "min_1_cp",
        "must_be_inside"
      ],
      "result": [
        "minus_1cp",
        "consume_item",
        {
          "spawn": "foodbox"
        }
      ],
      "message_key": "container_open"
    },
    "open_safe": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "min_1_ap",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        "minus_1ap",
        {
          "group": [
            [
              [
                "do_nothing"
              ],
              95
            ],
            [
              [
                "consume_item",
                {
                  "spawn": "safe"
                }
              ],
              5
            ]
          ]
        }
      ],
      "message_key": "container_optional"
    },
    "open_asafe": {
      "label": "Öffnen",
      "at00": true,
      "meta": [
        "min_1_ap",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        "minus_1ap",
        {
          "group": [
            [
              [
                "do_nothing"
              ],
              95
            ],
            [
              [
                "consume_item",
                {
                  "spawn": "asafe"
                }
              ],
              5
            ]
          ]
        }
      ],
      "message_key": "container_optional"
    },
    "load_pilegun": {
      "label": "Laden",
      "at00": true,
      "meta": [
        "have_battery"
      ],
      "result": [
        "consume_battery",
        {
          "item": {
            "consume": false,
            "morph": "pilegun_#00"
          }
        }
      ],
      "message_key": "item_load"
    },
    "load_pilegun2": {
      "label": "Laden",
      "at00": true,
      "meta": [
        "have_battery"
      ],
      "result": [
        "consume_battery",
        {
          "item": {
            "consume": false,
            "morph": "pilegun_up_#00"
          }
        }
      ],
      "message_key": "item_load"
    },
    "load_pilegun3": {
      "label": "Laden",
      "at00": true,
      "meta": [
        "have_battery"
      ],
      "result": [
        "consume_battery",
        {
          "item": {
            "consume": false,
            "morph": "big_pgun_#00"
          }
        }
      ],
      "message_key": "item_load"
    },
    "load_mixergun": {
      "label": "Laden",
      "at00": true,
      "meta": [
        "have_battery"
      ],
      "result": [
        "consume_battery",
        {
          "item": {
            "consume": false,
            "morph": "mixergun_#00"
          }
        }
      ],
      "message_key": "item_load"
    },
    "load_chainsaw": {
      "label": "Laden",
      "at00": true,
      "meta": [
        "have_battery"
      ],
      "result": [
        "consume_battery",
        {
          "item": {
            "consume": false,
            "morph": "chainsaw_#00"
          }
        }
      ],
      "message_key": "item_load"
    },
    "load_taser": {
      "label": "Laden",
      "at00": true,
      "meta": [
        "have_battery"
      ],
      "result": [
        "consume_battery",
        {
          "item": {
            "consume": false,
            "morph": "taser_#00"
          }
        }
      ],
      "message_key": "item_load"
    },
    "load_lpointer": {
      "label": "Laden",
      "at00": true,
      "meta": [
        "have_battery"
      ],
      "result": [
        "consume_battery",
        {
          "item": {
            "consume": false,
            "morph": "lpoint4_#00"
          }
        }
      ],
      "message_key": "item_load"
    },
    "load_lamp": {
      "label": "Laden",
      "at00": true,
      "meta": [
        "have_battery"
      ],
      "result": [
        "consume_battery",
        {
          "item": {
            "consume": false,
            "morph": "lamp_on_#00"
          }
        }
      ],
      "message_key": "item_load"
    },
    "load_dildo": {
      "label": "Laden",
      "at00": true,
      "meta": [
        "have_battery"
      ],
      "result": [
        "consume_battery",
        {
          "item": {
            "consume": false,
            "morph": "vibr_#00"
          }
        }
      ],
      "message_key": "item_load"
    },
    "load_rmk2": {
      "label": "Laden",
      "at00": true,
      "meta": [
        "have_battery"
      ],
      "result": [
        "consume_battery",
        {
          "item": {
            "consume": false,
            "morph": "radius_mk2_#00"
          }
        }
      ],
      "message_key": "item_load"
    },
    "load_maglite": {
      "label": "Laden",
      "at00": true,
      "meta": [
        "have_battery"
      ],
      "result": [
        "consume_battery",
        {
          "item": {
            "consume": false,
            "morph": "maglite_2_#00"
          }
        }
      ],
      "message_key": "item_load"
    },
    "load_radio": {
      "label": "Laden",
      "at00": true,
      "meta": [
        "have_battery"
      ],
      "result": [
        "consume_battery",
        {
          "item": {
            "consume": false,
            "morph": "radio_on_#00"
          }
        }
      ],
      "message_key": "item_load"
    },
    "load_emt": {
      "label": "Laden",
      "at00": true,
      "meta": [
        "have_battery"
      ],
      "result": [
        "consume_battery",
        {
          "item": {
            "consume": false,
            "morph": "sport_elec_#00"
          }
        }
      ],
      "message_key": "item_load"
    },
    "light_cig": {
      "label": "Rauchen",
      "meta": [
        "have_matches",
        "must_be_terrorized"
      ],
      "result": [
        {
          "group": [
            [
              [
                "do_nothing"
              ],
              20
            ],
            [
              [
                "consume_matches"
              ],
              80
            ]
          ]
        },
        {
          "group": [
            [
              [
                "do_nothing"
              ],
              90
            ],
            [
              [
                "consume_item"
              ],
              10
            ]
          ]
        },
        "unterrorize"
      ],
      "message": "Du zündest eine Zigarette an. Der Rauch lässt dich kräftig Husten, vermutlich weil du daran nicht gewöhnt bist... Nach ein paar Minuten <strong>gelingt es dir dich zu beruhigen</strong>. Dieser Kurze Moment des Friedens ermöglicht lässt dich deinen Kummer vergessen und bringt dich zurück in die Wirklichkeit.<hr />Du drückst den Stummel auf dem Boden aus und bist bereit für einen weiteren Tag des Überlebens.!<t-consumed><hr />Dir fällt auf dass <strong>die Packung leer ist</strong>!</t-consumed><t-item-consumed>Das war dein <strong>letztes Streichholz</strong>... Es wird schwer sein, jetzt noch eine Zigarette anzuzünden.</t-item-consumed>"
    },
    "fill_jsplash": {
      "label": "Befüllen",
      "at00": true,
      "meta": [
        "have_canister"
      ],
      "result": [
        "consume_jerrycan",
        {
          "item": {
            "consume": false,
            "morph": "jerrygun_#00"
          }
        }
      ],
      "message_key": "item_fill"
    },
    "fill_asplash1": {
      "label": "Befüllen",
      "meta": [
        "have_water",
        "must_not_have_valve",
        "must_be_inside"
      ],
      "result": [
        "consume_water",
        {
          "item": {
            "consume": false,
            "morph": "watergun_opt_5_#00"
          }
        }
      ],
      "message_key": "item_fill"
    },
    "fill_asplash2": {
      "label": "Befüllen",
      "at00": true,
      "meta": [
        "have_water",
        "must_be_outside_or_exploring"
      ],
      "result": [
        "consume_water",
        {
          "item": {
            "consume": false,
            "morph": "watergun_opt_5_#00"
          }
        }
      ],
      "message_key": "item_fill"
    },
    "fill_splash1": {
      "label": "Befüllen",
      "meta": [
        "have_water",
        "must_not_have_valve",
        "must_be_inside"
      ],
      "result": [
        "consume_water",
        {
          "item": {
            "consume": false,
            "morph": "watergun_3_#00"
          }
        }
      ],
      "message_key": "item_fill"
    },
    "fill_splash2": {
      "label": "Befüllen",
      "at00": true,
      "meta": [
        "have_water",
        "must_be_outside_or_exploring"
      ],
      "result": [
        "consume_water",
        {
          "item": {
            "consume": false,
            "morph": "watergun_3_#00"
          }
        }
      ],
      "message_key": "item_fill"
    },
    "fill_ksplash1": {
      "label": "Befüllen",
      "meta": [
        "have_water",
        "must_not_have_valve",
        "must_be_inside"
      ],
      "result": [
        "consume_water",
        {
          "item": {
            "consume": false,
            "morph": "kalach_#00"
          }
        }
      ],
      "message_key": "item_fill"
    },
    "fill_ksplash2": {
      "label": "Befüllen",
      "at00": true,
      "meta": [
        "have_water",
        "must_be_outside_or_exploring"
      ],
      "result": [
        "consume_water",
        {
          "item": {
            "consume": false,
            "morph": "kalach_#00"
          }
        }
      ],
      "message_key": "item_fill"
    },
    "fill_grenade1": {
      "label": "Befüllen",
      "meta": [
        "have_water",
        "must_not_have_valve",
        "must_be_inside"
      ],
      "result": [
        "consume_water",
        {
          "item": {
            "consume": false,
            "morph": "grenade_#00"
          }
        }
      ],
      "message_key": "item_fill"
    },
    "fill_grenade2": {
      "label": "Befüllen",
      "at00": true,
      "meta": [
        "have_water",
        "must_be_outside_or_exploring"
      ],
      "result": [
        "consume_water",
        {
          "item": {
            "consume": false,
            "morph": "grenade_#00"
          }
        }
      ],
      "message_key": "item_fill"
    },
    "fill_exgrenade1": {
      "label": "Befüllen",
      "meta": [
        "have_water",
        "must_not_have_valve",
        "must_be_inside"
      ],
      "result": [
        "consume_water",
        {
          "item": {
            "consume": false,
            "morph": "bgrenade_#00"
          }
        }
      ],
      "message_key": "item_fill"
    },
    "fill_exgrenade2": {
      "label": "Befüllen",
      "at00": true,
      "meta": [
        "have_water",
        "must_be_outside_or_exploring"
      ],
      "result": [
        "consume_water",
        {
          "item": {
            "consume": false,
            "morph": "bgrenade_#00"
          }
        }
      ],
      "message_key": "item_fill"
    },
    "fill_watercan0": {
      "label": "Befüllen",
      "at00": true,
      "poison": "ItemAction::PoisonHandlerTransgress",
      "meta": [
        "have_water"
      ],
      "result": [
        "consume_water",
        "produce_watercan1"
      ],
      "message_key": "item_fill"
    },
    "fill_watercan1": {
      "label": "Befüllen",
      "at00": true,
      "poison": "ItemAction::PoisonHandlerTransgress",
      "meta": [
        "have_water"
      ],
      "result": [
        "consume_water",
        "produce_watercan2"
      ],
      "message_key": "item_fill"
    },
    "fill_watercan2": {
      "label": "Befüllen",
      "at00": true,
      "poison": "ItemAction::PoisonHandlerTransgress",
      "meta": [
        "have_water"
      ],
      "result": [
        "consume_water",
        "produce_watercan3"
      ],
      "message_key": "item_fill"
    },
    "fire_pilegun": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "spawn": "empty_battery",
          "item": {
            "morph": "pilegun_empty_#00",
            "consume": false
          },
          "group": "g_kill_1z_99_msg2",
          "message": {
            "text_key": "battery_use",
            "ordering": 1000
          }
        }
      ]
    },
    "fire_pilegun2": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "group": [
            [
              [
                {
                  "spawn": "battery",
                  "item": {
                    "morph": "pilegun_up_empty_#00",
                    "consume": false
                  },
                  "message": {
                    "text_key": "battery_dropped",
                    "ordering": 1000
                  }
                }
              ],
              8
            ],
            [
              [
                {
                  "spawn": "empty_battery",
                  "item": {
                    "morph": "pilegun_up_empty_#00",
                    "consume": false
                  },
                  "message": {
                    "text_key": "battery_destroyed",
                    "ordering": 1000
                  }
                }
              ],
              2
            ]
          ]
        },
        "kill_1_zombie"
      ]
    },
    "fire_pilegun3": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "group": [
            [
              [
                {
                  "spawn": "empty_battery",
                  "item": {
                    "morph": "big_pgun_empty_#00",
                    "consume": false
                  },
                  "message": {
                    "text_key": "battery_destroyed",
                    "ordering": 1000
                  }
                }
              ],
              51
            ],
            [
              [
                {
                  "spawn": "battery",
                  "item": {
                    "morph": "big_pgun_empty_#00",
                    "consume": false
                  },
                  "message": {
                    "text_key": "battery_dropped",
                    "ordering": 1000
                  }
                }
              ],
              49
            ]
          ]
        },
        "kill_2_zombie"
      ]
    },
    "fire_mixergun": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "group": [
            [
              [
                "do_nothing"
              ],
              6
            ],
            [
              [
                {
                  "item": {
                    "morph": "mixergun_empty_#00",
                    "consume": false
                  },
                  "message": {
                    "text_key": "battery_use",
                    "ordering": 1000
                  }
                }
              ],
              4
            ]
          ]
        },
        "kill_1_zombie"
      ]
    },
    "fire_chainsaw": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "group": [
            [
              [
                "do_nothing"
              ],
              7
            ],
            [
              [
                {
                  "item": {
                    "morph": "chainsaw_empty_#00",
                    "consume": false
                  },
                  "message": {
                    "text_key": "battery_use",
                    "ordering": 1000
                  }
                }
              ],
              3
            ]
          ]
        },
        "kill_3_zombie"
      ]
    },
    "fire_taser": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "group": "g_kill_1z_50_taser"
        },
        {
          "group": [
            [
              [
                "do_nothing"
              ],
              2
            ],
            [
              [
                {
                  "item": {
                    "morph": "taser_empty_#00",
                    "consume": false
                  },
                  "message": {
                    "text_key": "battery_use"
                  }
                }
              ],
              8
            ]
          ]
        }
      ]
    },
    "fire_lpointer4": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "item": {
            "morph": "lpoint3_#00",
            "consume": false
          }
        },
        "kill_2_zombie"
      ]
    },
    "fire_lpointer3": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "item": {
            "morph": "lpoint2_#00",
            "consume": false
          }
        },
        "kill_2_zombie"
      ]
    },
    "fire_lpointer2": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "item": {
            "morph": "lpoint1_#00",
            "consume": false
          }
        },
        "kill_2_zombie"
      ]
    },
    "fire_lpointer1": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "item": {
            "morph": "lpoint_#00",
            "consume": false
          }
        },
        "kill_2_zombie"
      ]
    },
    "fire_asplash5": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "item": {
            "morph": "watergun_opt_4_#00",
            "consume": false
          }
        },
        "kill_1_zombie"
      ]
    },
    "fire_asplash4": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "item": {
            "morph": "watergun_opt_3_#00",
            "consume": false
          }
        },
        "kill_1_zombie"
      ]
    },
    "fire_asplash3": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "item": {
            "morph": "watergun_opt_2_#00",
            "consume": false
          }
        },
        "kill_1_zombie"
      ]
    },
    "fire_asplash2": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "item": {
            "morph": "watergun_opt_1_#00",
            "consume": false
          }
        },
        "kill_1_zombie"
      ]
    },
    "fire_asplash1": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "item": {
            "morph": "watergun_opt_empty_#00",
            "consume": false
          }
        },
        "kill_1_zombie"
      ]
    },
    "fire_splash3": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "item": {
            "morph": "watergun_2_#00",
            "consume": false
          }
        },
        "kill_1_zombie"
      ]
    },
    "fire_splash2": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "item": {
            "morph": "watergun_1_#00",
            "consume": false
          }
        },
        "kill_1_zombie"
      ]
    },
    "fire_splash1": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "item": {
            "morph": "watergun_empty_#00",
            "consume": false
          }
        },
        "kill_1_zombie"
      ]
    },
    "fire_ksplash": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "item": {
            "morph": "kalach_#01",
            "consume": false
          }
        },
        "kill_3_zombie"
      ]
    },
    "throw_animal": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        "consume_item",
        "kill_1_zombie_s",
        {
          "picto": [
            "r_animal_#00"
          ]
        }
      ],
      "message_key": "throw_animal"
    },
    "throw_animal_cat": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "group": [
            [
              [
                "do_nothing"
              ],
              80
            ],
            [
              [
                "consume_item",
                {
                  "picto": [
                    "r_animal_#00"
                  ]
                }
              ],
              20
            ]
          ]
        },
        "kill_1_zombie_s"
      ],
      "message_key": "throw_animal"
    },
    "throw_animal_dog": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        {
          "group": [
            [
              [
                "do_nothing"
              ],
              90
            ],
            [
              [
                "consume_item",
                {
                  "picto": [
                    "r_animal_#00"
                  ]
                }
              ],
              10
            ]
          ]
        },
        "kill_1_zombie_s"
      ],
      "message_key": "throw_animal"
    },
    "throw_animal_angryc": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        "consume_item",
        {
          "group": [
            [
              [
                "inflict_wound"
              ],
              30
            ],
            [
              [
                "kill_all_zombie"
              ],
              70
            ]
          ]
        },
        {
          "picto": [
            "r_animal_#00"
          ]
        }
      ],
      "message": "<t-stat-up-tg_meta_wound>Diese Katze ist unglaublich! Sie scheint keine Angst zu haben, nicht einmal vor dir. Das Tier springt dir an die Kehle und vergräbt seine Krallen tief in deinem Fleisch.</t-stat-up-tg_meta_wound><t-kills>Diese Katze ist unglaublich! Sie scheint keine Angst zu haben, nicht einmal vor dem abartigen Gestank der Zombies. Mit mehr Zerstörungskraft als der Duracell-Hase und das Killer-Kaninchen von Caerbannog hat sie die Zone komplett bereinigt.</t-kills>"
    },
    "throw_b_machine_1": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": "g_break_30"
        },
        "kill_1_zombie"
      ]
    },
    "throw_b_bone": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": "g_break_75"
        },
        "kill_1_zombie"
      ]
    },
    "throw_b_can_opener": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        "break_item",
        {
          "group": "g_kill_1z_33"
        }
      ]
    },
    "throw_b_chair_basic": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": "g_break_30"
        },
        {
          "group": "g_kill_1z_85"
        }
      ]
    },
    "throw_b_torch": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired"
      ],
      "result": [
        {
          "item": {
            "morph": "torch_off_#00",
            "consume": false
          }
        },
        "kill_1_zombie"
      ]
    },
    "throw_b_chain": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": "g_break_25"
        },
        {
          "group": "g_kill_1z_50"
        }
      ]
    },
    "throw_b_staff": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": [
            [
              [
                "do_nothing"
              ],
              50
            ],
            [
              [
                {
                  "item": {
                    "consume": false,
                    "morph": "staff2_#00"
                  }
                },
                {
                  "message": {
                    "text": "Deine Waffe ist durch den harten Aufschlag <strong>kaputt</strong> gegangen...",
                    "ordering": 99999
                  }
                }
              ],
              70
            ]
          ]
        },
        {
          "group": "g_kill_1z_33"
        }
      ]
    },
    "throw_b_knife": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": "g_break_25"
        },
        "kill_1_zombie"
      ]
    },
    "throw_b_machine_2": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": "g_break_30"
        },
        "kill_1_zombie"
      ]
    },
    "throw_b_small_knife": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": "g_break_50"
        },
        {
          "group": "g_kill_1z_33"
        }
      ]
    },
    "throw_b_cutcut": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": "g_break_20"
        },
        "kill_2_zombie"
      ]
    },
    "throw_b_machine_3": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": "g_break_30"
        },
        "kill_1_zombie"
      ]
    },
    "throw_b_pc": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": "g_break_50"
        },
        "kill_1_zombie"
      ]
    },
    "throw_b_lawn": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": "g_break_15"
        },
        "kill_2_zombie"
      ]
    },
    "throw_b_screw": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": "g_break_35"
        },
        {
          "group": "g_kill_1z_20"
        }
      ]
    },
    "throw_b_swiss_knife": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": "g_break_50"
        },
        {
          "group": "g_kill_1z_33"
        }
      ]
    },
    "throw_b_cutter": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": "g_break_70"
        },
        {
          "group": "g_kill_1z_60"
        }
      ]
    },
    "throw_b_concrete_wall": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": "g_break_20"
        },
        "kill_1_zombie"
      ]
    },
    "throw_b_torch_off": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": "g_break_50"
        },
        {
          "group": "g_kill_1z_10"
        }
      ]
    },
    "throw_b_wrench": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": "g_break_33"
        },
        {
          "group": "g_kill_1z_50"
        }
      ]
    },
    "throw_hurling_stick": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        {
          "group": "g_break_15"
        },
        {
          "group": "g_kill_1z_60"
        }
      ]
    },
    "throw_phone": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "phone"
        },
        "kill_1_2_zombie"
      ]
    },
    "throw_projector": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "proj"
        },
        "kill_1_zombie"
      ]
    },
    "throw_grenade": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        "consume_item",
        {
          "zombies": {
            "min": 2,
            "max": 4
          }
        }
      ],
      "message_key": "weapon_use"
    },
    "throw_exgrenade": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        "consume_item",
        {
          "zombies": {
            "min": 6,
            "max": 10
          }
        }
      ],
      "message_key": "weapon_use"
    },
    "throw_boomfruit": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        "consume_item",
        {
          "zombies": {
            "min": 5,
            "max": 9
          }
        }
      ],
      "message_key": "weapon_use"
    },
    "throw_jerrygun": {
      "label": "Waffe einsetzen",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies"
      ],
      "result": [
        "kill_1_zombie",
        {
          "group": "g_empty_jerrygun",
          "message": {
            "text": "<nt-morphed>Gute Nachrichten: Es ist noch Wasser im Kanister!</nt-morphed><t-morphed><strong>Der Kanister ist LEER</strong>!</t-morphed>"
          }
        }
      ]
    },
    "bp_generic_1": {
      "label": "Lesen",
      "meta": [
        "must_be_inside_bp"
      ],
      "result": [
        "consume_item",
        {
          "bp": [
            1
          ]
        }
      ],
      "message_key": "read_blueprint"
    },
    "bp_generic_2": {
      "label": "Lesen",
      "meta": [
        "must_be_inside_bp"
      ],
      "result": [
        "consume_item",
        {
          "bp": [
            2
          ]
        }
      ],
      "message_key": "read_blueprint"
    },
    "bp_generic_3": {
      "label": "Lesen",
      "meta": [
        "must_be_inside_bp"
      ],
      "result": [
        "consume_item",
        {
          "bp": [
            3
          ]
        }
      ],
      "message_key": "read_blueprint"
    },
    "bp_generic_4": {
      "label": "Lesen",
      "meta": [
        "must_be_inside_bp"
      ],
      "result": [
        "consume_item",
        {
          "bp": [
            4
          ]
        }
      ],
      "message_key": "read_blueprint"
    },
    "bp_hotel_2": {
      "label": "Lesen",
      "meta": [
        "must_be_inside_bp"
      ],
      "result": [
        "consume_item",
        {
          "bp": [
            "small_bamba_#00",
            "small_catapult3_#00",
            "small_howlingbait_#00",
            "small_trash_#01",
            "small_trash_#02",
            "small_trash_#04",
            "small_court_#00",
            "item_plate_#03"
          ]
        }
      ],
      "message_key": "read_blueprint"
    },
    "bp_hotel_3": {
      "label": "Lesen",
      "meta": [
        "must_be_inside_bp"
      ],
      "result": [
        "consume_item",
        {
          "bp": [
            "small_sprinkler_#00",
            "item_digger_#00",
            "item_shield_#00",
            "small_city_up_#00",
            "small_falsecity_#00",
            "small_lastchance_#00",
            "small_lighthouse_#00",
            "small_strategy_#00",
            "small_valve_#00"
          ]
        }
      ],
      "message_key": "read_blueprint"
    },
    "bp_hotel_4": {
      "label": "Lesen",
      "meta": [
        "must_be_inside_bp"
      ],
      "result": [
        "consume_item",
        {
          "bp": [
            "small_cinema_#00",
            "small_derrick_#01",
            "small_trash_#06",
            "small_castle_#00",
            "small_coffin_#00"
          ]
        }
      ],
      "message_key": "read_blueprint"
    },
    "bp_bunker_2": {
      "label": "Lesen",
      "meta": [
        "must_be_inside_bp"
      ],
      "result": [
        "consume_item",
        {
          "bp": [
            "item_bgrenade_#00",
            "item_bgrenade_#01",
            "small_trash_#03",
            "small_trash_#05",
            "small_watercanon_#00",
            "small_tourello_#00",
            "small_armor_#00"
          ]
        }
      ],
      "message_key": "read_blueprint"
    },
    "bp_bunker_3": {
      "label": "Lesen",
      "meta": [
        "must_be_inside_bp"
      ],
      "result": [
        "consume_item",
        {
          "bp": [
            "item_home_def_#00",
            "item_tube_#00",
            "small_labyrinth_#00",
            "small_eden_#00",
            "small_rocket_#00",
            "small_rocketperf_#00",
            "small_trashclean_#00",
            "small_valve_#00",
            "item_jerrycan_#01"
          ]
        }
      ],
      "message_key": "read_blueprint"
    },
    "bp_bunker_4": {
      "label": "Lesen",
      "meta": [
        "must_be_inside_bp"
      ],
      "result": [
        "consume_item",
        {
          "bp": [
            "small_waterdetect_#00",
            "small_arma_#00",
            "small_slave_#00",
            "small_trash_#06",
            "small_wheel_#00"
          ]
        }
      ],
      "message_key": "read_blueprint"
    },
    "bp_hospital_2": {
      "label": "Lesen",
      "meta": [
        "must_be_inside_bp"
      ],
      "result": [
        "consume_item",
        {
          "bp": [
            "small_ikea_#00",
            "item_hmeat_#00",
            "small_tourello_#00",
            "small_watchmen_#00"
          ]
        }
      ],
      "message_key": "read_blueprint"
    },
    "bp_hospital_3": {
      "label": "Lesen",
      "meta": [
        "must_be_inside_bp"
      ],
      "result": [
        "consume_item",
        {
          "bp": [
            "item_digger_#00",
            "item_jerrycan_#01",
            "item_shield_#00",
            "small_appletree_#00",
            "small_chicken_#00",
            "small_infirmary_#00",
            "small_trashclean_#00",
            "small_lighthouse_#00",
            "small_rocketperf_#00"
          ]
        }
      ],
      "message_key": "read_blueprint"
    },
    "bp_hospital_4": {
      "label": "Lesen",
      "meta": [
        "must_be_inside_bp"
      ],
      "result": [
        "consume_item",
        {
          "bp": [
            "small_strategy_#01",
            "small_balloon_#00",
            "small_crow_#00",
            "small_derrick_#01",
            "small_pmvbig_#00"
          ]
        }
      ],
      "message_key": "read_blueprint"
    },
    "read_rp": {
      "label": "Lesen",
      "cover": false,
      "at00": true,
      "meta": [],
      "result": [
        "consume_item",
        "find_rp"
      ],
      "message": "Der Text ist überschrieben mit {rp_text}. Du beginnst, ihn zu lesen<t-rp_ok>! Der Text wurde deinem Archiv hinzugefügt.</t-rp_ok><t-rp_fail>... Leider stellst du fest, dass du diesen Text bereits kennst.</t-rp_fail>"
    },
    "read_rp_cover": {
      "label": "Lesen",
      "cover": true,
      "at00": true,
      "meta": [],
      "result": [
        "consume_item",
        "find_rp"
      ],
      "message": "Der Text ist überschrieben mit {rp_text}. Du beginnst, ihn zu lesen<t-rp_ok>! Der Text wurde deinem Archiv hinzugefügt.</t-rp_ok><t-rp_fail>... Leider stellst du fest, dass du diesen Text bereits kennst.</t-rp_fail>"
    },
    "read_banned_note": {
      "label": "Lesen",
      "cover": true,
      "at00": true,
      "meta": [],
      "result": [
        "consume_item",
        "casino_banned_note"
      ],
      "message": "Der Text ist überschrieben mit {item}. Du beginnst, ihn zu lesen.<t-bannote_ok>Diese gekritzelte Notiz gehörte früher einem verbanntem Bürger... Das einzige, was du lesen kannst, ist \"{zone}\"... Seltsam. Du zerstörst die Seite, nur um sicherzugehen, dass niemand die Nachricht liest...</t-bannote_ok><t-bannote_fail>Leider ist der Inhalt dieses Manuskripts völlig unleserlich.</t-bannote_fail>"
    },
    "vibrator": {
      "label": "Verwenden",
      "meta": [
        "must_be_inside",
        "must_be_terrorized"
      ],
      "result": [
        "unterrorize",
        {
          "item": {
            "morph": "vibr_empty_#00",
            "consume": false
          }
        },
        {
          "picto": [
            "r_maso_#00"
          ]
        }
      ],
      "message": "Du machst es dir daheim gemütlich und entspannst dich... doch dann erlebst du ein böse Überraschung: Dieses Ding ist unglaublich schmerzhaft! Du versuchst es weiter bis du Stück für Stück Gefallen daran findest. Die nach wenige Minuten einsetzende Wirkung ist berauschend! Du schwitzt und zitterst und ein wohlig-warmes Gefühl breitet sich in dir aus...Die Batterie ist komplett leer."
    },
    "watercup_1": {
      "label": "Reinigen (Wasser)",
      "meta": [
        "must_be_inside",
        "must_have_micropur_in",
        "must_not_have_purifier",
        "must_not_have_filter",
        "must_not_be_banished"
      ],
      "result": [
        "consume_micropur",
        "consume_item",
        {
          "spawn": [
            [
              "water_cup_#00",
              2
            ]
          ],
          "picto": [
            "r_solban_#00"
          ]
        }
      ],
      "message_key": "item_clean_watercup"
    },
    "watercup_2": {
      "label": "Reinigen (Wasser)",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_micropur"
      ],
      "result": [
        "consume_micropur",
        "consume_item",
        {
          "spawn": [
            [
              "water_cup_#00",
              2
            ]
          ],
          "picto": [
            "r_solban_#00"
          ]
        }
      ],
      "message_key": "item_clean_watercup"
    },
    "watercup_3": {
      "label": "In den Brunnen schütten",
      "meta": [
        "must_be_inside",
        "must_have_purifier",
        "must_not_be_banished"
      ],
      "result": [
        "consume_item",
        {
          "well": {
            "min": 2,
            "max": 2
          }
        }
      ],
      "message_key": "water_to_well"
    },
    "jerrycan_1": {
      "label": "Reinigen (Wasser)",
      "meta": [
        "must_be_inside",
        "must_have_micropur_in",
        "must_not_have_purifier",
        "must_not_be_banished"
      ],
      "result": [
        "consume_micropur",
        "consume_item",
        {
          "group": [
            [
              [
                {
                  "spawn": {
                    "what": [
                      [
                        "water_#00",
                        2
                      ]
                    ],
                    "where": "AffectItemSpawn::DropTargetPreferRucksack"
                  }
                }
              ],
              1
            ],
            [
              [
                {
                  "spawn": {
                    "what": [
                      [
                        "water_#00",
                        3
                      ]
                    ],
                    "where": "AffectItemSpawn::DropTargetPreferRucksack"
                  }
                }
              ],
              1
            ]
          ]
        }
      ],
      "message_key": "item_clean"
    },
    "jerrycan_2": {
      "label": "In den Brunnen schütten",
      "meta": [
        "must_be_inside",
        "must_have_purifier",
        "must_not_have_filter",
        "must_not_be_banished"
      ],
      "result": [
        "consume_item",
        {
          "well": {
            "min": 1,
            "max": 3
          }
        }
      ],
      "message_key": "water_to_well"
    },
    "jerrycan_3": {
      "label": "In den Brunnen schütten",
      "meta": [
        "must_be_inside",
        "must_have_filter",
        "must_not_be_banished"
      ],
      "result": [
        "consume_item",
        {
          "well": {
            "min": 4,
            "max": 9
          }
        }
      ],
      "message_key": "water_to_well"
    },
    "watercup_1b": {
      "label": "Reinigen (Wasser)",
      "meta": [
        "must_be_inside",
        "must_have_micropur_in",
        "must_be_banished"
      ],
      "result": [
        "consume_micropur",
        "consume_item",
        {
          "spawn": [
            [
              "water_cup_#00",
              2
            ]
          ],
          "picto": [
            "r_solban_#00"
          ]
        }
      ],
      "message_key": "item_clean_watercup"
    },
    "jerrycan_1b": {
      "label": "Reinigen (Wasser)",
      "meta": [
        "must_be_inside",
        "must_have_micropur_in",
        "must_be_banished"
      ],
      "result": [
        "consume_micropur",
        "consume_item",
        {
          "group": [
            [
              [
                {
                  "spawn": [
                    [
                      "water_#00",
                      2
                    ]
                  ]
                }
              ],
              1
            ],
            [
              [
                {
                  "spawn": [
                    [
                      "water_#00",
                      3
                    ]
                  ]
                }
              ],
              1
            ]
          ]
        }
      ],
      "message_key": "item_clean"
    },
    "home_def_plus": {
      "label": "Aufstellen",
      "meta": [
        "must_be_inside"
      ],
      "result": [
        "consume_item",
        {
          "home": {
            "def": 1
          }
        },
        {
          "picto": [
            "r_hbuild_#00"
          ]
        },
        {
          "message": {
            "text": "Sorgfältig befestigst du bei dir daheim ein(e) {item}. So und das hält jetzt, so viel steht schon mal fest.{hr}Dieser Gegenstand gibt deinem Haus permament <strong>{home_defense} zusätzliche Verteidigungspunkt(e).</strong>"
          }
        }
      ]
    },
    "home_store_plus": {
      "label": "Aufstellen",
      "meta": [
        "must_be_inside"
      ],
      "result": [
        "consume_item",
        {
          "home": {
            "store": 1
          }
        },
        {
          "picto": [
            "r_hbuild_#00"
          ]
        },
        {
          "message": {
            "text": "Du stellst den(die) {item} bei dir daheim auf. Zugegeben, es sieht nicht gerade ästhetisch aus, aber mal ganz ehrlich: Wen kümmert das?{hr}Dieser Gegenstand erweitert deine Truhe dauerhaft um soviele freie Plätze: <strong>{home_storage}</strong>."
          }
        }
      ]
    },
    "home_store_plus2": {
      "label": "Aufstellen",
      "meta": [
        "must_be_inside"
      ],
      "result": [
        "consume_item",
        {
          "home": {
            "store": 2
          }
        },
        {
          "picto": [
            "r_hbuild_#00"
          ]
        },
        {
          "message": {
            "text": "Du stellst den(die) {item} bei dir daheim auf. Zugegeben, es sieht nicht gerade ästhetisch aus, aber mal ganz ehrlich: Wen kümmert das?{hr}Dieser Gegenstand erweitert deine Truhe dauerhaft um soviele freie Plätze: <strong>{home_storage}</strong>."
          }
        }
      ]
    },
    "repair_1": {
      "label": "Reparieren mit",
      "at00": true,
      "target": {
        "broken": true
      },
      "meta": [
        "min_1_ap",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        "minus_1ap",
        "consume_item",
        "repair_target",
        {
          "picto": [
            "r_repair_#00"
          ]
        }
      ],
      "message": "Du hast das {item} verbraucht, um damit {target} zu reparieren. Dabei hast du {minus_ap} AP eingesetzt."
    },
    "repair_2": {
      "label": "Reparieren mit",
      "at00": true,
      "target": {
        "broken": true
      },
      "meta": [
        "min_1_ap",
        "not_tired",
        "is_not_wounded_hands"
      ],
      "result": [
        "minus_1ap",
        {
          "item": {
            "consume": false,
            "morph": "repair_kit_part_#00"
          },
          "picto": [
            "r_repair_#00"
          ]
        },
        "repair_target"
      ],
      "message": "Du hast das {item} verbraucht, um damit {target} zu reparieren. Dabei hast du {minus_ap} AP eingesetzt."
    },
    "poison_1": {
      "label": "Vergiften mit",
      "at00": true,
      "target": {
        "type": "ItemTargetDefinition::ItemSelectionTypePoison",
        "property": "can_poison",
        "poison": false
      },
      "meta": [],
      "result": [
        "consume_item",
        "poison_target"
      ],
      "message": "Du hast {target} mit {item} kombiniert und {target} erzeugt.{hr}Achtung: Du hast {target} vergiftet. Es ist <strong>nahezu unmöglich, es vom Original zu unterscheiden</strong>, sei also vorsichtig... Es liegt ganz an dir, was du damit jetzt tun möchtest."
    },
    "poison_2": {
      "label": "Vergiften mit",
      "at00": true,
      "target": {
        "type": "ItemTargetDefinition::ItemSelectionTypePoison",
        "property": "can_poison",
        "poison": false
      },
      "meta": [],
      "result": [
        "consume_item",
        "poison_infect_target"
      ],
      "message": "Du hast {target} mit {item} kombiniert und {target} erzeugt.{hr}Achtung: Du hast {target} vergiftet. Es ist <strong>nahezu unmöglich, es vom Original zu unterscheiden</strong>, sei also vorsichtig... Es liegt ganz an dir, was du damit jetzt tun möchtest."
    },
    "zonemarker_1": {
      "label": "Einsetzen",
      "cover": true,
      "at00": true,
      "meta": [],
      "result": [
        "consume_item",
        "zonemarker"
      ],
      "message": "Mithilfe des {item} hast du die Umgebung gescannt."
    },
    "zonemarker_2": {
      "label": "Einsetzen",
      "cover": true,
      "at00": true,
      "meta": [],
      "result": [
        {
          "group": [
            [
              "do_nothing",
              2
            ],
            [
              [
                {
                  "item": {
                    "consume": false,
                    "morph": "radius_mk2_part_#00"
                  }
                }
              ],
              1
            ]
          ]
        },
        "zonemarker"
      ],
      "message": "Mithilfe des {item} hast du die Umgebung gescannt."
    },
    "nessquick": {
      "label": "Einsetzen",
      "meta": [
        "must_be_outside",
        "must_be_at_buried_ruin"
      ],
      "result": [
        "consume_item",
        "nessquick"
      ],
      "message": "Du hast das Gebiet mit deinem {item} teilweise geräumt ({bury_count} Punkte geräumt)."
    },
    "bomb_1": {
      "label": "Werfen",
      "cover": true,
      "meta": [
        "must_be_outside",
        "must_be_blocked"
      ],
      "result": [
        "consume_item",
        {
          "zone": {
            "escape": 40
          }
        }
      ],
      "message_key": "escape_item"
    },
    "bomb_2": {
      "label": "Werfen",
      "cover": true,
      "meta": [
        "must_be_outside",
        "must_be_blocked"
      ],
      "result": [
        "consume_item",
        {
          "zone": {
            "escape": 300
          }
        }
      ],
      "message_key": "escape_item"
    },
    "smokebomb": {
      "label": "Werfen",
      "meta": [
        "must_be_outside_not_at_doors"
      ],
      "result": [
        "consume_item",
        {
          "zone": {
            "chatSilence": 60
          }
        }
      ],
      "message": "Du wirfst eine Rauchbombe in diese Zone und ein Großes Durcheinander bricht aus!{hr}Deine <strong>nächste Bewegungsaktion</strong> wird night in das Register eingetragen, wenn sie <strong>innerhalb von 1 Minute</strong> erfolgt."
    },
    "eat_fleshroom_1": {
      "label": "Essen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "eat_ap",
        "no_full_ap",
        "not_role_ghoul"
      ],
      "result": [
        "contaminated_zone_infect",
        "eat_ap6",
        "consume_item",
        {
          "group": [
            [
              "do_nothing",
              87
            ],
            [
              "become_ghoul_25",
              8
            ]
          ]
        }
      ]
    },
    "eat_fleshroom_2": {
      "label": "Essen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "eat_ap",
        "no_full_ap",
        "role_ghoul"
      ],
      "result": [
        "contaminated_zone_infect",
        "eat_ap6",
        "consume_item"
      ]
    },
    "eat_meat_1": {
      "label": "Essen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "eat_ap",
        "no_full_ap",
        "not_role_ghoul"
      ],
      "result": [
        "contaminated_zone_infect",
        "eat_ap6_silent",
        "consume_item",
        {
          "picto": [
            "r_cannib_#00"
          ],
          "group": [
            [
              "do_nothing",
              256
            ],
            [
              "become_ghoul_25",
              45
            ]
          ]
        }
      ],
      "message_key": "eat_human_meat"
    },
    "eat_meat_2": {
      "label": "Essen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "eat_ap",
        "role_ghoul"
      ],
      "result": [
        "contaminated_zone_infect",
        "eat_ap6_silent",
        "consume_item",
        {
          "picto": [
            "r_cannib_#00"
          ],
          "status": "satisfy_ghoul_10"
        }
      ],
      "message_key": "eat_human_meat_ghoul"
    },
    "eat_bone_1": {
      "label": "Essen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "eat_ap",
        "no_full_ap",
        "not_role_ghoul"
      ],
      "result": [
        "contaminated_zone_infect",
        "eat_ap6_silent",
        {
          "picto": [
            "r_cannib_#00"
          ],
          "item": {
            "consume": false,
            "morph": "bone_#00"
          },
          "group": [
            [
              "do_nothing",
              705
            ],
            [
              "infect",
              776
            ],
            [
              "become_ghoul_25",
              48
            ]
          ]
        }
      ],
      "message_key": "eat_human_meat"
    },
    "eat_bone_2": {
      "label": "Essen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "eat_ap",
        "role_ghoul"
      ],
      "result": [
        "contaminated_zone_infect",
        "eat_ap6_silent",
        {
          "picto": [
            "r_cannib_#00"
          ],
          "item": {
            "consume": false,
            "morph": "bone_#00"
          },
          "status": "satisfy_ghoul_10"
        }
      ],
      "message_key": "eat_human_meat_ghoul"
    },
    "eat_cadaver_1": {
      "label": "Essen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "eat_ap",
        "no_full_ap",
        "not_role_ghoul"
      ],
      "result": [
        "contaminated_zone_infect",
        "eat_ap6",
        {
          "picto": [
            "r_cannib_#00"
          ],
          "item": {
            "consume": false,
            "morph": "cadaver_remains_#00"
          }
        },
        {
          "group": [
            [
              "infect",
              1
            ],
            [
              "become_ghoul_5",
              9
            ]
          ]
        }
      ]
    },
    "eat_cadaver_2": {
      "label": "Essen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "eat_ap",
        "role_ghoul"
      ],
      "result": [
        "contaminated_zone_infect",
        "eat_ap6_silent",
        {
          "picto": [
            "r_cannib_#00"
          ],
          "item": {
            "consume": false,
            "morph": "cadaver_remains_#00"
          },
          "status": "satisfy_ghoul_30"
        }
      ],
      "message_key": "eat_human_meat_ghoul"
    },
    "ghoul_serum": {
      "label": "Einnehmen",
      "cover": true,
      "at00": true,
      "poison": "ItemAction::PoisonHandlerConsume",
      "meta": [
        "role_ghoul_serum"
      ],
      "result": [
        "consume_item",
        {
          "status": "heal_ghoul"
        }
      ],
      "message": "Unglaublich! Die ganze Gier, die dich innerlich aufgefressen hat, verschwindet langsam. Ist es wirklich möglich, dass du wieder ein Mensch geworden bist?"
    },
    "cuddle_teddy_1": {
      "label": "Knuddeln",
      "meta": [
        "must_be_terrorized",
        {
          "type": "Requirement::CrossOnFail",
          "collection": {
            "status": {
              "enabled": false,
              "status": "tg_teddy"
            }
          }
        }
      ],
      "result": [
        {
          "status": {
            "from": null,
            "to": "tg_teddy"
          },
          "group": [
            [
              "do_nothing",
              1
            ],
            [
              "unterrorize",
              1
            ]
          ]
        }
      ],
      "message": "Du drückst den {item} eng an deine Brust... <t-stat-down-terror>Tränen laufen über deine Wange, als du an die Hölle denkst, in der du lebst. Nach ein paar Minuten fühlst du dich besser!</t-stat-down-terror><nt-stat-down-terror>Aber nichts geschieht!</nt-stat-down-terror>"
    },
    "cuddle_teddy_2": {
      "label": "Knuddeln",
      "meta": [
        "must_not_be_terrorized"
      ],
      "result": [
        "terrorize"
      ],
      "message": "Du drückst den {item} eng an deine Brust... <t-stat-up-terror>Panik steigt in dir auf!</t-stat-up-terror><nt-stat-up-terror>Aber nichts geschieht!</nt-stat-up-terror>"
    },
    "clean_clothes": {
      "label": "Reinigen (Kleidung)",
      "meta": [
        "must_be_inside"
      ],
      "result": [
        {
          "status": {
            "from": null,
            "to": "tg_clothes",
            "counter": "ActionCounter::ActionTypeClothes"
          },
          "item": {
            "consume": false,
            "morph": "basic_suit_#00"
          }
        }
      ],
      "message": "Du nimmst dir ein paar Minuten, um deine {item} zu reinigen. Du schrubbst sorgfältig die Blutflecken ab und flickst ein paar kleine Löcher."
    },
    "flash_photo_3": {
      "label": "Benutzen",
      "meta": [
        "must_be_outside_not_at_doors",
        "must_have_zombies",
        "must_be_blocked"
      ],
      "result": [
        {
          "item": {
            "consume": false,
            "morph": "photo_2_#00"
          },
          "group": [
            [
              [
                "do_nothing"
              ],
              1
            ],
            [
              [
                {
                  "zone": {
                    "escape": 120
                  }
                }
              ],
              99
            ]
          ]
        }
      ],
      "message_key": "escape_item_camera"
    },
    "flash_photo_2": {
      "label": "Benutzen",
      "meta": [
        "must_be_outside_not_at_doors",
        "must_have_zombies",
        "must_be_blocked"
      ],
      "result": [
        {
          "item": {
            "consume": false,
            "morph": "photo_1_#00"
          },
          "group": [
            [
              [
                "do_nothing"
              ],
              30
            ],
            [
              [
                {
                  "zone": {
                    "escape": 60
                  }
                }
              ],
              60
            ]
          ]
        }
      ],
      "message_key": "escape_item_camera"
    },
    "flash_photo_1": {
      "label": "Benutzen",
      "meta": [
        "must_be_outside_not_at_doors",
        "must_have_zombies",
        "must_be_blocked"
      ],
      "result": [
        {
          "item": {
            "consume": false,
            "morph": "photo_off_#00"
          },
          "group": [
            [
              [
                "do_nothing"
              ],
              60
            ],
            [
              [
                {
                  "zone": {
                    "escape": 30
                  }
                }
              ],
              30
            ]
          ]
        }
      ],
      "message_key": "escape_item_camera"
    },
    "alarm_clock": {
      "label": "Benutzen",
      "at00": true,
      "meta": [],
      "result": [
        {
          "item": {
            "consume": false,
            "morph": "alarm_on_#00"
          }
        }
      ],
      "message": "Du hast {item_from} in {item_to} verwandelt."
    },
    "pumpkin": {
      "label": "Einsetzen",
      "meta": [],
      "result": [
        {
          "item": {
            "consume": false,
            "morph": "pumpkin_off_#00"
          }
        }
      ]
    },
    "flare": {
      "label": "Benutzen",
      "meta": [],
      "result": [
        {
          "custom": [
            21
          ]
        }
      ],
      "message": "<t-flare_ok>Du hast die Zone {zone} entdeckt.</t-flare_ok><t-flare_fail>Es gibt keine weitere Zone zu entdecken.</t-flare_fail>"
    },
    "hero_tamer_1": {
      "label": "Zur Bank schicken",
      "at00": true,
      "renderer": "tamer_dog_popup",
      "meta": [
        "must_be_outside_or_exploring"
      ],
      "result": [
        "hero_tamer_1"
      ],
      "message": "<t-fail><t-door-closed>Das Stadttor ist geschlossen...</t-door-closed><t-no-items>{tamer_dog} kann nichts mitnehmen, da du <strong>nichts im Rucksack hast</strong>.</t-no-items><t-too-heavy>{tamer_dog} kann deinen Rucksackinhalt nicht mitnehmen, da du einen <strong>sperrigen Gegenstand</strong> mit dir rumschleppt. Das ist dann wohl etwas zu viel des Guten für den Kleinen!</t-too-heavy></t-fail><nt-fail>Du befiehlst {tamer_dog} deinen Rucksackinhalt in die Stadt zu bringen.{hr}<strong>Deine Mitbürger werden sich über all diese Gegenstände in der Bank mächtig freuen.</strong></nt-fail>"
    },
    "hero_tamer_2": {
      "label": "Zur Bank schicken",
      "at00": true,
      "renderer": "tamer_dog_popup",
      "meta": [
        "must_be_outside_or_exploring"
      ],
      "result": [
        "hero_tamer_2"
      ],
      "message": "<t-fail><t-door-closed>Das Stadttor ist geschlossen...</t-door-closed><t-no-items>{tamer_dog} kann nichts mitnehmen, da du <strong>nichts im Rucksack hast</strong>.</t-no-items></t-fail><nt-fail>Du befiehlst {tamer_dog} deinen Rucksackinhalt in die Stadt zu bringen.{hr}<strong>Deine Mitbürger werden sich über all diese Gegenstände in der Bank mächtig freuen.</strong></nt-fail>"
    },
    "hero_tamer_1b": {
      "label": "Zur Truhe schicken",
      "at00": true,
      "renderer": "tamer_dog_popup",
      "meta": [
        "must_be_outside_or_exploring"
      ],
      "result": [
        "hero_tamer_1b"
      ],
      "message": "<t-fail><t-no-room>Deine Truhe kann nicht <strong>{items_count} Gegenstände</strong> aufnehmen: er hat <strong>{size} Platz(e)</strong> übrig.</t-no-room><t-door-closed>Das Stadttor ist geschlossen...</t-door-closed><t-no-items>{tamer_dog} kann nichts mitnehmen, da du <strong>nichts im Rucksack hast</strong>.</t-no-items><t-too-heavy>{tamer_dog} kann deinen Rucksackinhalt nicht mitnehmen, da du einen <strong>sperrigen Gegenstand</strong> mit dir rumschleppt. Das ist dann wohl etwas zu viel des Guten für den Kleinen!</t-too-heavy></t-fail><nt-fail>Du befiehlst {tamer_dog} deinen Rucksackinhalt in die Stadt zu bringen.{hr}Genau wie du es gewünscht hast, <strong>hat er alles zur Truhe in deinem Haus gebracht</strong>.{hr}Braver Junge!</nt-fail>"
    },
    "hero_tamer_2b": {
      "label": "Zur Truhe schicken",
      "at00": true,
      "renderer": "tamer_dog_popup",
      "meta": [
        "must_be_outside_or_exploring"
      ],
      "result": [
        "hero_tamer_2b"
      ],
      "message": "<t-fail><t-no-room>Deine Truhe kann nicht <strong>{items_count} Gegenstände</strong> aufnehmen: er hat <strong>{size} Platz(e)</strong> übrig.</t-no-room><t-door-closed>Das Stadttor ist geschlossen...</t-door-closed><t-no-items>{tamer_dog} kann nichts mitnehmen, da du <strong>nichts im Rucksack hast</strong>.</t-no-items></t-fail><nt-fail>Du befiehlst {tamer_dog} deinen Rucksackinhalt in die Stadt zu bringen.{hr}Genau wie du es gewünscht hast, <strong>hat er alles zur Truhe in deinem Haus gebracht</strong>.{hr}Braver Junge!</nt-fail>"
    },
    "hero_tamer_3": {
      "label": "Dopen",
      "at00": true,
      "renderer": "tamer_dog_popup",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_drug"
      ],
      "result": [
        "consume_drug",
        "hero_tamer_3"
      ],
      "message": "Du gibst deinem {tamer_dog} {items_consume}, die er gierig hinunterschlingt.{hr}Es vergeht keine Minute bis die Drogen Wirkung zeigen: Dein Fifi hat nun leuchtende Augen, ein glänzendes Fell und einen wedelnden Schwanz."
    },
    "hero_surv_1": {
      "label": "Wasser suchen",
      "renderer": "survivalist_popup",
      "meta": [
        "must_be_outside",
        "must_be_outside_3km",
        "not_yet_sbook"
      ],
      "result": [
        "contaminated_zone_infect",
        "hero_surv_0",
        "hero_surv_1"
      ],
      "message": "{casino}"
    },
    "hero_surv_2": {
      "label": "Essen suchen",
      "renderer": "survivalist_popup",
      "meta": [
        "must_be_outside",
        "no_full_ap",
        "must_be_outside_3km",
        "not_yet_sbook",
        "eat_ap"
      ],
      "result": [
        "contaminated_zone_infect",
        "hero_surv_0",
        "hero_surv_2"
      ],
      "message": "{casino}"
    },
    "hero_hunter_1": {
      "label": "Tarnen",
      "at00": true,
      "meta": [
        "must_be_outside",
        {
          "type": "Requirement::MessageOnFail",
          "collection": {
            "zombies": {
              "min": 0,
              "block": false,
              "temp": true
            }
          },
          "text": "Das kannst die <strong>Tarnkleidung</strong> nicht verwenden, solange die Zombies diese Zone kontrollieren!"
        }
      ],
      "result": [
        "hero_hunter"
      ],
      "message": "Du bist ab sofort getarnt."
    },
    "hero_hunter_2": {
      "label": "Tarnen",
      "at00": true,
      "meta": [
        "must_be_inside"
      ],
      "result": [
        "hero_hunter"
      ],
      "message": "Du bist nun getarnt."
    },
    "hero_generic_return": {
      "label": "Die Rückkehr des Helden",
      "tooltip": "Wenn du 11 km oder weniger von der Stadt entfernt bist, kehrst du sofort in die Stadt zurück!",
      "cover": true,
      "at00": true,
      "meta": [
        "must_be_outside_or_exploring",
        "must_be_outside_within_11km",
        "not_yet_hero"
      ],
      "result": [
        "hero_act",
        {
          "custom": [
            8
          ]
        }
      ]
    },
    "hero_generic_find": {
      "label": "Fund",
      "tooltip": "Wie durch ein Wunder treibst du einen nützlichen Gegenstand auf.",
      "cover": true,
      "at00": true,
      "target": {
        "type": "ItemTargetDefinition::ItemTypeSelectionType",
        "property": "hero_find"
      },
      "meta": [
        "not_yet_hero"
      ],
      "result": [
        "hero_act",
        "spawn_target",
        {
          "message": {
            "text": "So was nennt man wohl <strong>Glück</strong>! <t-inside>Du hast soeben {items_spawn} in einem Abfallberg neben deinem Haus gefunden!</t-inside><t-outside>Du hast soeben {items_spawn} im Wüstensand gefunden!</t-outside> Genau das, was du gebraucht hast!"
          }
        }
      ]
    },
    "hero_generic_find_lucky": {
      "label": "Schönes Fundstück",
      "tooltip": "Wie durch ein Wunder treibst du einen nützlichen Gegenstand auf.",
      "cover": true,
      "at00": true,
      "target": {
        "type": "ItemTargetDefinition::ItemTypeSelectionType",
        "property": "hero_find_lucky"
      },
      "meta": [
        "not_yet_hero"
      ],
      "result": [
        "hero_act",
        "spawn_target",
        {
          "message": {
            "text": "So was nennt man wohl <strong>Glück</strong>! <t-inside>Du hast soeben {items_spawn} in einem Abfallberg neben deinem Haus gefunden!</t-inside><t-outside>Du hast soeben {items_spawn} im Wüstensand gefunden!</t-outside> Genau das, was du gebraucht hast!"
          }
        }
      ]
    },
    "hero_generic_punch": {
      "label": "Wildstyle Uppercut",
      "tooltip": "Damit kannst du mit einem Schlag 2 Zombies umbringen!",
      "meta": [
        "must_be_outside_or_exploring",
        "must_have_zombies",
        "not_yet_hero"
      ],
      "result": [
        "hero_act",
        {
          "zombies": "kill_2z"
        },
        {
          "message": {
            "text": "Mit Hilfe deiner übermenschlichen Heldenkräfte hast du <strong>{kills} Zombie(s)</strong> platt gemacht!"
          }
        }
      ]
    },
    "hero_generic_ap": {
      "label": "Zweite Lunge",
      "tooltip": "Stellt deine AP wieder her und beseitigt deine Müdigkeit.",
      "cover": true,
      "at00": true,
      "meta": [
        "no_full_ap_msg",
        "not_yet_hero"
      ],
      "result": [
        "hero_act",
        "just_ap6",
        {
          "message": {
            "text": "Du atmest tief durch und drückst den Rücken durch. Auf geht\"s! Ich werde nicht hier sterben!{hr}Du hast soeben Kraft getankt und <strong>{ap} neue AP erhalten</strong>."
          }
        }
      ]
    },
    "hero_generic_immune": {
      "label": "Den Tod besiegen",
      "tooltip": "Beim nächsten Angriff wird der Durst-, Infektions- und Abhängigkeitszustand außer Kraft gesetzt.",
      "cover": true,
      "at00": true,
      "meta": [
        "not_yet_hero"
      ],
      "result": [
        "hero_act",
        "hero_immune",
        {
          "message": {
            "text": "Du versucht nochmal alle deine Kräfte für heute Abend zu mobilisieren. Die Anspannung steht dir ins Gesicht geschrieben. Du schwitzt und deine Hände zittern.{hr}Beim heutigen Angriff wirst du weder weder Durst, noch Krankheitssymptome (Infektion), noch Entzugserscheinungen verspüren."
          }
        }
      ]
    },
    "hero_generic_rescue": {
      "label": "Rettung",
      "tooltip": "Du bringst einen anderen Spieler nach Hause (dieser darf max. 2 Felder von der Stadt entfernt sein).",
      "confirm": true,
      "confirmMsg": "Möchtest du {target} heimbringen?",
      "target": {
        "type": "ItemTargetDefinition::ItemHeroicRescueType"
      },
      "meta": [
        "must_be_inside",
        "not_yet_hero"
      ],
      "result": [
        "hero_act",
        {
          "custom": [
            9
          ]
        }
      ],
      "message": "Du hast {citizen} auf heldenhafte Weise in die Stadt gebracht!"
    },
    "throw_sandball": {
      "label": "Werfen",
      "meta": [
        "must_be_outside",
        "during_christmas"
      ],
      "result": [
        {
          "custom": [
            20
          ]
        }
      ],
      "message": "<nt-fail>Du hast einen Sandball in {citizen}s Gesicht geworfen.</nt-fail><t-fail>Hier ist niemand, auf den du den Sandball werfen könntest...</t-fail>"
    },
    "special_armag": {
      "label": "Durchgang in Kraft",
      "tooltip_key": "heroic_arma_tooltip",
      "allow_when_terrorized": true,
      "meta": [
        "must_be_outside",
        "must_be_blocked"
      ],
      "result": [
        {
          "group": [
            [
              [
                "do_nothing",
                {
                  "message": {
                    "text_key": "heroic_arma_fail"
                  }
                }
              ],
              50
            ],
            [
              [
                {
                  "zone": {
                    "escape": 600
                  }
                },
                {
                  "zombies": "kill_1z"
                },
                {
                  "message": {
                    "text_key": "heroic_arma_success"
                  }
                }
              ],
              50
            ]
          ]
        }
      ]
    },
    "special_armag_d": {
      "label": "Durchgang in Kraft",
      "tooltip_key": "heroic_arma_tooltip",
      "allow_when_terrorized": true,
      "meta": [
        "must_be_outside",
        "must_be_blocked",
        "must_be_day"
      ],
      "result": [
        {
          "group": [
            [
              [
                "do_nothing",
                {
                  "message": {
                    "text_key": "heroic_arma_fail"
                  }
                }
              ],
              50
            ],
            [
              [
                {
                  "zone": {
                    "escape": 600
                  }
                },
                {
                  "zombies": "kill_1z"
                },
                {
                  "message": {
                    "text_key": "heroic_arma_success"
                  }
                }
              ],
              50
            ]
          ]
        }
      ]
    },
    "special_armag_n": {
      "label": "Durchgang in Kraft",
      "tooltip_key": "heroic_arma_tooltip",
      "allow_when_terrorized": true,
      "meta": [
        "must_be_outside",
        "must_be_blocked",
        "must_be_night"
      ],
      "result": [
        {
          "group": [
            [
              [
                "do_nothing",
                {
                  "message": {
                    "text_key": "heroic_arma_fail"
                  }
                }
              ],
              25
            ],
            [
              [
                {
                  "zone": {
                    "escape": 600
                  }
                },
                {
                  "zombies": "kill_1z"
                },
                {
                  "message": {
                    "text_key": "heroic_arma_success"
                  }
                }
              ],
              75
            ]
          ]
        }
      ]
    },
    "special_vote_shaman": {
      "label": "Den Shamane wählen",
      "target": {
        "type": "ItemTargetDefinition::ItemCitizenVoteType"
      },
      "meta": [
        "must_be_outside",
        "custom_vote_shaman"
      ],
      "result": [
        {
          "custom": [
            18
          ]
        }
      ]
    },
    "special_vote_guide": {
      "label": "Den Reiseleiter in der Außenwelt wählen",
      "target": {
        "type": "ItemTargetDefinition::ItemCitizenVoteType"
      },
      "meta": [
        "must_be_outside",
        "custom_vote_guide"
      ],
      "result": [
        {
          "custom": [
            19
          ]
        }
      ]
    },
    "improve": {
      "label": "Aufbauen",
      "meta": [
        "must_be_outside",
        "zone_is_improvable",
        "min_1_ap",
        "must_be_outside_not_at_doors",
        "feature_camping"
      ],
      "result": [
        "minus_1ap",
        "consume_item",
        {
          "zone": {
            "improve": 1.8
          }
        }
      ],
      "message": "Du befestigst den {item} und bedeckst ihn zur Tarnung mit herumliegendem Müll und vertrockneten Zweigen. Na bitte, das sollte hoffentlich deine Überlebenschancen heute Nacht verbessern. Du hast dafür 1 Aktionspunkt verbraucht."
    },
    "cm_campsite_hide": {
      "label": "Sich verstecken und die Nacht hier schlafen!",
      "meta": [
        "must_be_outside",
        "must_not_be_hidden",
        "must_not_be_tombed"
      ],
      "result": [
        "camp_hide",
        {
          "custom": [
            10
          ]
        }
      ],
      "message": "Du hast Dich notdürftig versteckt."
    },
    "cm_campsite_improve": {
      "label": "Schlafplatz verbessern (schwacher permanenter Bonus, 1AP)",
      "meta": [
        "min_1_ap",
        "not_tired",
        "must_be_outside",
        "must_not_be_hidden",
        "must_not_be_tombed",
        "zone_is_improvable"
      ],
      "result": [
        "minus_1ap",
        {
          "zone": {
            "improve": 1
          }
        }
      ],
      "message": "Du hast das hiesige Versteck verbessert."
    },
    "cm_campsite_tomb": {
      "label": "\"Grab\" schaufeln (mittelmäßiger vorübergehender Bonus, 1AP)",
      "meta": [
        "min_1_ap",
        "not_tired",
        "must_be_outside",
        "must_not_be_hidden",
        "must_not_be_tombed"
      ],
      "result": [
        "minus_1ap",
        "camp_tomb",
        {
          "custom": [
            10
          ]
        }
      ],
      "message": "Du hast Dir Dein eigenes Grab geschaufelt. Oh welche Ironie!"
    },
    "cm_campsite_unhide": {
      "label": "Versteck verlassen",
      "meta": [
        "must_be_outside",
        "must_be_hidden"
      ],
      "result": [
        "camp_unhide",
        {
          "custom": [
            11
          ]
        }
      ],
      "message": "Du hast Dein Versteck verlassen."
    },
    "cm_campsite_untomb": {
      "label": "Grab verlassen",
      "meta": [
        "must_be_outside",
        "must_be_tombed"
      ],
      "result": [
        "camp_untomb",
        {
          "custom": [
            11
          ]
        }
      ],
      "message": "Du hast Dein Grab verlassen. Die schöne Arbeit umsonst!"
    },
    "home_clean": {
      "label": "Haus aufräumen und putzen",
      "meta": [
        "must_be_inside",
        "not_yet_home_cleaned"
      ],
      "result": [
        {
          "status": {
            "from": null,
            "to": "tg_home_clean",
            "counter": "ActionCounter::ActionTypeHomeCleanup"
          }
        }
      ],
      "message": "Du räumst deinen ganzen Plunder auf und machst ein wenig Ordnung, damit es hier etwas aufgeräumter aussieht. Auch wenn\"s ne Bruchbude ist, es ist DEIN Zuhause..."
    },
    "home_shower": {
      "label": "Duschen",
      "meta": [
        "must_be_inside",
        "must_have_shower",
        "not_yet_home_showered"
      ],
      "result": [
        {
          "status": {
            "from": null,
            "to": "tg_home_shower",
            "counter": "ActionCounter::ActionTypeShower"
          }
        }
      ],
      "message": "Du springst unter die hausgemachte Dusche ohne weiter darüber nachzudenken. Das eiskalte Wasser erschreckt dich, aber dennoch bleibst du für einige Augenblicke unter dem schwachen Wasserstrahl stehen. In Ermangelung von Seife reibst du dich mit einem glatten Stein ab und versuchst, den Schlamm und die Blutflecken abzuwaschen. Dabei versuchst du, dir einzureden, dass es sich gut anfühlt."
    },
    "home_heal_1": {
      "label": "Heilen",
      "meta": [
        "min_5_ap",
        "must_be_inside",
        "must_have_hospital",
        "not_yet_home_heal_1",
        "is_wounded_h",
        "is_not_infected_h"
      ],
      "result": [
        "minus_5ap",
        "heal_wound",
        {
          "status": {
            "from": null,
            "to": "tg_home_heal_1"
          }
        }
      ],
      "message_key": "home_heal_wound"
    },
    "home_heal_2": {
      "label": "Heilen",
      "meta": [
        "min_5_ap",
        "must_be_inside",
        "must_have_hospital",
        "not_yet_home_heal_2",
        "is_not_wounded_h",
        "is_infected_h"
      ],
      "result": [
        "minus_5ap",
        "disinfect",
        {
          "status": {
            "from": null,
            "to": "tg_home_heal_2"
          }
        }
      ],
      "message_key": "home_heal_infect"
    },
    "home_heal_3": {
      "label": "Heilen",
      "meta": [
        "min_5_ap",
        "must_be_inside",
        "must_have_hospital",
        "not_yet_home_heal_2",
        "is_wounded_h",
        "is_infected_h"
      ],
      "result": [
        "minus_5ap",
        "disinfect",
        {
          "status": {
            "from": null,
            "to": "tg_home_heal_2"
          }
        }
      ],
      "message_key": "home_heal_infect"
    },
    "home_defbuff": {
      "label": "Verteidigung organisieren",
      "meta": [
        "profession_guardian",
        "min_1_ap",
        "must_be_inside",
        "must_have_guardtower",
        "not_yet_home_defbuff"
      ],
      "result": [
        "minus_1ap",
        {
          "custom": [
            13
          ],
          "status": {
            "from": null,
            "to": "tg_home_defbuff"
          }
        }
      ],
      "message": "Du hast dir etwas Zeit genommen und zur Verteidigung der Stadt beigetragen."
    },
    "home_crows": {
      "label": "Nach Ruinen Ausschau halten",
      "meta": [
        "profession_hunter",
        "must_be_inside",
        "must_have_crowsnest",
        "not_yet_home_defbuff"
      ],
      "result": [
        {
          "custom": [
            12
          ],
          "status": {
            "from": null,
            "to": "tg_home_defbuff"
          }
        }
      ],
      "message": "<t-zone>Du hast eine neue Ruine auf {zone} entdeckt!</t-zone><nt-zone>Es scheint, als gäbe es nichts mehr zu entdecken ...</nt-zone>"
    },
    "home_fillwater": {
      "label": "Wasserwaffen füllen",
      "meta": [
        "must_be_inside",
        "must_have_valve"
      ],
      "result": [
        {
          "custom": [
            14
          ]
        }
      ],
      "message": "<t-fail>Du hast <strong>keine Wasserwaffen zum Befüllen</strong> in deinem Rucksack oder deiner Truhe.</t-fail><nt-fail>Du hast {items_spawn} dank des Wasserhahns kostenlos auffüllen können.</nt-fail>"
    },
    "home_cinema": {
      "label": "Ins Kino gehen",
      "meta": [
        "must_be_inside",
        "must_have_cinema"
      ],
      "result": [
        "unterrorize"
      ],
      "message": "Ja, klar... Du hast ihn schon hunderte Male gesehen, das Thema ändert sich auch nicht allzu sehr, aber trotzdem: Es geht nichts über einen guten Zombie-Film zur Entspannung.<t-stat-down-terror><hr />Diese seltsam fernen Schreie des Schreckens haben dir den Kopf gerade gerückt: <strong>Du hast deine Angst abgeschüttelt</strong>.</t-stat-down-terror>"
    },
    "home_lab_1a": {
      "label": "Droge herstellen",
      "meta": [
        "must_be_inside",
        "must_have_home_lab_v1",
        "must_not_have_lab",
        "have_2_pharma",
        "lab_counter_below_1"
      ],
      "result": [
        {
          "status": "increase_lab_counter",
          "consume": "2_pharma",
          "group": [
            [
              "home_lab_success",
              25
            ],
            [
              "home_lab_failure",
              75
            ]
          ]
        }
      ],
      "message_key": "use_lab"
    },
    "home_lab_2a": {
      "label": "Droge herstellen",
      "meta": [
        "must_be_inside",
        "must_have_home_lab_v2",
        "must_not_have_lab",
        "have_2_pharma",
        "lab_counter_below_1"
      ],
      "result": [
        {
          "status": "increase_lab_counter",
          "consume": "2_pharma",
          "group": [
            [
              "home_lab_success",
              50
            ],
            [
              "home_lab_failure",
              50
            ]
          ]
        }
      ],
      "message_key": "use_lab"
    },
    "home_lab_3a": {
      "label": "Droge herstellen",
      "meta": [
        "must_be_inside",
        "must_have_home_lab_v3",
        "must_not_have_lab",
        "have_2_pharma",
        "lab_counter_below_1"
      ],
      "result": [
        {
          "status": "increase_lab_counter",
          "consume": "2_pharma",
          "group": [
            [
              "home_lab_success",
              75
            ],
            [
              "home_lab_failure",
              25
            ]
          ]
        }
      ],
      "message_key": "use_lab"
    },
    "home_lab_4a": {
      "label": "Droge herstellen",
      "meta": [
        "must_be_inside",
        "must_have_home_lab_v4",
        "must_not_have_lab",
        "have_2_pharma",
        "lab_counter_below_4"
      ],
      "result": [
        {
          "status": "increase_lab_counter",
          "consume": "2_pharma"
        },
        "home_lab_success"
      ],
      "message_key": "use_lab"
    },
    "home_lab_1b": {
      "label": "Droge herstellen",
      "meta": [
        "must_be_inside",
        "must_have_home_lab_v1",
        "must_have_lab",
        "have_2_pharma",
        "lab_counter_below_6"
      ],
      "result": [
        {
          "status": "increase_lab_counter",
          "consume": "2_pharma",
          "group": [
            [
              "home_lab_success",
              25
            ],
            [
              "home_lab_failure",
              75
            ]
          ]
        }
      ],
      "message_key": "use_lab"
    },
    "home_lab_2b": {
      "label": "Droge herstellen",
      "meta": [
        "must_be_inside",
        "must_have_home_lab_v2",
        "must_have_lab",
        "have_2_pharma",
        "lab_counter_below_6"
      ],
      "result": [
        {
          "status": "increase_lab_counter",
          "consume": "2_pharma",
          "group": [
            [
              "home_lab_success",
              50
            ],
            [
              "home_lab_failure",
              50
            ]
          ]
        }
      ],
      "message_key": "use_lab"
    },
    "home_lab_3b": {
      "label": "Droge herstellen",
      "meta": [
        "must_be_inside",
        "must_have_home_lab_v3",
        "must_have_lab",
        "have_2_pharma",
        "lab_counter_below_6"
      ],
      "result": [
        {
          "status": "increase_lab_counter",
          "consume": "2_pharma",
          "group": [
            [
              "home_lab_success",
              75
            ],
            [
              "home_lab_failure",
              25
            ]
          ]
        }
      ],
      "message_key": "use_lab"
    },
    "home_lab_4b": {
      "label": "Droge herstellen",
      "meta": [
        "must_be_inside",
        "must_have_home_lab_v4",
        "must_have_lab",
        "have_2_pharma",
        "lab_counter_below_9"
      ],
      "result": [
        {
          "status": "increase_lab_counter",
          "consume": "2_pharma"
        },
        "home_lab_success"
      ],
      "message_key": "use_lab"
    },
    "home_kitchen_1a": {
      "label": "Kochen",
      "target": {
        "property": "can_cook",
        "poison": false,
        "broken": false
      },
      "meta": [
        "must_be_inside",
        "must_have_home_kitchen_v1",
        "must_not_have_canteen",
        "kitchen_counter_below_1"
      ],
      "result": [
        "consume_target",
        {
          "status": "increase_kitchen_counter",
          "group": [
            [
              "home_kitchen_success",
              33
            ],
            [
              "home_kitchen_failure",
              66
            ]
          ]
        }
      ],
      "message_key": "use_kitchen"
    },
    "home_kitchen_2a": {
      "label": "Kochen",
      "target": {
        "property": "can_cook",
        "poison": false,
        "broken": false
      },
      "meta": [
        "must_be_inside",
        "must_have_home_kitchen_v2",
        "must_not_have_canteen",
        "kitchen_counter_below_1"
      ],
      "result": [
        "consume_target",
        {
          "status": "increase_kitchen_counter",
          "group": [
            [
              "home_kitchen_success",
              66
            ],
            [
              "home_kitchen_failure",
              33
            ]
          ]
        }
      ],
      "message_key": "use_kitchen"
    },
    "home_kitchen_3a": {
      "label": "Kochen",
      "target": {
        "property": "can_cook",
        "poison": false,
        "broken": false
      },
      "meta": [
        "must_be_inside",
        "must_have_home_kitchen_v3",
        "must_not_have_canteen",
        "kitchen_counter_below_2"
      ],
      "result": [
        "consume_target",
        {
          "status": "increase_kitchen_counter"
        },
        "home_kitchen_success"
      ],
      "message_key": "use_kitchen"
    },
    "home_kitchen_4a": {
      "label": "Kochen",
      "target": {
        "property": "can_cook",
        "poison": false,
        "broken": false
      },
      "meta": [
        "must_be_inside",
        "must_have_home_kitchen_v4",
        "must_not_have_canteen",
        "kitchen_counter_below_3"
      ],
      "result": [
        "consume_target",
        {
          "status": "increase_kitchen_counter"
        },
        "home_kitchen_success"
      ],
      "message_key": "use_kitchen"
    },
    "home_kitchen_1b": {
      "label": "Kochen",
      "target": {
        "property": "can_cook",
        "poison": false,
        "broken": false
      },
      "meta": [
        "must_be_inside",
        "must_have_home_kitchen_v1",
        "must_have_canteen",
        "kitchen_counter_below_4"
      ],
      "result": [
        "consume_target",
        {
          "status": "increase_kitchen_counter",
          "group": [
            [
              "home_kitchen_success",
              33
            ],
            [
              "home_kitchen_failure",
              66
            ]
          ]
        }
      ],
      "message_key": "use_kitchen"
    },
    "home_kitchen_2b": {
      "label": "Kochen",
      "target": {
        "property": "can_cook",
        "poison": false,
        "broken": false
      },
      "meta": [
        "must_be_inside",
        "must_have_home_kitchen_v2",
        "must_have_canteen",
        "kitchen_counter_below_4"
      ],
      "result": [
        "consume_target",
        {
          "status": "increase_kitchen_counter",
          "group": [
            [
              "home_kitchen_success",
              66
            ],
            [
              "home_kitchen_failure",
              33
            ]
          ]
        }
      ],
      "message_key": "use_kitchen"
    },
    "home_kitchen_3b": {
      "label": "Kochen",
      "target": {
        "property": "can_cook",
        "poison": false,
        "broken": false
      },
      "meta": [
        "must_be_inside",
        "must_have_home_kitchen_v3",
        "must_have_canteen",
        "kitchen_counter_below_5"
      ],
      "result": [
        "consume_target",
        {
          "status": "increase_kitchen_counter"
        },
        "home_kitchen_success"
      ],
      "message_key": "use_kitchen"
    },
    "home_kitchen_4b": {
      "label": "Kochen",
      "target": {
        "property": "can_cook",
        "poison": false,
        "broken": false
      },
      "meta": [
        "must_be_inside",
        "must_have_home_kitchen_v4",
        "must_have_canteen",
        "kitchen_counter_below_6"
      ],
      "result": [
        "consume_target",
        {
          "status": "increase_kitchen_counter"
        },
        "home_kitchen_success"
      ],
      "message_key": "use_kitchen"
    },
    "slaughter_4xs": {
      "label": "Ausweiden",
      "meta": [
        "must_be_inside",
        "must_have_slaughter"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "meat_4xs"
        },
        {
          "picto": [
            "r_animal_#00"
          ]
        }
      ],
      "message_key": "use_butcher"
    },
    "slaughter_2xs": {
      "label": "Ausweiden",
      "meta": [
        "must_be_inside",
        "must_have_slaughter"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "meat_2xs"
        },
        {
          "picto": [
            "r_animal_#00"
          ]
        }
      ],
      "message_key": "use_butcher"
    },
    "slaughter_4x": {
      "label": "Ausweiden",
      "meta": [
        "must_be_inside",
        "must_have_slaughter"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "meat_4x"
        },
        {
          "picto": [
            "r_animal_#00"
          ]
        }
      ],
      "message_key": "use_butcher"
    },
    "slaughter_2x": {
      "label": "Ausweiden",
      "meta": [
        "must_be_inside",
        "must_have_slaughter"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "meat_2x"
        },
        {
          "picto": [
            "r_animal_#00"
          ]
        }
      ],
      "message_key": "use_butcher"
    },
    "slaughter_bmb": {
      "label": "Ausweiden",
      "meta": [
        "must_be_inside",
        "must_have_slaughter"
      ],
      "result": [
        "consume_item",
        {
          "spawn": "meat_bmb"
        },
        {
          "picto": [
            "r_animal_#00"
          ]
        }
      ],
      "message_key": "use_butcher"
    },
    "purify_soul": {
      "label": "Läutern",
      "meta": [
        "must_be_inside",
        "must_have_hammam"
      ],
      "result": [
        "consume_item",
        {
          "town": {
            "def": 5
          }
        },
        {
          "picto": [
            "r_collec_#00"
          ]
        },
        {
          "globalpicto": [
            "r_mystic_#00"
          ]
        }
      ],
      "message": "\"Du hast die Seele gereinigt und sie friedlich gemacht.\""
    },
    "brew_shamanic_potion": {
      "label": "Herstellung eines Mystischern Trank",
      "tooltip": "Du kannst einen schamanischen Trank zubereiten, der den Rezipienten vor bösen Geistern schützt.",
      "meta": [
        "must_be_inside",
        "have_water_shaman",
        "min_1_pm",
        "role_shaman"
      ],
      "result": [
        "consume_water",
        "minus_1pm",
        {
          "spawn": "potion"
        }
      ],
      "message": "Das ist ein Musterbeispiel eines schamanischen Tranks! Nun liegt es an die, der Stadt dessen Wirksamkeit zu vermitteln und sie von deinen schamanischen Fähigkeiten zu überzeugen."
    },
    "home_rest_1": {
      "label": "Nickerchen machen",
      "meta": [
        "must_be_inside",
        "must_have_home_rest_v1",
        "not_yet_rested",
        "no_full_ap_msg"
      ],
      "result": [
        {
          "status": {
            "from": null,
            "to": "tg_rested"
          },
          "group": [
            [
              "plus_2ap_7",
              33
            ],
            [
              "do_nothing",
              66
            ]
          ]
        }
      ],
      "message_key": "use_bed"
    },
    "home_rest_2": {
      "label": "Nickerchen machen",
      "meta": [
        "must_be_inside",
        "must_have_home_rest_v2",
        "not_yet_rested",
        "no_full_ap_msg"
      ],
      "result": [
        {
          "status": {
            "from": null,
            "to": "tg_rested"
          },
          "group": [
            [
              "plus_2ap_7",
              66
            ],
            [
              "do_nothing",
              33
            ]
          ]
        }
      ],
      "message_key": "use_bed"
    },
    "home_rest_3": {
      "label": "Nickerchen machen",
      "meta": [
        "must_be_inside",
        "must_have_home_rest_v3",
        "not_yet_rested",
        "no_full_ap_msg"
      ],
      "result": [
        {
          "status": {
            "from": null,
            "to": "tg_rested"
          },
          "group": [
            [
              "plus_2ap_7",
              100
            ],
            [
              "do_nothing",
              0
            ]
          ]
        }
      ],
      "message_key": "use_bed"
    },
    "nw_break": {
      "label": "",
      "meta": [],
      "result": [
        "break_item"
      ]
    },
    "nw_destroy": {
      "label": "",
      "meta": [],
      "result": [
        "consume_item"
      ]
    },
    "nw_empty_big_pgun": {
      "label": "",
      "meta": [],
      "result": [
        {
          "item": {
            "morph": "big_pgun_empty_#00",
            "consume": false
          }
        }
      ]
    },
    "nw_empty_pilegun_up": {
      "label": "",
      "meta": [],
      "result": [
        {
          "item": {
            "morph": "pilegun_up_empty_#00",
            "consume": false
          }
        }
      ]
    },
    "nw_empty_pilegun": {
      "label": "",
      "meta": [],
      "result": [
        {
          "item": {
            "morph": "pilegun_empty_#00",
            "consume": false
          }
        }
      ]
    },
    "nw_empty_taser": {
      "label": "",
      "meta": [],
      "result": [
        {
          "item": {
            "morph": "taser_empty_#00",
            "consume": false
          }
        }
      ]
    },
    "nw_empty_mixergun": {
      "label": "",
      "meta": [],
      "result": [
        {
          "item": {
            "morph": "mixergun_empty_#00",
            "consume": false
          }
        }
      ]
    },
    "nw_empty_chainsaw": {
      "label": "",
      "meta": [],
      "result": [
        {
          "item": {
            "morph": "chainsaw_empty_#00",
            "consume": false
          }
        }
      ]
    },
    "nw_empty_phone": {
      "label": "",
      "meta": [],
      "result": [
        "consume_item",
        {
          "spawn": "phone_nw"
        }
      ]
    },
    "nw_empty_watergun": {
      "label": "",
      "meta": [],
      "result": [
        {
          "item": {
            "morph": "watergun_empty_#00",
            "consume": false
          }
        }
      ]
    },
    "nw_empty_watergun_opt": {
      "label": "",
      "meta": [],
      "result": [
        {
          "item": {
            "morph": "watergun_opt_empty_#00",
            "consume": false
          }
        }
      ]
    },
    "nw_empty_torch": {
      "label": "",
      "meta": [],
      "result": [
        {
          "item": {
            "morph": "torch_off_#00",
            "consume": false
          }
        }
      ]
    },
    "nw_empty_staff": {
      "label": "",
      "meta": [],
      "result": [
        {
          "item": {
            "morph": "staff2_#00",
            "consume": false
          }
        }
      ]
    },
    "nw_empty_dildo": {
      "label": "",
      "meta": [],
      "result": [
        {
          "item": {
            "morph": "vibr_empty_#00",
            "consume": false
          }
        }
      ]
    },
    "nw_empty_watercan": {
      "label": "",
      "meta": [],
      "result": [
        {
          "item": {
            "morph": "water_can_empty_#00",
            "consume": false
          }
        }
      ]
    },
    "nw_empty_kalach": {
      "label": "",
      "meta": [],
      "result": [
        {
          "item": {
            "morph": "kalach_#01",
            "consume": false
          }
        }
      ]
    },
    "nw_meat": {
      "label": "",
      "meta": [],
      "result": [
        {
          "item": {
            "morph": "undef_#00",
            "consume": false
          }
        },
        {
          "picto": [
            "r_animal_#00"
          ]
        }
      ]
    },
    "nw_meat_tasty": {
      "label": "",
      "meta": [],
      "result": [
        {
          "item": {
            "morph": "meat_#00",
            "consume": false
          }
        },
        {
          "picto": [
            "r_animal_#00"
          ]
        }
      ]
    }
}